{
    "docs": [
        {
            "location": "/",
            "text": "Spring Cloud\u4e2d\u56fd\u793e\u533a\n#\n\n\n\u6b22\u8fce\u6765\u5230\uff0cSpring Cloud\u4e2d\u56fd\u793e\u533a\u6587\u6863\u5730\u5740\uff0c\u6b22\u8fce\u8d21\u732e\u4f18\u8d28\u535a\u5ba2\u548c\u7ffb\u8bd1\u6587\u6863\n\n\n\n\n\u4e3a\u4ec0\u4e48\u8981\u53d1\u8d77Spring Cloud\u4e2d\u56fd\u793e\u533a\n#\n\n\nSpring Cloud\u53d1\u5c55\u52302016\u5e74\uff0c\u56fd\u5185\u5173\u6ce8\u7684\u4eba\u8d8a\u6765\u8d8a\u591a\uff0c\u4f46\u662f\u76f8\u5e94\u5b66\u4e60\u4ea4\u6d41\u7684\u5e73\u53f0\u548c\u6750\u6599\u6bd4\u8f83\u5206\u6563\uff0c\u4e0d\u5229\u4e8e\u5b66\u4e60\u4ea4\u6d41\uff0c\u56e0\u6b64Spring Cloud\u4e2d\u56fd\u793e\u533a\u5e94\u8fd0\u800c\u751f\u3002\u4e8e\u662fSpring Cloud\u4e2d\u56fd\u793e\u533a\u7531\u8bb8\u8fdb\u8054\u5408\u7fdf\u6c38\u8d85\uff0c\u5468\u7acb\u53d1\u8d77Spring cloud\u4e2d\u56fd\u793e\u533a\uff0c\u662f\u56fd\u5185\u9996\u4e2aSpring Cloud\u6784\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u7684\u4ea4\u6d41\u793e\u533a\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u4e3aSpring Boot\u6216Spring Cloud\u6280\u672f\u4eba\u5458\u63d0\u4f9b\u5206\u4eab\u548c\u4ea4\u6d41\u7684\u5e73\u53f0\uff0c\u63a8\u52a8Spring Cloud\u5728\u4e2d\u56fd\u7684\u666e\u53ca\u548c\u5e94\u7528\u3002 \u6b22\u8fceCTO\u3001\u67b6\u6784\u5e08\u3001\u5f00\u53d1\u8005\u7b49\uff0c\u5728\u8fd9\u91cc\u5b66\u4e60\u4e0e\u4ea4\u6d41\u4f7f\u7528Spring Cloud\u7684\u5b9e\u6218\u7ecf\u9a8c\u3002 \u76ee\u524dQQ\u7fa4\u4eba\u6570:2000+,\u5fae\u4fe1\u7fa4:600+\n\n\nSpring Cloud\u4e2d\u56fd\u793e\u533a\u7cbe\u82f1\u7fa4:415028731\n\n\nSpring cloud\u4e2d\u56fd\u793e\u533aQQ\u7fa4\uff1a470962790(\u5df2\u6ee1)\n\n\nSpring Cloud\u4e2d\u56fd\u793e\u533a\u5b98\u7f51:http://springcloud.cn\n\n\nSpring Cloud\u4e2d\u56fd\u793e\u533a\u8bba\u575b:http://bbs.springcloud.cn\n\n\nSpring Cloud\u4e2d\u56fd\u793e\u533a\u6587\u6863:http://docs.springcloud.cn\n\n\nspring cloud\u76ee\u524d\u56fd\u5185\u4f7f\u7528\u60c5\u51b5\n#\n\n\n\n\n\u4e2d\u56fd\u8054\u901a\u5b50\u516c\u53f8\n     http://flp.baidu.com/feedland/video/?entry=box_searchbox_feed&id=144115189637730162&from=timeline&isappinstalled=0\n     \n\n\n\u4e0a\u6d77\u7c73\u4e48\u91d1\u670d\n\n\n\u6307\u70b9\u65e0\u9650\uff08\u5317\u4eac\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8 \n\n\n\u6613\u4fdd\u8f6f\u4ef6 \u76ee\u524d\u5728\u5b9a\u5236\u5f00\u53d1\u4e2d\n       http://www.ebaotech.com/cn/\n\n\n\u5e7f\u5dde\u7b80\u6cd5\u7f51\u7edc\n\n\n\u6df1\u5733\u777f\u4e91\u667a\u5408\u79d1\u6280\u6709\u9650\u516c\u53f8\n       \u6301\u7eed\u4ea4\u4ed8\u4ea7\u54c1\u57fa\u4e8eSpring Cloud\u7814\u53d1 http://www.wise2c.com\n\n\n\u732a\u516b\u6212\u7f51\uff0c\u76ee\u524d\u8c03\u7814\u4e2d\n\n\n\u4e0a\u6d77\u4e91\u9996\u79d1\u6280\u6709\u9650\u516c\u53f8\n\n\n\u534e\u4e3a\n       \u6574\u5408netty\u8fdb\u6765\u7528rpc \u5305\u62ecnerflix\u90a3\u5957\u4e1c\u897f \u9700\u8981\u6ce8\u610f\u7684\u662fsleuth traceid\u7684\u4f20\u9012\u9700\u8981\u81ea\u5df1\u5199\u3002tps\u5728\u7269\u7406\u673a\u4e0a\u80fd\u7a81\u783420w\n\n\n\u4e1c\u8f6f\n\n\n\u5357\u4eac\u4e91\u5e10\u623f\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8\n\n\n\u56db\u4f17\u4e92\u8054(\u5317\u4eac)\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8\n\n\n\u6df1\u5733\u6469\u4ee4\u6280\u672f\u79d1\u6280\u6709\u9650\u516c\u53f8\n\n\n\u5e7f\u5dde\u4e07\u8868\u7f51\n\n\n\u89c6\u89c9\u4e2d\u56fd\n\n\n\u4e0a\u6d77\u79e6\u82cd\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8-\u4e70\u5355\u4fa0\n\n\n\u7231\u6cb9\u79d1\u6280(\u5927\u8fde)\u6709\u9650\u516c\u53f8 \n      \n\u7231\u6cb9\u79d1\u6280\u57fa\u4e8eSpringCloud\u7684\u5fae\u670d\u52a1\u5b9e\u8df5\n\n      \u6570\u636e\u5728\u7edf\u8ba1\u4e4b\u4e2d\uff0c\u4f1a\u4e00\u76f4\u6301\u7eed\u66f4\u65b0\uff0c\u656c\u8bf7\u671f\u5f85\uff01\n\n\n\n\n\u8d21\u732e\u6587\u6863\n#\n\n\n\u6b22\u8fce\u5927\u5bb6\u8d21\u732e\uff0c\u4f18\u8d28\u7684\u535a\u5ba2\u6587\u7ae0\u548c\u7ffb\u8bd1\u6587\u6863\u3002\n\n\n\u6350\u8d60\u793e\u533a\u53d1\u5c55\n#\n\n\n\u5982\u679c\u4f60\u89c9\u5f97\uff0cSpring Cloud\u4e2d\u56fd\u793e\u533a\u8fd8\u53ef\u4ee5\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u53d1\u5c55\uff0c\u4f60\u53ef\u4ee5\u6350\u8d60\u793e\u533a\uff0c\u70b9\u51fb\u4e0b\u9762\u7684\u6253\u8d4f\u6350\u8d60\uff0c\u6350\u8d60\u7684\u94b1\u5c06\u7528\u4e8e\u793e\u533a\u53d1\u5c55\u548c\u7ebf\u4e0bmeeting up\u3002 \u652f\u4ed8\u5b9d\u8d26\u53f7:Software_King@qq.com",
            "title": "\u9996\u9875"
        },
        {
            "location": "/#spring-cloud",
            "text": "\u6b22\u8fce\u6765\u5230\uff0cSpring Cloud\u4e2d\u56fd\u793e\u533a\u6587\u6863\u5730\u5740\uff0c\u6b22\u8fce\u8d21\u732e\u4f18\u8d28\u535a\u5ba2\u548c\u7ffb\u8bd1\u6587\u6863",
            "title": "Spring Cloud\u4e2d\u56fd\u793e\u533a"
        },
        {
            "location": "/#spring-cloud_1",
            "text": "Spring Cloud\u53d1\u5c55\u52302016\u5e74\uff0c\u56fd\u5185\u5173\u6ce8\u7684\u4eba\u8d8a\u6765\u8d8a\u591a\uff0c\u4f46\u662f\u76f8\u5e94\u5b66\u4e60\u4ea4\u6d41\u7684\u5e73\u53f0\u548c\u6750\u6599\u6bd4\u8f83\u5206\u6563\uff0c\u4e0d\u5229\u4e8e\u5b66\u4e60\u4ea4\u6d41\uff0c\u56e0\u6b64Spring Cloud\u4e2d\u56fd\u793e\u533a\u5e94\u8fd0\u800c\u751f\u3002\u4e8e\u662fSpring Cloud\u4e2d\u56fd\u793e\u533a\u7531\u8bb8\u8fdb\u8054\u5408\u7fdf\u6c38\u8d85\uff0c\u5468\u7acb\u53d1\u8d77Spring cloud\u4e2d\u56fd\u793e\u533a\uff0c\u662f\u56fd\u5185\u9996\u4e2aSpring Cloud\u6784\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u7684\u4ea4\u6d41\u793e\u533a\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u4e3aSpring Boot\u6216Spring Cloud\u6280\u672f\u4eba\u5458\u63d0\u4f9b\u5206\u4eab\u548c\u4ea4\u6d41\u7684\u5e73\u53f0\uff0c\u63a8\u52a8Spring Cloud\u5728\u4e2d\u56fd\u7684\u666e\u53ca\u548c\u5e94\u7528\u3002 \u6b22\u8fceCTO\u3001\u67b6\u6784\u5e08\u3001\u5f00\u53d1\u8005\u7b49\uff0c\u5728\u8fd9\u91cc\u5b66\u4e60\u4e0e\u4ea4\u6d41\u4f7f\u7528Spring Cloud\u7684\u5b9e\u6218\u7ecf\u9a8c\u3002 \u76ee\u524dQQ\u7fa4\u4eba\u6570:2000+,\u5fae\u4fe1\u7fa4:600+  Spring Cloud\u4e2d\u56fd\u793e\u533a\u7cbe\u82f1\u7fa4:415028731  Spring cloud\u4e2d\u56fd\u793e\u533aQQ\u7fa4\uff1a470962790(\u5df2\u6ee1)  Spring Cloud\u4e2d\u56fd\u793e\u533a\u5b98\u7f51:http://springcloud.cn  Spring Cloud\u4e2d\u56fd\u793e\u533a\u8bba\u575b:http://bbs.springcloud.cn  Spring Cloud\u4e2d\u56fd\u793e\u533a\u6587\u6863:http://docs.springcloud.cn",
            "title": "\u4e3a\u4ec0\u4e48\u8981\u53d1\u8d77Spring Cloud\u4e2d\u56fd\u793e\u533a"
        },
        {
            "location": "/#spring-cloud_2",
            "text": "\u4e2d\u56fd\u8054\u901a\u5b50\u516c\u53f8\n     http://flp.baidu.com/feedland/video/?entry=box_searchbox_feed&id=144115189637730162&from=timeline&isappinstalled=0\n       \u4e0a\u6d77\u7c73\u4e48\u91d1\u670d  \u6307\u70b9\u65e0\u9650\uff08\u5317\u4eac\uff09\u79d1\u6280\u6709\u9650\u516c\u53f8   \u6613\u4fdd\u8f6f\u4ef6 \u76ee\u524d\u5728\u5b9a\u5236\u5f00\u53d1\u4e2d\n       http://www.ebaotech.com/cn/  \u5e7f\u5dde\u7b80\u6cd5\u7f51\u7edc  \u6df1\u5733\u777f\u4e91\u667a\u5408\u79d1\u6280\u6709\u9650\u516c\u53f8\n       \u6301\u7eed\u4ea4\u4ed8\u4ea7\u54c1\u57fa\u4e8eSpring Cloud\u7814\u53d1 http://www.wise2c.com  \u732a\u516b\u6212\u7f51\uff0c\u76ee\u524d\u8c03\u7814\u4e2d  \u4e0a\u6d77\u4e91\u9996\u79d1\u6280\u6709\u9650\u516c\u53f8  \u534e\u4e3a\n       \u6574\u5408netty\u8fdb\u6765\u7528rpc \u5305\u62ecnerflix\u90a3\u5957\u4e1c\u897f \u9700\u8981\u6ce8\u610f\u7684\u662fsleuth traceid\u7684\u4f20\u9012\u9700\u8981\u81ea\u5df1\u5199\u3002tps\u5728\u7269\u7406\u673a\u4e0a\u80fd\u7a81\u783420w  \u4e1c\u8f6f  \u5357\u4eac\u4e91\u5e10\u623f\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8  \u56db\u4f17\u4e92\u8054(\u5317\u4eac)\u7f51\u7edc\u79d1\u6280\u6709\u9650\u516c\u53f8  \u6df1\u5733\u6469\u4ee4\u6280\u672f\u79d1\u6280\u6709\u9650\u516c\u53f8  \u5e7f\u5dde\u4e07\u8868\u7f51  \u89c6\u89c9\u4e2d\u56fd  \u4e0a\u6d77\u79e6\u82cd\u4fe1\u606f\u79d1\u6280\u6709\u9650\u516c\u53f8-\u4e70\u5355\u4fa0  \u7231\u6cb9\u79d1\u6280(\u5927\u8fde)\u6709\u9650\u516c\u53f8 \n       \u7231\u6cb9\u79d1\u6280\u57fa\u4e8eSpringCloud\u7684\u5fae\u670d\u52a1\u5b9e\u8df5 \n      \u6570\u636e\u5728\u7edf\u8ba1\u4e4b\u4e2d\uff0c\u4f1a\u4e00\u76f4\u6301\u7eed\u66f4\u65b0\uff0c\u656c\u8bf7\u671f\u5f85\uff01",
            "title": "spring cloud\u76ee\u524d\u56fd\u5185\u4f7f\u7528\u60c5\u51b5"
        },
        {
            "location": "/#_1",
            "text": "\u6b22\u8fce\u5927\u5bb6\u8d21\u732e\uff0c\u4f18\u8d28\u7684\u535a\u5ba2\u6587\u7ae0\u548c\u7ffb\u8bd1\u6587\u6863\u3002",
            "title": "\u8d21\u732e\u6587\u6863"
        },
        {
            "location": "/#_2",
            "text": "\u5982\u679c\u4f60\u89c9\u5f97\uff0cSpring Cloud\u4e2d\u56fd\u793e\u533a\u8fd8\u53ef\u4ee5\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u53d1\u5c55\uff0c\u4f60\u53ef\u4ee5\u6350\u8d60\u793e\u533a\uff0c\u70b9\u51fb\u4e0b\u9762\u7684\u6253\u8d4f\u6350\u8d60\uff0c\u6350\u8d60\u7684\u94b1\u5c06\u7528\u4e8e\u793e\u533a\u53d1\u5c55\u548c\u7ebf\u4e0bmeeting up\u3002 \u652f\u4ed8\u5b9d\u8d26\u53f7:Software_King@qq.com",
            "title": "\u6350\u8d60\u793e\u533a\u53d1\u5c55"
        },
        {
            "location": "/project/QuickStart/",
            "text": "Spring Cloud\n#\n\n\nSpring Cloud\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u5de5\u5177\uff0c\u7528\u4ee5\u5feb\u901f\u7684\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5efa\u7acb\u4e00\u4e9b\u901a\u7528\u65b9\u6848\uff08\u4f8b\u5982\u914d\u7f6e\u7ba1\u7406\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u65ad\u8def\u5668\uff0c\u667a\u80fd\u8def\u7531\uff0c\u5fae\u4ee3\u7406\uff0c\u63a7\u5236\u603b\u7ebf\uff0c\u4e00\u6b21\u6027\u4ee4\u724c\uff0c\u5168\u5c40\u9501\uff0c\u9886\u5bfc\u9009\u4e3e\uff0c\u5206\u5e03\u5f0f\u4f1a\u8bdd\uff0c\u96c6\u7fa4\u72b6\u6001\uff09\u3002\u534f\u8c03\u5206\u5e03\u5f0f\u7cfb\u7edf\u6709\u56fa\u5b9a\u6837\u677f\u6a21\u578b\uff0c\u4f7f\u7528Spring Cloud\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u57fa\u4e8e\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u6a21\u578b\u7684\u670d\u52a1\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\u4ed6\u4eec\u5c06\u5728\u4efb\u4f55\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u5305\u62ec\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u7684\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u88f8\u673a\u6570\u636e\u4e2d\u5fc3\uff0c\u548c\u7ba1\u7406\u7684\u5e73\u53f0\uff0c\u5982\u4e91\u8ba1\u7b97\u3002\n\n\nFor full documentation visit \nspring.io\n.\n\n\nQuick Start\n#\n\n\n\u57fa\u4e8eSpring Boot\u6784\u5efaSpring Cloud\uff0c\u53ef\u4ee5\u5728\u7c7b\u8def\u5f84\u4e2d\u81ea\u52a8\u5f15\u5165\u63d0\u5347\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u4e00\u7ec4\u7c7b\u5e93\u3002\u60a8\u53ef\u4ee5\u5229\u7528\u9ed8\u8ba4\u914d\u7f6e\u6765\u5feb\u901f\u542f\u52a8\uff0c\u7136\u540e\u5f53\u60a8\u9700\u8981\u65f6\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u6216\u6269\u5c55\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u53d1\u5e03\u7248\u7684\u7248\u672c\u53f7\u8981\u5728artifact:spring-cloud-dependencies\n\u4e2d\u660e\u786e\u4f7f\u7528\uff0c\u5176\u4ed6\u7684\u7248\u672c\u6807\u7b7e\u4f1a\u4eceparent\u4e2d\u83b7\u53d6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528dependencyManagement\u53bb\u505a\u7248\u672c\u4f9d\u8d56\u7ba1\u7406\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u6700\u65b0\u7248config client\u548ceureka\u7684\u914d\u7f6e\u7528\u4f8b\u3002\n\n\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.5.RELEASE</version>\n</parent>\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.SR1</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-eureka</artifactId>\n    </dependency>\n</dependencies>\n\n\n\nFeatures\n#\n\n\nSpring Cloud \u4fa7\u91cd\u63d0\u4f9b\u826f\u597d\u7684\u5f00\u7bb1\u5373\u7528\u4f53\u9a8c\n\n\n\n\nDistributed/versioned configuration\n\n\nService registration and discovery\n\n\nRouting\n\n\nService-to-service calls\n\n\nLoad balancing\n\n\nCircuit Breakers\n\n\nGlobal locks\n\n\nLeadership election and cluster state\n\n\nDistributed messaging\n\n\n\n\nSpring Cloud \u63d0\u4f9b\u4e00\u4e2a\u53d1\u5e03\u65b9\u6cd5\uff0c\u901a\u5e38\u4f60\u83b7\u5f97\u5f88\u591a\u7279\u6027\u4ec5\u662f\u7531\u4e8e\u4e00\u4e2aclasspath\u7684\u53d8\u5316\u6216\u6ce8\u89e3\uff0c\u4e0b\u9762\u662f\u4e00\u4e2adiscovery client\u7684\u4f8b\u5b50\n\n\n@SpringBootApplication\n@EnableDiscoveryClient\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n\n\n\nMain Projects\n#\n\n\n\n\n\n\nSpring Cloud Config\n\n\n\u5229\u7528git\u96c6\u4e2d\u7ba1\u7406\u7a0b\u5e8f\u7684\u914d\u7f6e\u3002\u914d\u7f6e\u8d44\u6e90\u76f4\u63a5\u6620\u5c04\u5230Spring\u7684Environment\uff0c\u53e6\u4e00\u65b9\u9762\u5982\u679c\u6709\u9700\u8981\u4e5f\u53ef\u4ee5\u88ab\u975eSpring\u5e94\u7528\u4f7f\u7528\u3002\n\n\n\n\n\n\nSpring Cloud Netflix\n\n\n\u96c6\u6210\u4e86\u8bb8\u591aNetflix\u7684\u5f00\u6e90\u8f6f\u4ef6(Eureka, Hystrix, Zuul, Archaius, etc)\n\n\n\n\n\n\nSpring Cloud Bus\n\n\n\u4e00\u4e2a\u4e8b\u4ef6\u603b\u7ebf\uff0c\u5229\u7528\u5206\u5e03\u5f0f\u6d88\u606f\u5c06\u670d\u52a1\u548c\u670d\u52a1\u5b9e\u4f8b\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e00\u4e2a\u96c6\u7fa4\u4e2d\u4f20\u64ad\u72b6\u6001\u7684\u53d8\u5316\uff0c\u6bd4\u5982\u914d\u7f6e\u66f4\u6539\u4e8b\u4ef6\u3002\n\n\n\n\n\n\nSpring Cloud for Cloud Foundry\n\n\n\u5229\u7528Pivotal Cloudfoundry\u96c6\u6210\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u670d\u52a1\u53d1\u73b0\u7684\u5b9e\u73b0\u4e5f\u4f7f\u5f97\u5b83\u5f88\u5bb9\u6613\u5b9e\u73b0SSO\u548cOAuth2\u4fdd\u62a4\u8d44\u6e90\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aCloudfoundry\u670d\u52a1\u4ee3\u7406\u3002\n\n\n\n\n\n\nSpring Cloud Cloud Foundry Service Broker\n\n\n\u4e3a\u5efa\u7acb\u7ba1\u7406\u4e91\u6258\u7ba1\u670d\u52a1\u7684\u670d\u52a1\u4ee3\u7406\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8d77\u70b9\u3002\n\n\n\n\n\n\nSpring Cloud Cluster\n\n\n\u57fa\u4e8eZookeeper, Redis, Hazelcast, Consul\u5b9e\u73b0\u7684\u9886\u5bfc\u9009\u4e3e\u548c\u5e73\u6c11\u72b6\u6001\u6a21\u5f0f\u7684\u62bd\u8c61\u548c\u5b9e\u73b0\u3002\n\n\n\n\n\n\nSpring Cloud Consul\n\n\n\u57fa\u4e8eHashicorp Consul\u5b9e\u73b0\u7684\u670d\u52a1\u53d1\u73b0\u548c\u914d\u7f6e\u7ba1\u7406\u3002\n\n\n\n\n\n\nSpring Cloud Security\n\n\n\u5728Zuul\u4ee3\u7406\u4e2d\u4e3aOAuth2 rest\u5ba2\u6237\u7aef\u548c\u8ba4\u8bc1\u5934\u8f6c\u53d1\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\n\n\n\n\n\n\nSpring Cloud Sleuth\n\n\nSpring Cloud \u5e94\u7528\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u548cZipkin\uff0cHTrace\uff0cELK\u517c\u5bb9\u3002\n\n\n\n\n\n\nSpring Cloud Data Flow\n\n\n\u4e00\u4e2a\u4e91\u672c\u5730\u7a0b\u5e8f\u548c\u64cd\u4f5c\u6a21\u578b\uff0c\u7ec4\u6210\u6570\u636e\u5fae\u670d\u52a1\u5728\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u5e73\u53f0\u4e0a\u3002\n\n\n\n\n\n\nSpring Cloud Stream\n\n\n\u57fa\u4e8e Redis\uff0c Rabbit\uff0c Kafka\u5b9e\u73b0\u7684\u6d88\u606f\u5fae\u670d\u52a1\uff0c\u7b80\u5355\u58f0\u660e\u6a21\u578b\u7528\u4ee5\u5728Spring Cloud\u5e94\u7528\u4e2d\u6536\u53d1\u6d88\u606f\u3002\n\n\n\n\n\n\nSpring Cloud Stream Modules\n\n\nSpring Cloud Stream Modules \u53ef\u7528\u4e8e\u521b\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u3002\n\n\n\n\n\n\nSpring Cloud Task\n\n\n\u77ed\u751f\u547d\u5468\u671f\u7684\u5fae\u670d\u52a1\uff0c\u4e3aSpringBooot\u5e94\u7528\u7b80\u5355\u58f0\u660e\u6dfb\u52a0\u529f\u80fd\u548c\u975e\u529f\u80fd\u7279\u6027\u3002\n\n\n\n\n\n\nSpring Cloud Zookeeper\n\n\n\u670d\u52a1\u53d1\u73b0\u548c\u914d\u7f6e\u7ba1\u7406\u57fa\u4e8eApache Zookeeper\u3002\n\n\n\n\n\n\nSpring Cloud for Amazon Web Services\n\n\n\u6613\u4e0e\u6258\u7ba1\u7684\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u7684\u96c6\u6210\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u4e0eAWS\u63d0\u4f9b\u7684\u670d\u52a1\u4f7f\u7528\u77e5\u540d\u7684Spring\u8bed\u6cd5\u548cAPI\u8fdb\u884c\u4ea4\u4e92\uff0c\u5982\u6d88\u606f\u6216\u7f13\u5b58API\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5728\u6258\u7ba1\u670d\u52a1\u5468\u56f4\u5efa\u7acb\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u57fa\u7840\u8bbe\u65bd\u6216\u7ef4\u62a4\u3002\n\n\n\n\n\n\nSpring Cloud Connectors\n\n\n\u4fbf\u4e8ePaaS\u5e94\u7528\u5728\u5404\u79cd\u5e73\u53f0\u4e0a\u8fde\u63a5\u5230\u540e\u7aef\u50cf\u6570\u636e\u5e93\u548c\u6d88\u606f\u7ecf\u7eaa\u670d\u52a1\u3002\n\n\n\n\n\n\nSpring Cloud Starters\n\n\nSpringBoot\u98ce\u683cstarter\u9879\u76ee\uff0c\u7528\u4ee5\u7b80\u5316Spring Cloud\u5ba2\u6237\u7aef\u7684\u4f9d\u8d56\u7ba1\u7406\u3002\uff08\u9879\u76ee\u5df2\u7ecf\u7ec8\u6b62\u5e76\u4e14\u5728Angel.SR2\u540e\u7684\u7248\u672c\u548c\u5176\u4ed6\u9879\u76ee\u5408\u5e76\uff09\n\n\n\n\n\n\nSpring Cloud CLI\n\n\nSpring Boot CLI \u63d2\u4ef6\u7528Groovy\u5feb\u901f\u7684\u521b\u5efaSpring Cloud\u7ec4\u4ef6\u5e94\u7528\u3002\n\n\n\n\n\n\nRelease Trains\n#\n\n\nSpring Cloud \u662f\u7531\u81ea\u4e3b\u9879\u76ee\u7ec4\u6210\u7684\uff0c\u539f\u5219\u4e0a\u91c7\u7528\u4e0d\u540c\u7684\u53d1\u884c\u8282\u594f\u3002\u7ba1\u7406\u6295\u8d44\u7ec4\u5408\u7684BOM\uff08\u7269\u6599\u6e05\u5355\uff09\u89c1\u4e0b\u6587\u3002\u53d1\u5e03\u5386\u7a0b\u6709\u540d\u79f0\uff0c\u800c\u4e0d\u662f\u7248\u672c\uff0c\u4ee5\u907f\u514d\u4e0e\u5b50\u9879\u76ee\u6df7\u4e71\u3002\u540d\u5b57\u662f\u4f26\u6566\u5730\u94c1\u7ad9\u7684\u540d\u5b57\u7684\u5b57\u6bcd\u5e8f\u5217\u6392\u5e8f\uff08\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u77e5\u9053\u65f6\u95f4\u987a\u5e8f\uff09\uff0c\u201cAngel\u201d\u662f\u7b2c\u4e00\u4e2a\u7248\u672c\uff0c\u201cBrixton\u201d\u662f\u7b2c\u4e8c\u3002\u5f53\u5b50\u9879\u76ee\u7684\u53d1\u884c\u7248\u672c\u4e2d\u7d2f\u8ba1\u4e86\u5927\u91cf\u5371\u673a\u7684bug\uff0c\u6216\u8005\u6709\u4e00\u4e2a\u4e25\u91cd\u7684bug\u9700\u8981\u8ba9\u6bcf\u4e2a\u4eba\u53ef\u89c1\uff0c\u53d1\u5e03\u5217\u8f66\u5c06\u63a8\u51fa\u201c\u670d\u52a1\u53d1\u5e03\uff08service releases\uff09\u201d\u7ed3\u5c3e\u7684\u540d\u5b57\u201d.SRX\u201d\uff0c\u5176\u4e2d\u201cX\u201d\u662f\u4e00\u4e2a\u6570\u5b57\u3002\n\n\nRelease train contents:\n\n\n\n\n\n\n\n\nComponent\n\n\nAngel.SR6\n\n\nBrixton.SR1\n\n\nBrixton.BUILD-SNAPSHOT\n\n\n\n\n\n\n\n\n\n\nspring-cloud-aws\n\n\n1.0.4.RELEASE\n\n\n1.1.0.RELEASE\n\n\n1.1.1.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-bus\n\n\n1.0.3.RELEASE\n\n\n1.1.0.RELEASE\n\n\n1.1.1.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-cli\n\n\n1.0.6.RELEASE\n\n\n1.1.1.RELEASE\n\n\n1.1.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-commons\n\n\n1.0.5.RELEASE\n\n\n1.1.1.RELEASE\n\n\n1.1.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-config\n\n\n1.0.4.RELEASE\n\n\n1.1.1.RELEASE\n\n\n1.1.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-netflix\n\n\n1.0.7.RELEASE\n\n\n1.1.2.RELEASE\n\n\n1.1.3.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-security\n\n\n1.0.3.RELEASE\n\n\n1.1.0.RELEASE\n\n\n1.1.1.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-starters\n\n\n1.0.6.RELEASE\n\n\n\n\n\n\n\n\n\n\nspring-cloud-cloudfoundry\n\n\n\n\n1.0.0.RELEASE\n\n\n1.0.1.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-cluster\n\n\n\n\n1.0.0.RELEASE\n\n\n1.0.1.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-consul\n\n\n\n\n1.0.1.RELEASE\n\n\n1.0.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-sleuth\n\n\n\n\n1.0.1.RELEASE\n\n\n1.0.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-stream\n\n\n\n\n1.0.2.RELEASE\n\n\n1.0.3.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-zookeeper\n\n\n\n\n1.0.1.RELEASE\n\n\n1.0.2.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-boot\n\n\n1.2.8.RELEASE\n\n\n1.3.5.RELEASE\n\n\n1.3.5.RELEASE\n\n\n\n\n\n\nspring-cloud-stream-app-starters*\n\n\n\n\n\n\n1.0.0.BUILD-SNAPSHOT\n\n\n\n\n\n\nspring-cloud-task*\n\n\n\n\n\n\n1.0.0.BUILD-SNAPSHOT\n\n\n\n\n\n\n\n\n(*) \u8fd9\u4e9b\u9879\u76ee\u5728\u4ed6\u4eec\u88ab\u53d1\u5e03\u4e4b\u524d\u8fd8\u4e0d\u662f Brixton \u7684\u4e00\u90e8\u5206\n\n\nAngel\u57fa\u4e8eSpring Boot 1.2.x\uff0c\u67d0\u4e9b\u90e8\u5206\u548c1.3.x\u4e0d\u517c\u5bb9\u3002Brixton\u57fa\u4e8eSpring Boot 1.3.x\u5c3d\u53ef\u80fd\u7684\u517c\u5bb91.2.x\uff0c\u4e00\u4e9b\u57fa\u4e8eAngel\u7684\u5e93\u548c\u57fa\u4e8eAngel\u7684\u5927\u90e8\u5206\u5e94\u7528\u53ef\u4ee5\u5f88\u597d\u7684\u8fd0\u884c\u5728Brixton\u4e0a\uff0c\u4f46spring-cloud-security 1.0.x \u7528\u5230\u7684OAuth2\u7279\u6027\u5c06\u9700\u8981\u5168\u90e8\u4fee\u6539\uff08\u4ed6\u4eec\u5927\u591a\u642c\u5230Spring Boot1.3.0\uff09\u3002\n\n\n\u4f7f\u7528\u4f60\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u6765\u63a7\u5236\u7248\u672c\u3002\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528Maven\uff0c\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u7248\u672c\u5ba3\u5e03\u83b7\u80dc\uff0c\u6240\u4ee5\u7533\u62a5\u6750\u6599\u6e05\u5355\u7684\u987a\u5e8f\uff0c\u4e0e\u7b2c\u4e00\u4e2a\u901a\u5e38\u662f\u6700\u65b0\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528Spring Boot 1.3.6\u542f\u52a8Brixton.RELEASE\uff0c\u628a\u542f\u52a8BOM\u653e\u5728\u7b2c\u4e00\uff09\u3002\u540c\u6837\u7684\u89c4\u5219\u9002\u7528\u4e8eGradle\uff0c\u5982\u679c\u4f60\u4f7f\u7528Spring\u7684\u4f9d\u8d56\u7ba1\u7406\u63d2\u4ef6\u3002\n\n\n\n\nNOTE: starting after Brixton.M4 the release train contains a \nspring-cloud-starter-dependencies\n as well as the \nspring-cloud-starter-parent\n. Use the parent as you would the \nspring-boot-starter-parent\n (if you are using Maven). If you only need dependency management, the \"dependencies\" version is a BOM-only version of the same thing (it just contains dependency management and no plugin declarations or direct references to Spring or Spring Boot). If you are using the Spring Boot parent POM, then you can use the BOM from Spring Cloud.\n\n\n\n\nSample Projects\n#\n\n\nConfig Server\n\n\nService Registry\n\n\nCircuit Breaker Dashboard\n\n\nBusiness Application\n(Customers and Stores)\n\n\nOAuth2 Authorization Server\n\n\nOAuth2 SSO Client\n\n\nIntegration Test Samples",
            "title": "Quick Start"
        },
        {
            "location": "/project/QuickStart/#spring-cloud",
            "text": "Spring Cloud\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u5de5\u5177\uff0c\u7528\u4ee5\u5feb\u901f\u7684\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5efa\u7acb\u4e00\u4e9b\u901a\u7528\u65b9\u6848\uff08\u4f8b\u5982\u914d\u7f6e\u7ba1\u7406\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u65ad\u8def\u5668\uff0c\u667a\u80fd\u8def\u7531\uff0c\u5fae\u4ee3\u7406\uff0c\u63a7\u5236\u603b\u7ebf\uff0c\u4e00\u6b21\u6027\u4ee4\u724c\uff0c\u5168\u5c40\u9501\uff0c\u9886\u5bfc\u9009\u4e3e\uff0c\u5206\u5e03\u5f0f\u4f1a\u8bdd\uff0c\u96c6\u7fa4\u72b6\u6001\uff09\u3002\u534f\u8c03\u5206\u5e03\u5f0f\u7cfb\u7edf\u6709\u56fa\u5b9a\u6837\u677f\u6a21\u578b\uff0c\u4f7f\u7528Spring Cloud\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u57fa\u4e8e\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u6a21\u578b\u7684\u670d\u52a1\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\u4ed6\u4eec\u5c06\u5728\u4efb\u4f55\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u5de5\u4f5c\uff0c\u5305\u62ec\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u7684\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u88f8\u673a\u6570\u636e\u4e2d\u5fc3\uff0c\u548c\u7ba1\u7406\u7684\u5e73\u53f0\uff0c\u5982\u4e91\u8ba1\u7b97\u3002  For full documentation visit  spring.io .",
            "title": "Spring Cloud"
        },
        {
            "location": "/project/QuickStart/#quick-start",
            "text": "\u57fa\u4e8eSpring Boot\u6784\u5efaSpring Cloud\uff0c\u53ef\u4ee5\u5728\u7c7b\u8def\u5f84\u4e2d\u81ea\u52a8\u5f15\u5165\u63d0\u5347\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u4e00\u7ec4\u7c7b\u5e93\u3002\u60a8\u53ef\u4ee5\u5229\u7528\u9ed8\u8ba4\u914d\u7f6e\u6765\u5feb\u901f\u542f\u52a8\uff0c\u7136\u540e\u5f53\u60a8\u9700\u8981\u65f6\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u6216\u6269\u5c55\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u89e3\u51b3\u65b9\u6848\u3002  \u53d1\u5e03\u7248\u7684\u7248\u672c\u53f7\u8981\u5728artifact:spring-cloud-dependencies\n\u4e2d\u660e\u786e\u4f7f\u7528\uff0c\u5176\u4ed6\u7684\u7248\u672c\u6807\u7b7e\u4f1a\u4eceparent\u4e2d\u83b7\u53d6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528dependencyManagement\u53bb\u505a\u7248\u672c\u4f9d\u8d56\u7ba1\u7406\uff0c\u4e0b\u9762\u662f\u4f7f\u7528\u6700\u65b0\u7248config client\u548ceureka\u7684\u914d\u7f6e\u7528\u4f8b\u3002  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.5.RELEASE</version>\n</parent>\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.SR1</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-eureka</artifactId>\n    </dependency>\n</dependencies>",
            "title": "Quick Start"
        },
        {
            "location": "/project/QuickStart/#features",
            "text": "Spring Cloud \u4fa7\u91cd\u63d0\u4f9b\u826f\u597d\u7684\u5f00\u7bb1\u5373\u7528\u4f53\u9a8c   Distributed/versioned configuration  Service registration and discovery  Routing  Service-to-service calls  Load balancing  Circuit Breakers  Global locks  Leadership election and cluster state  Distributed messaging   Spring Cloud \u63d0\u4f9b\u4e00\u4e2a\u53d1\u5e03\u65b9\u6cd5\uff0c\u901a\u5e38\u4f60\u83b7\u5f97\u5f88\u591a\u7279\u6027\u4ec5\u662f\u7531\u4e8e\u4e00\u4e2aclasspath\u7684\u53d8\u5316\u6216\u6ce8\u89e3\uff0c\u4e0b\u9762\u662f\u4e00\u4e2adiscovery client\u7684\u4f8b\u5b50  @SpringBootApplication\n@EnableDiscoveryClient\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}",
            "title": "Features"
        },
        {
            "location": "/project/QuickStart/#main-projects",
            "text": "Spring Cloud Config  \u5229\u7528git\u96c6\u4e2d\u7ba1\u7406\u7a0b\u5e8f\u7684\u914d\u7f6e\u3002\u914d\u7f6e\u8d44\u6e90\u76f4\u63a5\u6620\u5c04\u5230Spring\u7684Environment\uff0c\u53e6\u4e00\u65b9\u9762\u5982\u679c\u6709\u9700\u8981\u4e5f\u53ef\u4ee5\u88ab\u975eSpring\u5e94\u7528\u4f7f\u7528\u3002    Spring Cloud Netflix  \u96c6\u6210\u4e86\u8bb8\u591aNetflix\u7684\u5f00\u6e90\u8f6f\u4ef6(Eureka, Hystrix, Zuul, Archaius, etc)    Spring Cloud Bus  \u4e00\u4e2a\u4e8b\u4ef6\u603b\u7ebf\uff0c\u5229\u7528\u5206\u5e03\u5f0f\u6d88\u606f\u5c06\u670d\u52a1\u548c\u670d\u52a1\u5b9e\u4f8b\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7528\u4e8e\u5728\u4e00\u4e2a\u96c6\u7fa4\u4e2d\u4f20\u64ad\u72b6\u6001\u7684\u53d8\u5316\uff0c\u6bd4\u5982\u914d\u7f6e\u66f4\u6539\u4e8b\u4ef6\u3002    Spring Cloud for Cloud Foundry  \u5229\u7528Pivotal Cloudfoundry\u96c6\u6210\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u670d\u52a1\u53d1\u73b0\u7684\u5b9e\u73b0\u4e5f\u4f7f\u5f97\u5b83\u5f88\u5bb9\u6613\u5b9e\u73b0SSO\u548cOAuth2\u4fdd\u62a4\u8d44\u6e90\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aCloudfoundry\u670d\u52a1\u4ee3\u7406\u3002    Spring Cloud Cloud Foundry Service Broker  \u4e3a\u5efa\u7acb\u7ba1\u7406\u4e91\u6258\u7ba1\u670d\u52a1\u7684\u670d\u52a1\u4ee3\u7406\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8d77\u70b9\u3002    Spring Cloud Cluster  \u57fa\u4e8eZookeeper, Redis, Hazelcast, Consul\u5b9e\u73b0\u7684\u9886\u5bfc\u9009\u4e3e\u548c\u5e73\u6c11\u72b6\u6001\u6a21\u5f0f\u7684\u62bd\u8c61\u548c\u5b9e\u73b0\u3002    Spring Cloud Consul  \u57fa\u4e8eHashicorp Consul\u5b9e\u73b0\u7684\u670d\u52a1\u53d1\u73b0\u548c\u914d\u7f6e\u7ba1\u7406\u3002    Spring Cloud Security  \u5728Zuul\u4ee3\u7406\u4e2d\u4e3aOAuth2 rest\u5ba2\u6237\u7aef\u548c\u8ba4\u8bc1\u5934\u8f6c\u53d1\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861    Spring Cloud Sleuth  Spring Cloud \u5e94\u7528\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf\uff0c\u548cZipkin\uff0cHTrace\uff0cELK\u517c\u5bb9\u3002    Spring Cloud Data Flow  \u4e00\u4e2a\u4e91\u672c\u5730\u7a0b\u5e8f\u548c\u64cd\u4f5c\u6a21\u578b\uff0c\u7ec4\u6210\u6570\u636e\u5fae\u670d\u52a1\u5728\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u5e73\u53f0\u4e0a\u3002    Spring Cloud Stream  \u57fa\u4e8e Redis\uff0c Rabbit\uff0c Kafka\u5b9e\u73b0\u7684\u6d88\u606f\u5fae\u670d\u52a1\uff0c\u7b80\u5355\u58f0\u660e\u6a21\u578b\u7528\u4ee5\u5728Spring Cloud\u5e94\u7528\u4e2d\u6536\u53d1\u6d88\u606f\u3002    Spring Cloud Stream Modules  Spring Cloud Stream Modules \u53ef\u7528\u4e8e\u521b\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u3002    Spring Cloud Task  \u77ed\u751f\u547d\u5468\u671f\u7684\u5fae\u670d\u52a1\uff0c\u4e3aSpringBooot\u5e94\u7528\u7b80\u5355\u58f0\u660e\u6dfb\u52a0\u529f\u80fd\u548c\u975e\u529f\u80fd\u7279\u6027\u3002    Spring Cloud Zookeeper  \u670d\u52a1\u53d1\u73b0\u548c\u914d\u7f6e\u7ba1\u7406\u57fa\u4e8eApache Zookeeper\u3002    Spring Cloud for Amazon Web Services  \u6613\u4e0e\u6258\u7ba1\u7684\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1\u7684\u96c6\u6210\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u4e0eAWS\u63d0\u4f9b\u7684\u670d\u52a1\u4f7f\u7528\u77e5\u540d\u7684Spring\u8bed\u6cd5\u548cAPI\u8fdb\u884c\u4ea4\u4e92\uff0c\u5982\u6d88\u606f\u6216\u7f13\u5b58API\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5728\u6258\u7ba1\u670d\u52a1\u5468\u56f4\u5efa\u7acb\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u57fa\u7840\u8bbe\u65bd\u6216\u7ef4\u62a4\u3002    Spring Cloud Connectors  \u4fbf\u4e8ePaaS\u5e94\u7528\u5728\u5404\u79cd\u5e73\u53f0\u4e0a\u8fde\u63a5\u5230\u540e\u7aef\u50cf\u6570\u636e\u5e93\u548c\u6d88\u606f\u7ecf\u7eaa\u670d\u52a1\u3002    Spring Cloud Starters  SpringBoot\u98ce\u683cstarter\u9879\u76ee\uff0c\u7528\u4ee5\u7b80\u5316Spring Cloud\u5ba2\u6237\u7aef\u7684\u4f9d\u8d56\u7ba1\u7406\u3002\uff08\u9879\u76ee\u5df2\u7ecf\u7ec8\u6b62\u5e76\u4e14\u5728Angel.SR2\u540e\u7684\u7248\u672c\u548c\u5176\u4ed6\u9879\u76ee\u5408\u5e76\uff09    Spring Cloud CLI  Spring Boot CLI \u63d2\u4ef6\u7528Groovy\u5feb\u901f\u7684\u521b\u5efaSpring Cloud\u7ec4\u4ef6\u5e94\u7528\u3002",
            "title": "Main Projects"
        },
        {
            "location": "/project/QuickStart/#release-trains",
            "text": "Spring Cloud \u662f\u7531\u81ea\u4e3b\u9879\u76ee\u7ec4\u6210\u7684\uff0c\u539f\u5219\u4e0a\u91c7\u7528\u4e0d\u540c\u7684\u53d1\u884c\u8282\u594f\u3002\u7ba1\u7406\u6295\u8d44\u7ec4\u5408\u7684BOM\uff08\u7269\u6599\u6e05\u5355\uff09\u89c1\u4e0b\u6587\u3002\u53d1\u5e03\u5386\u7a0b\u6709\u540d\u79f0\uff0c\u800c\u4e0d\u662f\u7248\u672c\uff0c\u4ee5\u907f\u514d\u4e0e\u5b50\u9879\u76ee\u6df7\u4e71\u3002\u540d\u5b57\u662f\u4f26\u6566\u5730\u94c1\u7ad9\u7684\u540d\u5b57\u7684\u5b57\u6bcd\u5e8f\u5217\u6392\u5e8f\uff08\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u77e5\u9053\u65f6\u95f4\u987a\u5e8f\uff09\uff0c\u201cAngel\u201d\u662f\u7b2c\u4e00\u4e2a\u7248\u672c\uff0c\u201cBrixton\u201d\u662f\u7b2c\u4e8c\u3002\u5f53\u5b50\u9879\u76ee\u7684\u53d1\u884c\u7248\u672c\u4e2d\u7d2f\u8ba1\u4e86\u5927\u91cf\u5371\u673a\u7684bug\uff0c\u6216\u8005\u6709\u4e00\u4e2a\u4e25\u91cd\u7684bug\u9700\u8981\u8ba9\u6bcf\u4e2a\u4eba\u53ef\u89c1\uff0c\u53d1\u5e03\u5217\u8f66\u5c06\u63a8\u51fa\u201c\u670d\u52a1\u53d1\u5e03\uff08service releases\uff09\u201d\u7ed3\u5c3e\u7684\u540d\u5b57\u201d.SRX\u201d\uff0c\u5176\u4e2d\u201cX\u201d\u662f\u4e00\u4e2a\u6570\u5b57\u3002  Release train contents:     Component  Angel.SR6  Brixton.SR1  Brixton.BUILD-SNAPSHOT      spring-cloud-aws  1.0.4.RELEASE  1.1.0.RELEASE  1.1.1.BUILD-SNAPSHOT    spring-cloud-bus  1.0.3.RELEASE  1.1.0.RELEASE  1.1.1.BUILD-SNAPSHOT    spring-cloud-cli  1.0.6.RELEASE  1.1.1.RELEASE  1.1.2.BUILD-SNAPSHOT    spring-cloud-commons  1.0.5.RELEASE  1.1.1.RELEASE  1.1.2.BUILD-SNAPSHOT    spring-cloud-config  1.0.4.RELEASE  1.1.1.RELEASE  1.1.2.BUILD-SNAPSHOT    spring-cloud-netflix  1.0.7.RELEASE  1.1.2.RELEASE  1.1.3.BUILD-SNAPSHOT    spring-cloud-security  1.0.3.RELEASE  1.1.0.RELEASE  1.1.1.BUILD-SNAPSHOT    spring-cloud-starters  1.0.6.RELEASE      spring-cloud-cloudfoundry   1.0.0.RELEASE  1.0.1.BUILD-SNAPSHOT    spring-cloud-cluster   1.0.0.RELEASE  1.0.1.BUILD-SNAPSHOT    spring-cloud-consul   1.0.1.RELEASE  1.0.2.BUILD-SNAPSHOT    spring-cloud-sleuth   1.0.1.RELEASE  1.0.2.BUILD-SNAPSHOT    spring-cloud-stream   1.0.2.RELEASE  1.0.3.BUILD-SNAPSHOT    spring-cloud-zookeeper   1.0.1.RELEASE  1.0.2.BUILD-SNAPSHOT    spring-boot  1.2.8.RELEASE  1.3.5.RELEASE  1.3.5.RELEASE    spring-cloud-stream-app-starters*    1.0.0.BUILD-SNAPSHOT    spring-cloud-task*    1.0.0.BUILD-SNAPSHOT     (*) \u8fd9\u4e9b\u9879\u76ee\u5728\u4ed6\u4eec\u88ab\u53d1\u5e03\u4e4b\u524d\u8fd8\u4e0d\u662f Brixton \u7684\u4e00\u90e8\u5206  Angel\u57fa\u4e8eSpring Boot 1.2.x\uff0c\u67d0\u4e9b\u90e8\u5206\u548c1.3.x\u4e0d\u517c\u5bb9\u3002Brixton\u57fa\u4e8eSpring Boot 1.3.x\u5c3d\u53ef\u80fd\u7684\u517c\u5bb91.2.x\uff0c\u4e00\u4e9b\u57fa\u4e8eAngel\u7684\u5e93\u548c\u57fa\u4e8eAngel\u7684\u5927\u90e8\u5206\u5e94\u7528\u53ef\u4ee5\u5f88\u597d\u7684\u8fd0\u884c\u5728Brixton\u4e0a\uff0c\u4f46spring-cloud-security 1.0.x \u7528\u5230\u7684OAuth2\u7279\u6027\u5c06\u9700\u8981\u5168\u90e8\u4fee\u6539\uff08\u4ed6\u4eec\u5927\u591a\u642c\u5230Spring Boot1.3.0\uff09\u3002  \u4f7f\u7528\u4f60\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u6765\u63a7\u5236\u7248\u672c\u3002\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528Maven\uff0c\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u7248\u672c\u5ba3\u5e03\u83b7\u80dc\uff0c\u6240\u4ee5\u7533\u62a5\u6750\u6599\u6e05\u5355\u7684\u987a\u5e8f\uff0c\u4e0e\u7b2c\u4e00\u4e2a\u901a\u5e38\u662f\u6700\u65b0\u7684\uff08\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528Spring Boot 1.3.6\u542f\u52a8Brixton.RELEASE\uff0c\u628a\u542f\u52a8BOM\u653e\u5728\u7b2c\u4e00\uff09\u3002\u540c\u6837\u7684\u89c4\u5219\u9002\u7528\u4e8eGradle\uff0c\u5982\u679c\u4f60\u4f7f\u7528Spring\u7684\u4f9d\u8d56\u7ba1\u7406\u63d2\u4ef6\u3002   NOTE: starting after Brixton.M4 the release train contains a  spring-cloud-starter-dependencies  as well as the  spring-cloud-starter-parent . Use the parent as you would the  spring-boot-starter-parent  (if you are using Maven). If you only need dependency management, the \"dependencies\" version is a BOM-only version of the same thing (it just contains dependency management and no plugin declarations or direct references to Spring or Spring Boot). If you are using the Spring Boot parent POM, then you can use the BOM from Spring Cloud.",
            "title": "Release Trains"
        },
        {
            "location": "/project/QuickStart/#sample-projects",
            "text": "Config Server  Service Registry  Circuit Breaker Dashboard  Business Application (Customers and Stores)  OAuth2 Authorization Server  OAuth2 SSO Client  Integration Test Samples",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudConfig/",
            "text": "Spring Cloud Config\n#\n\n\nSpring Cloud Config\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4e3a\u5916\u90e8\u914d\u7f6e\u63d0\u4f9b\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u652f\u6301\u3002\u901a\u8fc7Config Server\u4f60\u53ef\u4ee5\u96c6\u4e2d\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u952e\u503c\u5bf9\u6982\u5ff5\u4e0e\nSpring Environment\n\u548c\nPropertySource\n \u76f8\u540c\uff0c\u6240\u4ee5\u5341\u5206\u9002\u5408Spring\u5e94\u7528\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u8bed\u8a00\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u901a\u8fc7\u90e8\u7f72\u7ba1\u9053\u4ece\u5f00\u53d1\u5230\u6d4b\u8bd5\u5230\u751f\u4ea7\uff0c\u4f60\u53ef\u4ee5\u7ba1\u7406\u8fd9\u4e9b\u73af\u5883\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u786e\u5b9a\u5e94\u7528\u90fd\u9700\u8981\u8fd0\u884c\u65f6\u8fc1\u79fb\u3002\u670d\u52a1\u5668\u7684\u540e\u7aef\u5b58\u50a8\u7684\u9ed8\u8ba4\u5b9e\u73b0\u4f7f\u7528Git\uff0c\u6240\u4ee5\u5bb9\u6613\u652f\u6301\u6807\u8bb0\u7248\u672c\u7684\u914d\u7f6e\u73af\u5883\uff0c\u4ee5\u53ca\u4e00\u7cfb\u5217\u7ba1\u7406\u5de5\u5177\u8bbf\u95ee\u5185\u5bb9\u3002\u5b83\u5f88\u5bb9\u6613\u6dfb\u52a0\u66ff\u4ee3\u7684\u5b9e\u73b0\uff0c\u5e76\u5c06\u5b83\u4eec\u63d2\u5165\u5230Spring\u914d\u7f6e\u4e2d\u3002\n\n\nFor full documentation visit \nspring cloud config\n.\n\n\nFeatures\n#\n\n\nSpring Cloud Config Server features:\n\n\n\n\nHTTP API\u7684\u5916\u90e8\u8d44\u6e90\u914d\u7f6e\uff08\u540d\u79f0-\u503c\u5bf9\uff0c\u6216\u7b49\u6548\u7684YAML\u5185\u5bb9\uff09\n\n\n\u5bf9\u5c5e\u6027\u503c\uff08\u5bf9\u79f0\u6216\u975e\u5bf9\u79f0\uff09\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6\n\n\n\u4f7f\u7528\n@EnableConfigServer\n\u6ce8\u89e3\u5d4c\u5165Spring Boot\u5e94\u7528\n\n\n\n\nConfig Client features (for Spring applications):\n\n\n\n\n\u7ed1\u5b9a\u5230\u914d\u7f6e\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u8fdc\u7a0b\u5c5e\u6027\u6e90\u521d\u59cb\u5316Spring\u73af\u5883\n\n\n\u5bf9\u5c5e\u6027\u503c\uff08\u5bf9\u79f0\u6216\u975e\u5bf9\u79f0\uff09\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-config\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-config</artifactId>\n            <version>1.1.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n</dependencies>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542bSpring Boot Actuator\u548cSpring Config Client\uff0cSpring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5\u914d\u7f6e\u670d\u52a1\nhttp://localhost:8888\n\uff08\nspring.cloud.config.uri\n\u9ed8\u8ba4\u503c\uff09\n\n\n@Configuration\n@EnableAutoConfiguration\n@RestController\npublic class Application {\n\n  @Value(\"${config.name}\")\n  String name = \"World\";\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello \" + name;\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\n\u8303\u4f8b\u4e2d\nconfig.name\n\u7684\u503c\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u503c\uff09\u53ef\u4ee5\u6765\u81ea\u672c\u5730\u914d\u7f6e\u6216\u4ece\u8fdc\u7a0b\u914d\u7f6e\u670d\u52a1\u5668\u3002\u914d\u7f6e\u670d\u52a1\u5668\u5c06\u4f18\u5148\u9ed8\u8ba4\u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u770b\n/env\n\u7aef\u70b9\uff0c\u770b\nconfigServer\n\u8d44\u6e90\u6587\u4ef6\u3002\n\n\n\u8981\u60f3\u8fd0\u884c\u4f60\u7684\u670d\u52a1\uff0c\u9700\u8981\u4f9d\u8d56\nspring-cloud-config-server\n\u5e76\u4e14\u4f7f\u7528\n@EnableConfigServer\n\u6ce8\u89e3\u3002\u5982\u679c\u8bbe\u7f6e\nspring.config.name=configserver\n\uff0c\u5e94\u7528\u5c06\u57288888\u7aef\u53e3\u542f\u52a8\uff0c\u6570\u636e\u6765\u81ea\u6837\u672c\u5e93\u3002\u4f60\u9700\u8981\nspring.cloud.config.server.git.uri\n\u4e3a\u60a8\u81ea\u5df1\u7684\u9700\u6c42\u627e\u5230\u914d\u7f6e\u6570\u636e\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u4e00\u4e2aGit\u4ed3\u5e93\uff0c\u5e76\u4e14\u53ef\u4ee5\u662f\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u8def\u5f84 \nfile:..\n)\n\n\nSample Projects\n#\n\n\nConfig Server\n\n\nConfig Clients",
            "title": "Spring Cloud Config"
        },
        {
            "location": "/project/SpringCloudConfig/#spring-cloud-config",
            "text": "Spring Cloud Config\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4e3a\u5916\u90e8\u914d\u7f6e\u63d0\u4f9b\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u652f\u6301\u3002\u901a\u8fc7Config Server\u4f60\u53ef\u4ee5\u96c6\u4e2d\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u952e\u503c\u5bf9\u6982\u5ff5\u4e0e Spring Environment \u548c PropertySource  \u76f8\u540c\uff0c\u6240\u4ee5\u5341\u5206\u9002\u5408Spring\u5e94\u7528\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u8bed\u8a00\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f5c\u4e3a\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5c06\u901a\u8fc7\u90e8\u7f72\u7ba1\u9053\u4ece\u5f00\u53d1\u5230\u6d4b\u8bd5\u5230\u751f\u4ea7\uff0c\u4f60\u53ef\u4ee5\u7ba1\u7406\u8fd9\u4e9b\u73af\u5883\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u786e\u5b9a\u5e94\u7528\u90fd\u9700\u8981\u8fd0\u884c\u65f6\u8fc1\u79fb\u3002\u670d\u52a1\u5668\u7684\u540e\u7aef\u5b58\u50a8\u7684\u9ed8\u8ba4\u5b9e\u73b0\u4f7f\u7528Git\uff0c\u6240\u4ee5\u5bb9\u6613\u652f\u6301\u6807\u8bb0\u7248\u672c\u7684\u914d\u7f6e\u73af\u5883\uff0c\u4ee5\u53ca\u4e00\u7cfb\u5217\u7ba1\u7406\u5de5\u5177\u8bbf\u95ee\u5185\u5bb9\u3002\u5b83\u5f88\u5bb9\u6613\u6dfb\u52a0\u66ff\u4ee3\u7684\u5b9e\u73b0\uff0c\u5e76\u5c06\u5b83\u4eec\u63d2\u5165\u5230Spring\u914d\u7f6e\u4e2d\u3002  For full documentation visit  spring cloud config .",
            "title": "Spring Cloud Config"
        },
        {
            "location": "/project/SpringCloudConfig/#features",
            "text": "Spring Cloud Config Server features:   HTTP API\u7684\u5916\u90e8\u8d44\u6e90\u914d\u7f6e\uff08\u540d\u79f0-\u503c\u5bf9\uff0c\u6216\u7b49\u6548\u7684YAML\u5185\u5bb9\uff09  \u5bf9\u5c5e\u6027\u503c\uff08\u5bf9\u79f0\u6216\u975e\u5bf9\u79f0\uff09\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6  \u4f7f\u7528 @EnableConfigServer \u6ce8\u89e3\u5d4c\u5165Spring Boot\u5e94\u7528   Config Client features (for Spring applications):   \u7ed1\u5b9a\u5230\u914d\u7f6e\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528\u8fdc\u7a0b\u5c5e\u6027\u6e90\u521d\u59cb\u5316Spring\u73af\u5883  \u5bf9\u5c5e\u6027\u503c\uff08\u5bf9\u79f0\u6216\u975e\u5bf9\u79f0\uff09\u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudConfig/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-config \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-config</artifactId>\n            <version>1.1.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n</dependencies>  \u53ea\u8981classpath\u4e2d\u5305\u542bSpring Boot Actuator\u548cSpring Config Client\uff0cSpring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5\u914d\u7f6e\u670d\u52a1 http://localhost:8888 \uff08 spring.cloud.config.uri \u9ed8\u8ba4\u503c\uff09  @Configuration\n@EnableAutoConfiguration\n@RestController\npublic class Application {\n\n  @Value(\"${config.name}\")\n  String name = \"World\";\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello \" + name;\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}  \u8303\u4f8b\u4e2d config.name \u7684\u503c\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u503c\uff09\u53ef\u4ee5\u6765\u81ea\u672c\u5730\u914d\u7f6e\u6216\u4ece\u8fdc\u7a0b\u914d\u7f6e\u670d\u52a1\u5668\u3002\u914d\u7f6e\u670d\u52a1\u5668\u5c06\u4f18\u5148\u9ed8\u8ba4\u3002\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u770b /env \u7aef\u70b9\uff0c\u770b configServer \u8d44\u6e90\u6587\u4ef6\u3002  \u8981\u60f3\u8fd0\u884c\u4f60\u7684\u670d\u52a1\uff0c\u9700\u8981\u4f9d\u8d56 spring-cloud-config-server \u5e76\u4e14\u4f7f\u7528 @EnableConfigServer \u6ce8\u89e3\u3002\u5982\u679c\u8bbe\u7f6e spring.config.name=configserver \uff0c\u5e94\u7528\u5c06\u57288888\u7aef\u53e3\u542f\u52a8\uff0c\u6570\u636e\u6765\u81ea\u6837\u672c\u5e93\u3002\u4f60\u9700\u8981 spring.cloud.config.server.git.uri \u4e3a\u60a8\u81ea\u5df1\u7684\u9700\u6c42\u627e\u5230\u914d\u7f6e\u6570\u636e\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u4e00\u4e2aGit\u4ed3\u5e93\uff0c\u5e76\u4e14\u53ef\u4ee5\u662f\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u8def\u5f84  file:.. )",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudConfig/#sample-projects",
            "text": "Config Server  Config Clients",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudNetflix/",
            "text": "Spring Cloud Netflix\n#\n\n\nSpring Cloud Netflix\u63d0\u4f9b\u4e86Netflix\u516c\u53f8\u7684\u5f00\u6e90\u8f6f\u4ef6\uff08OSS\uff09\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u662f\u7ecf\u8fc7Netflix\u516c\u53f8\u751f\u4ea7\u73af\u5883\u8003\u9a8c\u7684\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\uff08Eureka\uff09\u3001\u65ad\u8def\u5668\uff08Hystrix\uff09\uff0c\u667a\u80fd\u8def\u7531\uff08Zuul\uff09\u548c\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff08Ribbon\uff09..\n\n\nFor full documentation visit \nspring cloud netflix\n.\n\n\nFeatures\n#\n\n\nSpring Cloud Netflix features:\n\n\n\n\n\u670d\u52a1\u53d1\u73b0\uff1a\u53ef\u4ee5\u5728Eureka\u4e2d\u6ce8\u518c\u5b9e\u4f8b\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b\n\n\n\u670d\u52a1\u53d1\u73b0\uff1a\u5d4c\u5165\u5f0fEureka\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u58f0\u660ejava\u914d\u7f6e\u6765\u521b\u5efa\n\n\n\u65ad\u8def\u5668\uff1aHystrix\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3\u6765\u521b\u5efa\n\n\n\u65ad\u8def\u5668\uff1a\u5d4c\u5165Hystrix\u4eea\u8868\u76d8\u901a\u8fc7\u58f0\u660ejava\u914d\u7f6e\n\n\n\u58f0\u660eREST\u5ba2\u6237\u7aef\uff1a\u4f2a\u88c5\u521b\u5efa\u4e00\u4e2a\u52a8\u6001\u63a5\u53e3\u88c5\u9970\uff0c\u4f7f\u7528JAX-RS\u6216Spring MVC\u6ce8\u89e3\n\n\n\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff1aRibbon\n\n\n\u5916\u90e8\u914d\u7f6e\uff1aSpring Environment\u548cArchaius\uff08\u914d\u7f6e\u7ba1\u7406API\uff09\u642d\u5efa\u8d77\u4e00\u5ea7\u6865\u6881\u3002\uff08\u4f7fNetflix\u7ec4\u4ef6\u7684\u672c\u5730\u914d\u7f6e\u80fd\u591f\u4f7f\u7528Spring Boot\u4e60\u4fd7\uff09\n\n\n\u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1a\u81ea\u52a8\u6ce8\u518cZuul\u7684\u8fc7\u6ee4\u5668\uff0c\u548c\u4e00\u4e2a\u7b80\u5355\u914d\u7f6e\u7ea6\u5b9a\u521b\u5efa\u53cd\u5411\u4ee3\u7406\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-netflix\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-netflix</artifactId>\n            <version>1.1.2.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-eureka</artifactId>\n    </dependency>\n</dependencies>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Netflix \u548c Eureka Core\uff0c\u6240\u6709\u5e94\u7528\u4e86 \n@EnableEurekaClient\n\u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Eureka\u670d\u52a1\nhttp://localhost:8761\n\uff08\neureka.client.serviceUrl.defaultZone\n\u9ed8\u8ba4\u503c\uff09\n\n\n@Configuration\n@EnableAutoConfiguration\n@EnableEurekaClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\n\u8981\u8fd0\u884c\u4f60\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u9700\u8981\u4f7f\u7528\nspring-cloud-starter-eureka-server\n\u4f9d\u8d56\u548c\n@EnableEurekaServer\n\u6ce8\u89e3\u3002\n\n\nSample Projects\n#\n\n\nEureka Server\n\n\nEureka Clients",
            "title": "Spring Cloud Netflix"
        },
        {
            "location": "/project/SpringCloudNetflix/#spring-cloud-netflix",
            "text": "Spring Cloud Netflix\u63d0\u4f9b\u4e86Netflix\u516c\u53f8\u7684\u5f00\u6e90\u8f6f\u4ef6\uff08OSS\uff09\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u662f\u7ecf\u8fc7Netflix\u516c\u53f8\u751f\u4ea7\u73af\u5883\u8003\u9a8c\u7684\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\uff08Eureka\uff09\u3001\u65ad\u8def\u5668\uff08Hystrix\uff09\uff0c\u667a\u80fd\u8def\u7531\uff08Zuul\uff09\u548c\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff08Ribbon\uff09..  For full documentation visit  spring cloud netflix .",
            "title": "Spring Cloud Netflix"
        },
        {
            "location": "/project/SpringCloudNetflix/#features",
            "text": "Spring Cloud Netflix features:   \u670d\u52a1\u53d1\u73b0\uff1a\u53ef\u4ee5\u5728Eureka\u4e2d\u6ce8\u518c\u5b9e\u4f8b\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b  \u670d\u52a1\u53d1\u73b0\uff1a\u5d4c\u5165\u5f0fEureka\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u58f0\u660ejava\u914d\u7f6e\u6765\u521b\u5efa  \u65ad\u8def\u5668\uff1aHystrix\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3\u6765\u521b\u5efa  \u65ad\u8def\u5668\uff1a\u5d4c\u5165Hystrix\u4eea\u8868\u76d8\u901a\u8fc7\u58f0\u660ejava\u914d\u7f6e  \u58f0\u660eREST\u5ba2\u6237\u7aef\uff1a\u4f2a\u88c5\u521b\u5efa\u4e00\u4e2a\u52a8\u6001\u63a5\u53e3\u88c5\u9970\uff0c\u4f7f\u7528JAX-RS\u6216Spring MVC\u6ce8\u89e3  \u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff1aRibbon  \u5916\u90e8\u914d\u7f6e\uff1aSpring Environment\u548cArchaius\uff08\u914d\u7f6e\u7ba1\u7406API\uff09\u642d\u5efa\u8d77\u4e00\u5ea7\u6865\u6881\u3002\uff08\u4f7fNetflix\u7ec4\u4ef6\u7684\u672c\u5730\u914d\u7f6e\u80fd\u591f\u4f7f\u7528Spring Boot\u4e60\u4fd7\uff09  \u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1a\u81ea\u52a8\u6ce8\u518cZuul\u7684\u8fc7\u6ee4\u5668\uff0c\u548c\u4e00\u4e2a\u7b80\u5355\u914d\u7f6e\u7ea6\u5b9a\u521b\u5efa\u53cd\u5411\u4ee3\u7406",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudNetflix/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-netflix \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-netflix</artifactId>\n            <version>1.1.2.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-eureka</artifactId>\n    </dependency>\n</dependencies>  \u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Netflix \u548c Eureka Core\uff0c\u6240\u6709\u5e94\u7528\u4e86  @EnableEurekaClient \u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Eureka\u670d\u52a1 http://localhost:8761 \uff08 eureka.client.serviceUrl.defaultZone \u9ed8\u8ba4\u503c\uff09  @Configuration\n@EnableAutoConfiguration\n@EnableEurekaClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}  \u8981\u8fd0\u884c\u4f60\u81ea\u5df1\u7684\u670d\u52a1\uff0c\u9700\u8981\u4f7f\u7528 spring-cloud-starter-eureka-server \u4f9d\u8d56\u548c @EnableEurekaServer \u6ce8\u89e3\u3002",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudNetflix/#sample-projects",
            "text": "Eureka Server  Eureka Clients",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudBus/",
            "text": "Spring Cloud Bus\n#\n\n\nSpring Cloud Bus \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d88\u606f\u4ee3\u7406\u8fde\u63a5\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8282\u70b9\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5e7f\u64ad\u72b6\u6001\u66f4\u6539\uff08\u5982\u914d\u7f6e\u66f4\u6539\uff09\u6216\u5176\u4ed6\u7ba1\u7406\u6307\u4ee4\u3002\u5f53\u524d\u552f\u4e00\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7\u4e00\u4e2aAMQP\u4ee3\u7406\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\uff0c\u4f46\u76f8\u540c\u7684\u57fa\u672c\u7279\u5f81\uff08\u4f20\u8f93\u4e0a\u7684\u4e00\u4e9b\u4f9d\u8d56\uff09\u662f\u5176\u4ed6\u4f20\u8f93\u7684\u8def\u7ebf\u56fe\n\n\nFor full documentation visit \nspring cloud bus\n.\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-bus\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-bus-parent</artifactId>\n            <version>1.1.1.BUILD-SNAPSHOT</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n    </dependency>\n</dependencies>\n<repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542bAMQP\u548cRabbitMQ\uff0cSpring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5RabbitMQ\u670d\u52a1\nhttp://localhost:5672\n\uff08\nspring.rabbitmq.addresses\n\u9ed8\u8ba4\u503c\uff09\n\n\n@Configuration\n@EnableAutoConfiguration\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\nSample Projects\n#\n\n\nBus Clients",
            "title": "Spring Cloud Bus"
        },
        {
            "location": "/project/SpringCloudBus/#spring-cloud-bus",
            "text": "Spring Cloud Bus \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d88\u606f\u4ee3\u7406\u8fde\u63a5\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8282\u70b9\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5e7f\u64ad\u72b6\u6001\u66f4\u6539\uff08\u5982\u914d\u7f6e\u66f4\u6539\uff09\u6216\u5176\u4ed6\u7ba1\u7406\u6307\u4ee4\u3002\u5f53\u524d\u552f\u4e00\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7\u4e00\u4e2aAMQP\u4ee3\u7406\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\uff0c\u4f46\u76f8\u540c\u7684\u57fa\u672c\u7279\u5f81\uff08\u4f20\u8f93\u4e0a\u7684\u4e00\u4e9b\u4f9d\u8d56\uff09\u662f\u5176\u4ed6\u4f20\u8f93\u7684\u8def\u7ebf\u56fe  For full documentation visit  spring cloud bus .",
            "title": "Spring Cloud Bus"
        },
        {
            "location": "/project/SpringCloudBus/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-bus \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-bus-parent</artifactId>\n            <version>1.1.1.BUILD-SNAPSHOT</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n    </dependency>\n</dependencies>\n<repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>  \u53ea\u8981classpath\u4e2d\u5305\u542bAMQP\u548cRabbitMQ\uff0cSpring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5RabbitMQ\u670d\u52a1 http://localhost:5672 \uff08 spring.rabbitmq.addresses \u9ed8\u8ba4\u503c\uff09  @Configuration\n@EnableAutoConfiguration\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudBus/#sample-projects",
            "text": "Bus Clients",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/",
            "text": "Spring Cloud Cloud Foundry\n#\n\n\nFor full documentation visit \nspring cloud cloud foundry\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud for Cloud Foundry"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/#spring-cloud-cloud-foundry",
            "text": "For full documentation visit  spring cloud cloud foundry .",
            "title": "Spring Cloud Cloud Foundry"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/",
            "text": "Spring Cloud Cloud Foundry\n#\n\n\nFor full documentation visit \nspring cloud cloud foundry\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Cloud Foundry Service Broker"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/#spring-cloud-cloud-foundry",
            "text": "For full documentation visit  spring cloud cloud foundry .",
            "title": "Spring Cloud Cloud Foundry"
        },
        {
            "location": "/project/SpringCloudforCloudFoundry/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudCloudFoundryServiceBroker/",
            "text": "Spring Cloud Cloud Foundry Service Broker\n#\n\n\nFor full documentation visit \nspring cloud cloud foundry service broker\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Cloud Foundry Service Broker"
        },
        {
            "location": "/project/SpringCloudCloudFoundryServiceBroker/#spring-cloud-cloud-foundry-service-broker",
            "text": "For full documentation visit  spring cloud cloud foundry service broker .",
            "title": "Spring Cloud Cloud Foundry Service Broker"
        },
        {
            "location": "/project/SpringCloudCloudFoundryServiceBroker/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudConsul/",
            "text": "Spring Cloud Consul\n#\n\n\nSpring Cloud Consul\u63d0\u4f9b\u4e86Consul\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u662f\u7ecf\u8fc7Netflix\u516c\u53f8\u751f\u4ea7\u73af\u5883\u8003\u9a8c\u7684\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\uff0c\u5206\u5e03\u5f0f\u914d\u7f6e\u548c\u63a7\u5236\u603b\u7ebf\u3002\n\n\nFor full documentation visit \nspring cloud consul\n.\n\n\nFeatures\n#\n\n\nSpring Cloud Consul features:\n\n\n\n\n\u670d\u52a1\u53d1\u73b0\uff1a\u5b9e\u4f8b\u53ef\u4ee5\u7528Consul\u4ee3\u7406\u7aef\u6ce8\u518c\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b\u3002\n\n\n\u652f\u6301Ribbon\uff0c\u5229\u7528Spring Cloud Netflix\u5b9e\u73b0\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\u3002\n\n\n\u652f\u6301Zuul\uff0c\u5229\u7528Spring Cloud Netflix\u5b9e\u73b0\u52a8\u6001\u8def\u7531\u548c\u8fc7\u6ee4\u3002\n\n\n\u5206\u5e03\u5f0f\u914d\u7f6e\uff1a\u5229\u7528Consul\u7684Key/Value\u5b58\u50a8\u3002\n\n\n\u63a7\u5236\u603b\u7ebf\uff1a\u4f7f\u7528Consul\u4e8b\u4ef6\u5904\u7406\u5206\u5e03\u5f0f\u63a7\u5236\u4e8b\u4ef6\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-consul\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-consul-all</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-consul-dependencies</artifactId>\n            <version>1.0.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542b Spring Cloud Consul\u548cConsul API\uff0c\u6240\u6709\u5e94\u7528\u4e86 \n@EnableDiscoveryClient\n\u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Consul\u7684\u4ee3\u7406\u670d\u52a1\nhttp://localhost:8500\n\uff08\nspring.cloud.consul.host\n and \nspring.cloud.consul.port\n\u9ed8\u8ba4\u503c\uff09\n\n\n@Configuration\n@EnableAutoConfiguration\n@EnableDiscoveryClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\n\u672c\u5730Consul\u4ee3\u7406\u7684\u8fd0\u884c. \u53c2\u89c1\nConsul agent documentation\n.\n\n\nSample Projects\n#\n\n\nConsul Sample",
            "title": "Spring Cloud Consul"
        },
        {
            "location": "/project/SpringCloudConsul/#spring-cloud-consul",
            "text": "Spring Cloud Consul\u63d0\u4f9b\u4e86Consul\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u662f\u7ecf\u8fc7Netflix\u516c\u53f8\u751f\u4ea7\u73af\u5883\u8003\u9a8c\u7684\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\uff0c\u5206\u5e03\u5f0f\u914d\u7f6e\u548c\u63a7\u5236\u603b\u7ebf\u3002  For full documentation visit  spring cloud consul .",
            "title": "Spring Cloud Consul"
        },
        {
            "location": "/project/SpringCloudConsul/#features",
            "text": "Spring Cloud Consul features:   \u670d\u52a1\u53d1\u73b0\uff1a\u5b9e\u4f8b\u53ef\u4ee5\u7528Consul\u4ee3\u7406\u7aef\u6ce8\u518c\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b\u3002  \u652f\u6301Ribbon\uff0c\u5229\u7528Spring Cloud Netflix\u5b9e\u73b0\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\u3002  \u652f\u6301Zuul\uff0c\u5229\u7528Spring Cloud Netflix\u5b9e\u73b0\u52a8\u6001\u8def\u7531\u548c\u8fc7\u6ee4\u3002  \u5206\u5e03\u5f0f\u914d\u7f6e\uff1a\u5229\u7528Consul\u7684Key/Value\u5b58\u50a8\u3002  \u63a7\u5236\u603b\u7ebf\uff1a\u4f7f\u7528Consul\u4e8b\u4ef6\u5904\u7406\u5206\u5e03\u5f0f\u63a7\u5236\u4e8b\u4ef6",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudConsul/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-consul \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-consul-all</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-consul-dependencies</artifactId>\n            <version>1.0.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>  \u53ea\u8981classpath\u4e2d\u5305\u542b Spring Cloud Consul\u548cConsul API\uff0c\u6240\u6709\u5e94\u7528\u4e86  @EnableDiscoveryClient \u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Consul\u7684\u4ee3\u7406\u670d\u52a1 http://localhost:8500 \uff08 spring.cloud.consul.host  and  spring.cloud.consul.port \u9ed8\u8ba4\u503c\uff09  @Configuration\n@EnableAutoConfiguration\n@EnableDiscoveryClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}  \u672c\u5730Consul\u4ee3\u7406\u7684\u8fd0\u884c. \u53c2\u89c1 Consul agent documentation .",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudConsul/#sample-projects",
            "text": "Consul Sample",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudSecurity/",
            "text": "Spring Cloud Security\n#\n\n\nSpring Cloud Security\u63d0\u4f9b\u4e86\u4e00\u7ec4\u539f\u8bed\u4e49\uff0c\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u6765\u521b\u5efa\u5b89\u5168\u7684\u5e94\u7528\u548c\u670d\u52a1\u3002\u901a\u8fc7\u7edf\u4e00\u7ba1\u7406\u4e2d\u5fc3\uff0c\u5c06\u5e94\u7528\u81ea\u5df1\u6388\u6743\u7ed9\u5927\u578b\u534f\u4f5c\u7cfb\u7edf\u3001\u8fdc\u7a0b\u7ec4\u4ef6\u3002\u4ed6\u5728Cloud Foundry\u5e73\u53f0\u4e2d\u4e5f\u975e\u5e38\u6613\u7528\u3002\u57fa\u4e8e Spring Boot \u548c Spring Security OAuth2\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u7684\u5b9e\u73b0\u7edf\u4e00\u767b\u5f55\u3001\u4ee4\u724c\u4f20\u9012\u3001\u4ee4\u724c\u4ea4\u6362\u3002\n\n\nFor full documentation visit \nspring cloud security\n.\n\n\nFeatures\n#\n\n\nSpring Cloud Security features:\n\n\n\n\n\u5728Zuul proxy\u4e2d\u4f20\u9012SSO tokens\n\n\n\u8d44\u6e90\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4f20\u9012tokens\n\n\nFeign\u5ba2\u6237\u7aef\u62e6\u622a\u5668\u884c\u4e3a\uff0c\u5982OAuth2RestTemplate\uff08fetching tokens\uff09\n\n\n\u5728Zuul proxy\u914d\u7f6e\u4e0b\u6e38\u8ba4\u8bc1\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-security\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-security</artifactId>\n        <version>1.1.4.BUILD-SNAPSHOT</version>\n    </dependency>\n</dependencies><repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n\n\n\n\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u542f\u52a8\u4e86 Spring Cloud Zuul \u53cd\u5411\u4ee3\u7406\uff08\u4f7f\u7528\u4e86@EnableZuulProxy\u6ce8\u89e3\uff09\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5411\u4e0b\u8f6c\u53d1OAuth2\u8bbf\u95ee\u4ee4\u724c\u5230Zuul\u4ee3\u7406\u7684\u670d\u52a1\u4e2d.\u56e0\u6b64\uff0c\u5728\u5355\u70b9\u767b\u5f55\u589e\u5f3a\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7b80\u5355\n\n\n@SpringBootApplication\n@EnableOAuth2Sso\n@EnableZuulProxy\nclass Application {\n\n}\n\n\n\n\n\u5e76\u4e14\u4ed6\u5c06\uff08\u9664\u4e86\u767b\u5f55\u7528\u6237\u548c\u6293\u53d6\u4ee4\u724c\uff09\u6279\u51c6\u8ba4\u8bc1\u4ee4\u724c\u4e0b\u6e38\u5230\n/proxy/*\n services\uff0c\u5982\u679c\u8fd9\u4e9b\u670d\u52a1\u6267\u884c\u4e86\n@EnableResourceServer\n\u6ce8\u89e3\u4ed6\u4eec\u5c31\u4f1a\u5728\u6807\u51c6\u5934\u4e2d\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u4ee4\u724c\n\n\nSample Projects\n#\n\n\n\n\nSSO\n\n\nAuth Server\n\n\nSSO Groovy\n\n\nResource server",
            "title": "Spring Cloud Security"
        },
        {
            "location": "/project/SpringCloudSecurity/#spring-cloud-security",
            "text": "Spring Cloud Security\u63d0\u4f9b\u4e86\u4e00\u7ec4\u539f\u8bed\u4e49\uff0c\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u6765\u521b\u5efa\u5b89\u5168\u7684\u5e94\u7528\u548c\u670d\u52a1\u3002\u901a\u8fc7\u7edf\u4e00\u7ba1\u7406\u4e2d\u5fc3\uff0c\u5c06\u5e94\u7528\u81ea\u5df1\u6388\u6743\u7ed9\u5927\u578b\u534f\u4f5c\u7cfb\u7edf\u3001\u8fdc\u7a0b\u7ec4\u4ef6\u3002\u4ed6\u5728Cloud Foundry\u5e73\u53f0\u4e2d\u4e5f\u975e\u5e38\u6613\u7528\u3002\u57fa\u4e8e Spring Boot \u548c Spring Security OAuth2\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u7684\u5b9e\u73b0\u7edf\u4e00\u767b\u5f55\u3001\u4ee4\u724c\u4f20\u9012\u3001\u4ee4\u724c\u4ea4\u6362\u3002  For full documentation visit  spring cloud security .",
            "title": "Spring Cloud Security"
        },
        {
            "location": "/project/SpringCloudSecurity/#features",
            "text": "Spring Cloud Security features:   \u5728Zuul proxy\u4e2d\u4f20\u9012SSO tokens  \u8d44\u6e90\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4f20\u9012tokens  Feign\u5ba2\u6237\u7aef\u62e6\u622a\u5668\u884c\u4e3a\uff0c\u5982OAuth2RestTemplate\uff08fetching tokens\uff09  \u5728Zuul proxy\u914d\u7f6e\u4e0b\u6e38\u8ba4\u8bc1",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudSecurity/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-security \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-security</artifactId>\n        <version>1.1.4.BUILD-SNAPSHOT</version>\n    </dependency>\n</dependencies><repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>  \u5982\u679c\u4f60\u7684\u5e94\u7528\u542f\u52a8\u4e86 Spring Cloud Zuul \u53cd\u5411\u4ee3\u7406\uff08\u4f7f\u7528\u4e86@EnableZuulProxy\u6ce8\u89e3\uff09\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5411\u4e0b\u8f6c\u53d1OAuth2\u8bbf\u95ee\u4ee4\u724c\u5230Zuul\u4ee3\u7406\u7684\u670d\u52a1\u4e2d.\u56e0\u6b64\uff0c\u5728\u5355\u70b9\u767b\u5f55\u589e\u5f3a\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u7b80\u5355  @SpringBootApplication\n@EnableOAuth2Sso\n@EnableZuulProxy\nclass Application {\n\n}  \u5e76\u4e14\u4ed6\u5c06\uff08\u9664\u4e86\u767b\u5f55\u7528\u6237\u548c\u6293\u53d6\u4ee4\u724c\uff09\u6279\u51c6\u8ba4\u8bc1\u4ee4\u724c\u4e0b\u6e38\u5230 /proxy/*  services\uff0c\u5982\u679c\u8fd9\u4e9b\u670d\u52a1\u6267\u884c\u4e86 @EnableResourceServer \u6ce8\u89e3\u4ed6\u4eec\u5c31\u4f1a\u5728\u6807\u51c6\u5934\u4e2d\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u4ee4\u724c",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudSecurity/#sample-projects",
            "text": "SSO  Auth Server  SSO Groovy  Resource server",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudSleuth/",
            "text": "Spring Cloud Sleuth\n#\n\n\nSpring Cloud Sleuth\u4e3aSpring Cloud\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u65b9\u6848\uff0c\u501f\u7528\u4e86Dapper\uff0cZipkin\u548cHTrace\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4Sleuth\u5e94\u8be5\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u4e0e\u5916\u90e8\u7cfb\u7edf\u7684\u76f8\u4e92\u4f5c\u7528\u662f\u81ea\u52a8\u7684\u3002\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u5728\u65e5\u5fd7\u4e2d\u6355\u83b7\u6570\u636e\uff0c\u6216\u5c06\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7a0b\u6536\u96c6\u670d\u52a1\u3002\n\n\nFor full documentation visit \nspring cloud Sleuth\n.\n\n\nFeatures\n#\n\n\nSpan\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\uff0c\u4f8b\u5982\uff0c\u53d1\u9001\u4e00\u4e2aRPC\u662f\u4e00\u4e2a\u65b0\u7684Span\u3002Span\u662f\u7531\u4e00\u4e2a64\u4f4d\u7684SpanID\u548c\u4e00\u4e2a64\u4f4d\u7684traceID\u7ec4\u6210\uff0cSpan\u4e5f\u6709\u5176\u4ed6\u6570\u636e\uff0c\u5982\u63cf\u8ff0\uff0c\u952e\u503c\u6ce8\u91ca\uff0cSpanID\uff0cprocessID\uff08\u901a\u5e38\u662fIP\u5730\u5740\uff09\u3002Span\u6709\u5f00\u59cb\u548c\u505c\u6b62\uff0c\u5e76\u4e14\u8ddf\u8e2a\u4ed6\u4eec\u7684\u65f6\u95f4\u4fe1\u606f\u3002\u4e00\u65e6\u4f60\u521b\u5efa\u4e00\u4e2aSpan\uff0c\u4f60\u5fc5\u987b\u5728\u672a\u6765\u7684\u67d0\u4e00\u70b9\u505c\u6b62\u5b83\u3002\u4e00\u7ec4Span\u5f62\u6210\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\u79f0\u4e3a\u4e00\u4e2a\u8ddf\u8e2a\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u8fd0\u884c\u4e00\u4e2a\u5206\u5e03\u5f0f\u5927\u6570\u636e\u5b58\u50a8\uff0c\u5219\u53ef\u80fd\u7531\u4e00\u4e2a\u653e\u8bf7\u6c42\u5f62\u6210\u4e00\u4e2a\u8ddf\u8e2a\u3002\n\n\nSpring Cloud Sleuth features:\n\n\n\n\n\u5728Slf4J\u7684MDC\u4e2d\u6dfb\u52a0traceId\u548cspanId\uff0c\u6240\u4ee5\u5728\u65e5\u5fd7\u6c47\u603b\u5904\u4f60\u53ef\u4ee5\u63d0\u53d6trace\u6216span\u4fe1\u606f\u3002\n\n\n\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\u6570\u636e\u6a21\u578b\uff1atraces\uff0c spans (forming a DAG)\uff0c annotations\uff0c key-value annotations\u3002\u8f7b\u6613\u7684\u57fa\u4e8eHTrace, \u548cZipkin (Dapper)\u517c\u5bb9\u3002\n\n\nSpring\u5e94\u7528\u901a\u7528\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5de5\u5177(servlet filter, rest template, scheduled actions, message channels, zuul filters, feign client).\n\n\n\u5982\u679c\u6fc0\u6d3b\nspring-cloud-sleuth-zipkin\n\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u751f\u6210\u5e76\u901a\u8fc7HTTP\u6536\u96c6\u517c\u5bb9Zipkin\u7684traces\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53d1\u9001\u5230\u672c\u5730\u7684Zipkin\uff0c\u53ef\u4ee5\u901a\u8fc7\nspring.zipkin.[host,port]\n\u53bb\u914d\u7f6e\u6b63\u786e\u7684\u5730\u5740\u3002\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-sleuth\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-sleuth</artifactId>\n            <version>1.1.0.BUILD-SNAPSHOT</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-sleuth</artifactId>\n    </dependency>\n</dependencies><repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Sleuth\uff0cSpring Boot\u5e94\u7528\u5c06\u4ea7\u751ftrace\u6570\u636e\u3002\n\n\n@SpringBootApplication\n@RestController\npublic class Application {\n\n  private static Logger log = LoggerFactory.getLogger(DemoController.class);\n\n  @RequestMapping(\"/\")\n  public String home() {\n    log.info(\"Handling home\");\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\n\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u5e76\u8fdb\u5165\u4e3b\u9875\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u65e5\u5fd7\u4e2d\u7684traceId\u548cspanId\uff0c\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u8c03\u7528\u4e86\u53e6\u4e00\u4e2a\uff08\u4f8b\u5982RestTemplate\uff09\u5b83\u5c06\u5728headers\u4e2d\u53d1\u9001\u8ddf\u8e2a\u6570\u636e\uff0c\u5982\u679c\u63a5\u6536\u5668\u662f\u4e00\u4e2aSleuth\u5e94\u7528\u4f60\u4f1a\u6301\u7eed\u770b\u5230trace\u3002\n\n\n\n\nNOTE: instead of logging the request in the handler explicitly, you could set  \nlogging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG\n\n\nNOTE: Set \nspring.application.name=bar\n (for instance) to see the service name  as well as the trace and span ids.\n\n\n\n\nSample Projects\n#\n\n\nSimple HTTP app\nthat calls back to itself\n\n\nUsing Zipkin\n to collect traces\n\n\nMessaging with Spring Integration",
            "title": "Spring Cloud Sleuth"
        },
        {
            "location": "/project/SpringCloudSleuth/#spring-cloud-sleuth",
            "text": "Spring Cloud Sleuth\u4e3aSpring Cloud\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u65b9\u6848\uff0c\u501f\u7528\u4e86Dapper\uff0cZipkin\u548cHTrace\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4Sleuth\u5e94\u8be5\u662f\u770b\u4e0d\u89c1\u7684\uff0c\u4e0e\u5916\u90e8\u7cfb\u7edf\u7684\u76f8\u4e92\u4f5c\u7528\u662f\u81ea\u52a8\u7684\u3002\u60a8\u53ef\u4ee5\u7b80\u5355\u5730\u5728\u65e5\u5fd7\u4e2d\u6355\u83b7\u6570\u636e\uff0c\u6216\u5c06\u6570\u636e\u53d1\u9001\u5230\u8fdc\u7a0b\u6536\u96c6\u670d\u52a1\u3002  For full documentation visit  spring cloud Sleuth .",
            "title": "Spring Cloud Sleuth"
        },
        {
            "location": "/project/SpringCloudSleuth/#features",
            "text": "Span\u662f\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\uff0c\u4f8b\u5982\uff0c\u53d1\u9001\u4e00\u4e2aRPC\u662f\u4e00\u4e2a\u65b0\u7684Span\u3002Span\u662f\u7531\u4e00\u4e2a64\u4f4d\u7684SpanID\u548c\u4e00\u4e2a64\u4f4d\u7684traceID\u7ec4\u6210\uff0cSpan\u4e5f\u6709\u5176\u4ed6\u6570\u636e\uff0c\u5982\u63cf\u8ff0\uff0c\u952e\u503c\u6ce8\u91ca\uff0cSpanID\uff0cprocessID\uff08\u901a\u5e38\u662fIP\u5730\u5740\uff09\u3002Span\u6709\u5f00\u59cb\u548c\u505c\u6b62\uff0c\u5e76\u4e14\u8ddf\u8e2a\u4ed6\u4eec\u7684\u65f6\u95f4\u4fe1\u606f\u3002\u4e00\u65e6\u4f60\u521b\u5efa\u4e00\u4e2aSpan\uff0c\u4f60\u5fc5\u987b\u5728\u672a\u6765\u7684\u67d0\u4e00\u70b9\u505c\u6b62\u5b83\u3002\u4e00\u7ec4Span\u5f62\u6210\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\u79f0\u4e3a\u4e00\u4e2a\u8ddf\u8e2a\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u8fd0\u884c\u4e00\u4e2a\u5206\u5e03\u5f0f\u5927\u6570\u636e\u5b58\u50a8\uff0c\u5219\u53ef\u80fd\u7531\u4e00\u4e2a\u653e\u8bf7\u6c42\u5f62\u6210\u4e00\u4e2a\u8ddf\u8e2a\u3002  Spring Cloud Sleuth features:   \u5728Slf4J\u7684MDC\u4e2d\u6dfb\u52a0traceId\u548cspanId\uff0c\u6240\u4ee5\u5728\u65e5\u5fd7\u6c47\u603b\u5904\u4f60\u53ef\u4ee5\u63d0\u53d6trace\u6216span\u4fe1\u606f\u3002  \u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\u6570\u636e\u6a21\u578b\uff1atraces\uff0c spans (forming a DAG)\uff0c annotations\uff0c key-value annotations\u3002\u8f7b\u6613\u7684\u57fa\u4e8eHTrace, \u548cZipkin (Dapper)\u517c\u5bb9\u3002  Spring\u5e94\u7528\u901a\u7528\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5de5\u5177(servlet filter, rest template, scheduled actions, message channels, zuul filters, feign client).  \u5982\u679c\u6fc0\u6d3b spring-cloud-sleuth-zipkin \uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u751f\u6210\u5e76\u901a\u8fc7HTTP\u6536\u96c6\u517c\u5bb9Zipkin\u7684traces\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53d1\u9001\u5230\u672c\u5730\u7684Zipkin\uff0c\u53ef\u4ee5\u901a\u8fc7 spring.zipkin.[host,port] \u53bb\u914d\u7f6e\u6b63\u786e\u7684\u5730\u5740\u3002",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudSleuth/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-sleuth \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf--\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-sleuth</artifactId>\n            <version>1.1.0.BUILD-SNAPSHOT</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-sleuth</artifactId>\n    </dependency>\n</dependencies><repositories>\n    <repository>\n        <id>spring-snapshots</id>\n        <name>Spring Snapshots</name>\n        <url>https://repo.spring.io/libs-snapshot</url>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>  \u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Sleuth\uff0cSpring Boot\u5e94\u7528\u5c06\u4ea7\u751ftrace\u6570\u636e\u3002  @SpringBootApplication\n@RestController\npublic class Application {\n\n  private static Logger log = LoggerFactory.getLogger(DemoController.class);\n\n  @RequestMapping(\"/\")\n  public String home() {\n    log.info(\"Handling home\");\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}  \u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u5e76\u8fdb\u5165\u4e3b\u9875\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u65e5\u5fd7\u4e2d\u7684traceId\u548cspanId\uff0c\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u8c03\u7528\u4e86\u53e6\u4e00\u4e2a\uff08\u4f8b\u5982RestTemplate\uff09\u5b83\u5c06\u5728headers\u4e2d\u53d1\u9001\u8ddf\u8e2a\u6570\u636e\uff0c\u5982\u679c\u63a5\u6536\u5668\u662f\u4e00\u4e2aSleuth\u5e94\u7528\u4f60\u4f1a\u6301\u7eed\u770b\u5230trace\u3002   NOTE: instead of logging the request in the handler explicitly, you could set   logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG  NOTE: Set  spring.application.name=bar  (for instance) to see the service name  as well as the trace and span ids.",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudSleuth/#sample-projects",
            "text": "Simple HTTP app that calls back to itself  Using Zipkin  to collect traces  Messaging with Spring Integration",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudDataFlow/",
            "text": "Spring Cloud Data Flow\n#\n\n\nSpring Cloud Data Flow\u662f\u4e00\u79cd\u539f\u751f\u4e91\u4e1a\u52a1\u6d41\u7a0b\u670d\u52a1\uff0c\u5728\u73b0\u4ee3\u8fd0\u884c\u65f6\u7ec4\u5408\u6570\u636e\u7684\u5fae\u670d\u52a1\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u521b\u5efa\u548c\u7f16\u6392\u6570\u636e\u7ba1\u9053\u5e38\u89c1\u7684\u7528\u4f8b\u5982\u6570\u636e\u91c7\u96c6\uff0c\u5b9e\u65f6\u5206\u6790\uff0c\u6570\u636e\u5bfc\u5165/\u5bfc\u51fa\n\n\nFor full documentation visit \nspring cloud data flow\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Data Flow"
        },
        {
            "location": "/project/SpringCloudDataFlow/#spring-cloud-data-flow",
            "text": "Spring Cloud Data Flow\u662f\u4e00\u79cd\u539f\u751f\u4e91\u4e1a\u52a1\u6d41\u7a0b\u670d\u52a1\uff0c\u5728\u73b0\u4ee3\u8fd0\u884c\u65f6\u7ec4\u5408\u6570\u636e\u7684\u5fae\u670d\u52a1\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u521b\u5efa\u548c\u7f16\u6392\u6570\u636e\u7ba1\u9053\u5e38\u89c1\u7684\u7528\u4f8b\u5982\u6570\u636e\u91c7\u96c6\uff0c\u5b9e\u65f6\u5206\u6790\uff0c\u6570\u636e\u5bfc\u5165/\u5bfc\u51fa  For full documentation visit  spring cloud data flow .",
            "title": "Spring Cloud Data Flow"
        },
        {
            "location": "/project/SpringCloudDataFlow/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudStream/",
            "text": "Spring Cloud Stream\n#\n\n\nSpring Cloud Stream\u662f\u4e00\u4e2a\u6784\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u6846\u67b6\u3002Spring Cloud Stream\u6784\u5efa\u5728Spring Boot\u4e4b\u4e0a\u7528\u4ee5\u521b\u5efaDevOps\u53cb\u597d\u7684\u5fae\u670d\u52a1\uff0c\u5e76\u4e14Spring Integration\u63d0\u4f9b\u4e86\u548c\u6d88\u606f\u4ee3\u7406\u7684\u8fde\u63a5\u3002Spring Cloud Stream\u63d0\u4f9b\u6d88\u606f\u4ee3\u7406\u7684\u81ea\u7528\u914d\u7f6e\uff0c\u5f15\u5165\u53d1\u5e03\u8ba2\u9605\u7684\u8bed\u4e49\u6982\u5ff5\uff0c\u5f15\u5165\u4e0d\u540c\u7684\u4e2d\u95f4\u4ef6\u5382\u5546\u901a\u7528\u7684\u7684\u6d88\u8d39\u7ec4\u548c\u5206\u533a\uff0c\u8fd9\u4e9b\u81ea\u7528\u914d\u7f6e\u63d0\u4f9b\u4e86\u521b\u5efa\u6d41\u5904\u7406\u5e94\u7528\u7684\u57fa\u7840\u3002\n\n\n\u6dfb\u52a0@EnableBinding\u6ce8\u89e3\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u88ab@StreamListener\u4fee\u9970\u7684\u65b9\u6cd5\u53ef\u4ee5\u7acb\u5373\u8fde\u63a5\u5230\u6d88\u606f\u4ee3\u7406\uff0c\u4f60\u5c06\u6536\u5230\u6d41\u5904\u7406\u4e8b\u4ef6\u3002\n\n\nFor full documentation visit \nspring cloud stream\n.\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-stream\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-stream-dependencies</artifactId>\n            <version>1.0.2.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-stream</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-stream-kafka</artifactId>\n    </dependency>\n</dependencies>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542b Spring Cloud Stream\u548cSpring Cloud Stream binder\uff0c\u5e76\u4e14\u88ab@EnableBinding\u4fee\u9970\uff0c\u5e94\u7528\u5c06\u901a\u8fc7\u603b\u7ebf\u7ed1\u5b9a\u4e00\u4e2a\u5916\u90e8\u4ee3\u7406\uff08Rabbit MQ\u6216Kafka\uff0c\u53d6\u51b3\u4e8e\u4f60\u7684\u9009\u62e9\uff09\u3002\u793a\u4f8b\u5e94\u7528\uff1a\n\n\n@SpringBootApplication\n@EnableBinding(Source.class)\npublic class StreamdemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(StreamdemoApplication.class, args);\n    }\n\n    @Bean\n    @InboundChannelAdapter(value = Source.OUTPUT)\n    public MessageSource<String> timerMessageSource() {\n        return () -> new GenericMessage<>(new SimpleDateFormat().format(new Date()));\n    }\n\n}\n\n\n\n\u786e\u5b9a\u5e94\u7528\u8fd0\u884c\u7684\u65f6\u5019Kafka\u540c\u65f6\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u770b\nkafka-console-consumer.sh\nkafka\u63d0\u4f9b\u7684\u5b9e\u7528\u5de5\u5177\uff0c\u7528\u6765\u76d1\u63a7\u6d88\u606f\u53d1\u9001\u3002\n\n\nSample Projects\n#\n\n\nSource\n\n\nSink\n\n\nTransformer\n\n\nMulti-binder\n\n\nRxJava Processor\n\n\nRelated Projects\n#\n\n\nSpring Cloud Stream Applications\n\n\nSpring Cloud Data Flow\n\n\nSpring XD",
            "title": "Spring Cloud Stream"
        },
        {
            "location": "/project/SpringCloudStream/#spring-cloud-stream",
            "text": "Spring Cloud Stream\u662f\u4e00\u4e2a\u6784\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u6846\u67b6\u3002Spring Cloud Stream\u6784\u5efa\u5728Spring Boot\u4e4b\u4e0a\u7528\u4ee5\u521b\u5efaDevOps\u53cb\u597d\u7684\u5fae\u670d\u52a1\uff0c\u5e76\u4e14Spring Integration\u63d0\u4f9b\u4e86\u548c\u6d88\u606f\u4ee3\u7406\u7684\u8fde\u63a5\u3002Spring Cloud Stream\u63d0\u4f9b\u6d88\u606f\u4ee3\u7406\u7684\u81ea\u7528\u914d\u7f6e\uff0c\u5f15\u5165\u53d1\u5e03\u8ba2\u9605\u7684\u8bed\u4e49\u6982\u5ff5\uff0c\u5f15\u5165\u4e0d\u540c\u7684\u4e2d\u95f4\u4ef6\u5382\u5546\u901a\u7528\u7684\u7684\u6d88\u8d39\u7ec4\u548c\u5206\u533a\uff0c\u8fd9\u4e9b\u81ea\u7528\u914d\u7f6e\u63d0\u4f9b\u4e86\u521b\u5efa\u6d41\u5904\u7406\u5e94\u7528\u7684\u57fa\u7840\u3002  \u6dfb\u52a0@EnableBinding\u6ce8\u89e3\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u88ab@StreamListener\u4fee\u9970\u7684\u65b9\u6cd5\u53ef\u4ee5\u7acb\u5373\u8fde\u63a5\u5230\u6d88\u606f\u4ee3\u7406\uff0c\u4f60\u5c06\u6536\u5230\u6d41\u5904\u7406\u4e8b\u4ef6\u3002  For full documentation visit  spring cloud stream .",
            "title": "Spring Cloud Stream"
        },
        {
            "location": "/project/SpringCloudStream/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-stream \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-stream-dependencies</artifactId>\n            <version>1.0.2.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-stream</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-stream-kafka</artifactId>\n    </dependency>\n</dependencies>  \u53ea\u8981classpath\u4e2d\u5305\u542b Spring Cloud Stream\u548cSpring Cloud Stream binder\uff0c\u5e76\u4e14\u88ab@EnableBinding\u4fee\u9970\uff0c\u5e94\u7528\u5c06\u901a\u8fc7\u603b\u7ebf\u7ed1\u5b9a\u4e00\u4e2a\u5916\u90e8\u4ee3\u7406\uff08Rabbit MQ\u6216Kafka\uff0c\u53d6\u51b3\u4e8e\u4f60\u7684\u9009\u62e9\uff09\u3002\u793a\u4f8b\u5e94\u7528\uff1a  @SpringBootApplication\n@EnableBinding(Source.class)\npublic class StreamdemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(StreamdemoApplication.class, args);\n    }\n\n    @Bean\n    @InboundChannelAdapter(value = Source.OUTPUT)\n    public MessageSource<String> timerMessageSource() {\n        return () -> new GenericMessage<>(new SimpleDateFormat().format(new Date()));\n    }\n\n}  \u786e\u5b9a\u5e94\u7528\u8fd0\u884c\u7684\u65f6\u5019Kafka\u540c\u65f6\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u770b kafka-console-consumer.sh kafka\u63d0\u4f9b\u7684\u5b9e\u7528\u5de5\u5177\uff0c\u7528\u6765\u76d1\u63a7\u6d88\u606f\u53d1\u9001\u3002",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudStream/#sample-projects",
            "text": "Source  Sink  Transformer  Multi-binder  RxJava Processor",
            "title": "Sample Projects"
        },
        {
            "location": "/project/SpringCloudStream/#related-projects",
            "text": "Spring Cloud Stream Applications  Spring Cloud Data Flow  Spring XD",
            "title": "Related Projects"
        },
        {
            "location": "/project/SpringCloudStreamModules/",
            "text": "Spring Cloud Stream Applications\n#\n\n\nFor full documentation visit \nspring cloud stream applications\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Stream Modules"
        },
        {
            "location": "/project/SpringCloudStreamModules/#spring-cloud-stream-applications",
            "text": "For full documentation visit  spring cloud stream applications .",
            "title": "Spring Cloud Stream Applications"
        },
        {
            "location": "/project/SpringCloudStreamModules/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudTask/",
            "text": "Spring Cloud Task\n#\n\n\nFor full documentation visit \nspring cloud task\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Task"
        },
        {
            "location": "/project/SpringCloudTask/#spring-cloud-task",
            "text": "For full documentation visit  spring cloud task .",
            "title": "Spring Cloud Task"
        },
        {
            "location": "/project/SpringCloudTask/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudZookeeper/",
            "text": "Spring Cloud Zookeeper\n#\n\n\nSpring Cloud Zookeeper\u63d0\u4f9b\u4e86Zookeeper\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\u548c\u5206\u5e03\u5f0f\u914d\u7f6e\u3002\n\n\nFor full documentation visit \nspring cloud zookeeper\n.\n\n\nFeatures\n#\n\n\npring Cloud Zookeeper features:\n\n\n\n\n\u670d\u52a1\u53d1\u73b0\uff1a\u53ef\u4ee5\u5728Zookeeper\u4e2d\u6ce8\u518c\u5b9e\u4f8b\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b\n\n\n\u652f\u6301Ribbon\uff0c\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\n\n\n\u652f\u6301Zuul\uff0c\u52a8\u6001\u8def\u7531\u548c\u8fc7\u6ee4\u5668\n\n\n\u5206\u5e03\u5f0f\u914d\u7f6e\uff1a\u5229\u7528Zookeeper\u5b58\u53d6\u6570\u636e\n\n\n\n\nQuick Start\n#\n\n\n\u9879\u76ee\u4e2d\u4f7f\u7528\nspring-cloud-zookeeper\n\u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e\nMaven\n\u548c\nGradle\n\u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002\n\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-zookeeper-dependencies</artifactId>\n            <version>1.0.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-zookeeper-discovery</artifactId>\n    </dependency>\n</dependencies>\n\n\n\n\u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Zookeeper\uff0cApache Curator\u548cZookeeper Java\u5ba2\u6237\u7aef \uff0c\u6240\u6709\u5e94\u7528\u4e86 \n@EnableDiscoveryClient\n\u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Zookeeper\u670d\u52a1\nhttp://localhost:2181\n\uff08\nzookeeper.connectString\n\u9ed8\u8ba4\u503c\uff09\n\n\n@Configuration\n@EnableAutoConfiguration\n@EnableDiscoveryClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}\n\n\n\n\u672c\u5730Zookeeper\u670d\u52a1\u5fc5\u987b\u8fd0\u884c\uff0c\u53c2\u89c1\nZookeeper\n\u6587\u6863\u3002",
            "title": "Spring Cloud Zookeeper"
        },
        {
            "location": "/project/SpringCloudZookeeper/#spring-cloud-zookeeper",
            "text": "Spring Cloud Zookeeper\u63d0\u4f9b\u4e86Zookeeper\u7684\u6574\u5408\uff0cSpring Boot\u5e94\u7528\u901a\u8fc7\u81ea\u52a8\u914d\u7f6e\u548c\u7ed1\u5b9a\u73af\u5883\u548c\u5176\u4ed6spring\u6a21\u578b\u98ce\u683c\u3002\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6ce8\u91ca\uff0c\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u5feb\u901f\u542f\u7528\u5e38\u89c1\u6a21\u5f0f\u914d\u7f6e\uff0c\u5e76\u6784\u5efa\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u8be5\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0\u548c\u5206\u5e03\u5f0f\u914d\u7f6e\u3002  For full documentation visit  spring cloud zookeeper .",
            "title": "Spring Cloud Zookeeper"
        },
        {
            "location": "/project/SpringCloudZookeeper/#features",
            "text": "pring Cloud Zookeeper features:   \u670d\u52a1\u53d1\u73b0\uff1a\u53ef\u4ee5\u5728Zookeeper\u4e2d\u6ce8\u518c\u5b9e\u4f8b\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528Spring\u7ba1\u7406bean\u5b9e\u4f8b  \u652f\u6301Ribbon\uff0c\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861  \u652f\u6301Zuul\uff0c\u52a8\u6001\u8def\u7531\u548c\u8fc7\u6ee4\u5668  \u5206\u5e03\u5f0f\u914d\u7f6e\uff1a\u5229\u7528Zookeeper\u5b58\u53d6\u6570\u636e",
            "title": "Features"
        },
        {
            "location": "/project/SpringCloudZookeeper/#quick-start",
            "text": "\u9879\u76ee\u4e2d\u4f7f\u7528 spring-cloud-zookeeper \u63a8\u8350\u57fa\u4e8e\u4e00\u4e2a\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf -- \u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u53ef\u4ee5\u88ab\u590d\u5236\u548c\u7c98\u8d34\u5230\u60a8\u7684\u6784\u5efa\u3002\u9700\u8981\u5e2e\u52a9\u5417\uff1f\u770b\u770b\u6211\u4eec\u57fa\u4e8e Maven \u548c Gradle \u6784\u5efa\u7684\u5165\u95e8\u6307\u5357\u3002  <dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-zookeeper-dependencies</artifactId>\n            <version>1.0.1.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-zookeeper-discovery</artifactId>\n    </dependency>\n</dependencies>  \u53ea\u8981classpath\u4e2d\u5305\u542bSpring Cloud Zookeeper\uff0cApache Curator\u548cZookeeper Java\u5ba2\u6237\u7aef \uff0c\u6240\u6709\u5e94\u7528\u4e86  @EnableDiscoveryClient \u6ce8\u89e3\u7684Spring Boot\u5e94\u7528\u5c06\u5c1d\u8bd5\u8fde\u63a5Zookeeper\u670d\u52a1 http://localhost:2181 \uff08 zookeeper.connectString \u9ed8\u8ba4\u503c\uff09  @Configuration\n@EnableAutoConfiguration\n@EnableDiscoveryClient\n@RestController\npublic class Application {\n\n  @RequestMapping(\"/\")\n  public String home() {\n    return \"Hello World\";\n  }\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n\n}  \u672c\u5730Zookeeper\u670d\u52a1\u5fc5\u987b\u8fd0\u884c\uff0c\u53c2\u89c1 Zookeeper \u6587\u6863\u3002",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudforAmazonWebServices/",
            "text": "Spring Cloud for Amazon Web Services\n#\n\n\nFor full documentation visit \nspring cloud for amazon web services\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud for Amazon Web Services"
        },
        {
            "location": "/project/SpringCloudforAmazonWebServices/#spring-cloud-for-amazon-web-services",
            "text": "For full documentation visit  spring cloud for amazon web services .",
            "title": "Spring Cloud for Amazon Web Services"
        },
        {
            "location": "/project/SpringCloudforAmazonWebServices/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudConnectors/",
            "text": "Spring Cloud Connectors\n#\n\n\nFor full documentation visit \nspring cloud connectors\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud Connectors"
        },
        {
            "location": "/project/SpringCloudConnectors/#spring-cloud-connectors",
            "text": "For full documentation visit  spring cloud connectors .",
            "title": "Spring Cloud Connectors"
        },
        {
            "location": "/project/SpringCloudConnectors/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/project/SpringCloudCLI/",
            "text": "Spring Cloud CLI\n#\n\n\nFor full documentation visit \nspring cloud cli\n.\n\n\nQuick Start\n#",
            "title": "Spring Cloud CLI"
        },
        {
            "location": "/project/SpringCloudCLI/#spring-cloud-cli",
            "text": "For full documentation visit  spring cloud cli .",
            "title": "Spring Cloud CLI"
        },
        {
            "location": "/project/SpringCloudCLI/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/user-guide/eureka/",
            "text": "\u8bd1\u8005\uff1a\u738b\u9e3f\u98de / brucewhf@gmail.com\n\n\n\n\nEureka\u5b66\u4e60\u6587\u6863\u8d44\u6599\uff1a\n\n\n\n\nNetflix Eureka\u8be6\u7ec6\u6587\u6863\n\n\nSpring Cloud\u4e2d\u5bf9Eureka\u7684\u4ecb\u7ecd\n\n\n\n\nSpring Cloud Netflix\u63d0\u4f9b\u4e86\u5bf9Netflix\b\u5f00\u6e90\u9879\u76ee\u7684\u96c6\u6210\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u4ee5Spring Boot\u7f16\u7a0b\u98ce\u683c\u4f7f\u7528Netflix\u65d7\u4e0b\u76f8\u5173\u6846\u67b6\u3002\u4f60\u53ea\u9700\u8981\u5728\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u6ce8\u89e3\uff0c\u5c31\u80fd\u4f7f\u7528\u6210\u719f\u7684Netflix\u7ec4\u4ef6\u6765\u5feb\u901f\u5b9e\u73b0\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5e38\u89c1\u67b6\u6784\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u5305\u62ec\u670d\u52a1\u53d1\u73b0(Eureka), \u65ad\u8def\u5668(Hystrix), \u667a\u80fd\u8def\u7531(Zuul)\u548c\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861(Ribbon)\u3002\n\n\n\u670d\u52a1\u53d1\u73b0\uff1aEureka\u5ba2\u6237\u7aef\n#\n\n\n\u670d\u52a1\u53d1\u73b0\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u4e00\u9879\u6838\u5fc3\u670d\u52a1\u3002\u5982\u679c\u6ca1\u6709\u8be5\u670d\u52a1\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u4e3a\u6bcf\u4e00\u4e2a\u670d\u52a1\u8c03\u7528\u8005\u624b\u5de5\u914d\u7f6e\u53ef\u7528\u670d\u52a1\u7684\u5730\u5740\uff0c\u8fd9\u4e0d\u4ec5\u7e41\u7410\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002Eureka\u5305\u62ec\u4e86\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u4e24\u90e8\u5206\u3002\u670d\u52a1\u7aef\u53ef\u4ee5\u505a\u5230\u9ad8\u53ef\u7528\u96c6\u7fa4\u90e8\u7f72\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u81ea\u52a8\u540c\u6b65\uff0c\u6709\u76f8\u540c\u7684\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\u3002\n\n\n\u5411Eureka\u6ce8\u518c\u670d\u52a1\n#\n\n\n\u5f53\u5ba2\u6237\u7aef\u5411Eureka\u6ce8\u518c\u81ea\u5df1\u65f6\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u5143\u4fe1\u606f\uff0c\u5982\u4e3b\u673a\u540d\u3001\u7aef\u53e3\u53f7\u3001\u83b7\u53d6\u5065\u5eb7\u4fe1\u606f\u7684url\u548c\u4e3b\u9875\u7b49\u3002Eureka\u901a\u8fc7\u5fc3\u8df3\u8fde\u63a5\u5224\u65ad\u670d\u52a1\u662f\u5426\u5728\u7ebf\uff0c\u5982\u679c\u5fc3\u8df3\u68c0\u6d4b\u5931\u8d25\u8d85\u8fc7\u6307\u5b9a\u65f6\u95f4\uff0c\u5bf9\u5e94\u7684\u670d\u52a1\u901a\u5e38\u5c31\u4f1a\u88ab\u79fb\u51fa\u53ef\u7528\u670d\u52a1\u5217\u8868\u3002\n\n\n\n\n\u8bd1\u8005\u6ce8\uff1a\u5411Eureka Server\u6ce8\u518c\u8fc7\u7684\u670d\u52a1\u4f1a\u6bcf30\u79d2\u5411Server\u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u8fde\u63a5, Server\u4f1a\u6839\u636e\u5fc3\u8df3\u6570\u636e\u66f4\u65b0\u8be5\u670d\u52a1\u7684\u5065\u5eb7\u72b6\u6001\u5e76\u590d\u5236\u5230\u5176\u4ed6Server\u4e2d\u3002\u5982\u679c\u8d85\u8fc790\u79d2\u6ca1\u6709\u6536\u5230\u8be5\u670d\u52a1\u7684\u5fc3\u8df3\u6570\u636e\uff0c\u5219Server\u4f1a\u5c06\u8be5\u670d\u52a1\u79fb\u51fa\u5217\u8868\u3002\u53c2\u8003\u6587\u6863\uff1ahttps://github.com/Netflix/eureka/wiki/Eureka-at-a-glance\n\n\n\n\nEureka Client\u4ee3\u7801\u793a\u4f8b\uff1a\n\n\n@Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableEurekaClient\n@RestController\npublic class Application {\n\n    @RequestMapping(\"/\")\n    public String home() {\n        return \"Hello world\";\n    }\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(Application.class).web(true).run(args);\n    }\n\n}\n\n\n\n\n(\u5176\u5b9e\u5c31\u662f\u4e2a\u666e\u901a\u7684Spring Boot\u5e94\u7528)\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u663e\u5f0f\u7684\u4f7f\u7528\u4e86\n@EnableEurekaClient\n\u6ce8\u89e3\uff0c\u5982\u679c\u4f60\u53ea\u6dfb\u52a0\u4e86Eureka\u76f8\u5173\u4f9d\u8d56(\u5373\u4f9d\u8d56\u4e2d\u6ca1\u6709\n@EnableEurekaClient\n\u7684\u5b9a\u4e49)\uff0c\u53ef\u4ee5\u4f7f\u7528\n@EnableDiscoveryClient\n\u6ce8\u89e3\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u9664\u6b64\u4e4b\u5916\u4f60\u5fc5\u987b\u6307\u5b9a\u4e00\u4e0bEureka\u670d\u52a1\u5668\u7684\u5730\u5740\uff1a\n\n\napplication.yml\n\n\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/\n\n\n\n\n\u5176\u4e2d\uff0c\ndefaultZone\n\u7684\u4f5c\u7528\u662f\u7ed9\u6ca1\u6709\u6307\u5b9a\nZone\n\u7684\u5ba2\u6237\u7aef\u4e00\u4e2a\u9ed8\u8ba4\u7684Eureka\u5730\u5740\u3002\n\n\n\n\n\u8bd1\u8005\u6ce8\uff1a\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u5f53\u524d\u670d\u52a1\u5c5e\u4e8e\u54ea\u4e00\u4e2a\nZone\n\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u5c5e\u4e8e\u9ed8\u8ba4\nZone\n\u3002\n\n\n\n\n\u9ed8\u8ba4\u7684\u5e94\u7528\u540d(Service ID)\u3001\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\u5206\u522b\u5bf9\u5e94\u914d\u7f6e\u4fe1\u606f\u4e2d\u7684\n${spring.application.name}\n\u3001\n${spring.application.name}\n\u548c\n${server.port}\n\u53c2\u6570\u3002\n\n\n\u4f7f\u7528\n@EnableEurekaClient\n\u6ce8\u89e3\u540e\u5f53\u524d\u5e94\u7528\u4f1a\u540c\u65f6\u53d8\u6210\u4e00\u4e2aEureka\u670d\u52a1\u7aef\u5b9e\u4f8b(\u5b83\u4f1a\u6ce8\u518c\u81ea\u8eab)\u548cEureka\u5ba2\u6237\u7aef(\u53ef\u4ee5\u67e5\u8be2\u5f53\u524d\u670d\u52a1\u5217\u8868)\uff0c\u4e0e\u6b64\u76f8\u5173\u7684\u914d\u7f6e\u90fd\u5728\u4ee5\neureka.instance.*\n\u5f00\u5934\u7684\u53c2\u6570\u4e0b\u3002\u53ea\u8981\u4f60\u6307\u5b9a\u4e86\nspring.application.name\n\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u653e\u5fc3\u7684\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u800c\u4e0d\u9700\u8981\u4fee\u6539\u4efb\u4f55\u914d\u7f6e\u3002\n\n\n\u8981\u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u53c2\u6570\uff0c\u8bf7\u53c2\u9605\nEurekaInstanceConfigBean\n\u548c\nEurekaClientConfigBean\n\u3002\n\n\nEureka Server\u7684\u8eab\u4efd\u9a8c\u8bc1\n#\n\n\n\u5982\u679c\u5ba2\u6237\u7aef\u7684\neureka.client.serviceUrl.defaultZone\n\u53c2\u6570\u503c(\u5373Eureka Server\u7684\u5730\u5740)\u4e2d\u5305\u542b\nHTTP Basic Authentication\n\u4fe1\u606f\uff0c\u5982\n[http://user:password@localhost:8761/eureka](http://user:password@localhost:8761/eureka)\n\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u8be5\u7528\u6237\u540d\u3001\u5bc6\u7801\u4fe1\u606f\u4e0eEureka\u670d\u52a1\u7aef\u8fdb\u884c\u9a8c\u8bc1\u3002\u5982\u679c\u4f60\u9700\u8981\u66f4\u590d\u6742\u7684\u9a8c\u8bc1\u903b\u8f91\uff0c\u4f60\u5fc5\u987b\u6ce8\u518c\u4e00\u4e2a\nDiscoveryClientOptionalArgs\n\u7ec4\u4ef6\uff0c\u5e76\u5c06\nClientFilter\n\u7ec4\u4ef6\u6ce8\u5165\uff0c\u5728\u8fd9\u91cc\u5b9a\u4e49\u7684\u903b\u8f91\u4f1a\u5728\u6bcf\u6b21\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u8d77\u8bf7\u6c42\u65f6\u6267\u884c\u3002\n\n\n\n\n\u7531\u4e8eEureka\u7684\u9650\u5236\uff0cEureka\u4e0d\u652f\u6301\u5355\u8282\u70b9\u8eab\u4efd\u9a8c\u8bc1\u3002\n\n\n\n\n\u72b6\u6001\u9875\u548c\u5065\u5eb7\u4fe1\u606f\u6307\u793a\u5668\n#\n\n\nEureka\u5e94\u7528\u7684\u72b6\u6001\u9875\u548c\u5065\u5eb7\u4fe1\u606f\u9ed8\u8ba4\u7684url\u4e3a\n/info\n\u548c\n/health\n\uff0c\u8fd9\u4e0e\nSpring Boot Actuator\n\u4e2d\u5bf9\u5e94\u7684Endpoint\u662f\u91cd\u590d\u7684\uff0c\u56e0\u6b64\u4f60\u5fc5\u987b\u8fdb\u884c\u4fee\u6539\uff1a\n\n\neureka:\n  instance:\n    statusPageUrlPath: ${management.context-path}/info\n    healthCheckUrlPath: ${management.context-path}/health\n\n\n\n\n\u5ba2\u6237\u7aef\u901a\u8fc7\u8fd9\u4e9bURL\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5411\u67d0\u4e2a\u670d\u52a1\u53d1\u8d77\u8bf7\u6c42\u3002\n\n\n\u4f7f\u7528HTTPS\n#\n\n\n\u4f60\u53ef\u4ee5\u6307\u5b9a\nEurekaInstanceConfig\n\u7c7b\u4e2d\u7684\neureka.instance.[nonSecurePortEnabled,securePortEnabled]=[false,true]\n\u5c5e\u6027\u6765\u6307\u5b9a\u662f\u5426\u4f7f\u7528HTTPS\u3002\u5f53\u914d\u7f6e\u4f7f\u7528HTTPS\u65f6\uff0cEureka Server\u4f1a\u8fd4\u56de\u4ee5\nhttps\n\u5f00\u5934\u7684\u670d\u52a1\u5730\u5740\u3002\n\n\n\u5373\u4f7f\u914d\u7f6e\u4e86\u4f7f\u7528HTTPS\uff0cEureka\u7684\u4e3b\u9875\u4f9d\u7136\u662f\u4ee5\u666e\u901a HTTP \u65b9\u5f0f\u8bbf\u95ee\u7684\u3002\u4f60\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e9b\u914d\u7f6e\u6765\u5c06\u8fd9\u4e9b\u9875\u9762\u4e5f\u901a\u8fc7HTTPS\u4fdd\u62a4\u8d77\u6765\uff1a\n\n\neureka:\n  instance:\n    statusPageUrl: https://${eureka.hostname}/info\n    healthCheckUrl: https://${eureka.hostname}/health\n    homePageUrl: https://${eureka.hostname}/\n\n\n\n\n\n\n\u6ce8\u610f\uff0c\neureka,hostname\n\u662fEureka\u539f\u751f\u5c5e\u6027\uff0c\u53ea\u6709\u65b0\u7248\u672c\u7684Eureka\u624d\u652f\u6301\u8be5\u5c5e\u6027\u3002\u4f60\u4e5f\u53ef\u4ee5\b\u7528Spring EL\u8868\u8fbe\u5f0f\u4ee3\u66ff\uff1a\n${eureka.instance.hostName}\n\n\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u524d\u7aef\u90e8\u7f72\u4e86\u4ee3\u7406\uff0c\u5e76\u4e14SSL\u7684\u7ec8\u70b9\u662f\u6b64\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u4f60\u5c31\u9700\u8981\u5728\u5e94\u7528\u4e2d\u89e3\u6790\nforwarded\n\u8bf7\u6c42\u5934\u3002\u5982\u679c\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e86\nX-Forwarded-*\n\u76f8\u5173\u53c2\u6570\uff0cSpring Boot\u4e2d\u7684\u5d4c\u5165\u5f0fTomcat\u4f1a\u81ea\u52a8\u89e3\u6790\u8be5\u8bf7\u6c42\u5934\u3002\u4e00\u79cd\u8868\u660e\u4f60\u6ca1\u6709\u5904\u7406\u597d\nforwarded\n\u8bf7\u6c42\u5934\u7684\u8ff9\u8c61\u5c31\u662f\u4f60\u7684\u5e94\u7528\u6e32\u67d3\u51fa\u7684HTML\u9875\u9762\u4e2d\u94fe\u63a5\u663e\u793a\u7684\u662f\u9519\u8bef\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\u3002\n\n\n\n\n\u5065\u5eb7\u68c0\u67e5\n#\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cEureka\u901a\u8fc7\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u5fc3\u8df3\u5305\u6765\u5224\u65ad\u5ba2\u6237\u7aef\u662f\u5426\u5728\u7ebf\u3002\u5982\u679c\u4f60\u4e0d\u663e\u5f0f\u6307\u5b9a\uff0c\u5ba2\u6237\u7aef\u5728\u5fc3\u8df3\u5305\u4e2d\u4e0d\u4f1a\u5305\u542b\u5f53\u524d\u5e94\u7528\u7684\u5065\u5eb7\u6570\u636e(\u7531Spring Boot Actuator\u63d0\u4f9b)\u3002\u8fd9\u610f\u5473\u7740\u53ea\u8981\u5ba2\u6237\u7aef\u542f\u52a8\u65f6\u5b8c\u6210\u4e86\u670d\u52a1\u6ce8\u518c\uff0c\u90a3\u4e48\u8be5\u5ba2\u6237\u7aef\u5728\u4e3b\u52a8\u6ce8\u9500\u4e4b\u524d\u5728Eureka\u4e2d\u7684\u72b6\u6001\u4f1a\u6c38\u8fdc\u662f\nUP\n\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4fee\u6539\u8fd9\u4e00\u9ed8\u8ba4\u884c\u4e3a\uff0c\u5373\u5728\u5ba2\u6237\u7aef\u53d1\u9001\u5fc3\u8df3\u5305\u65f6\u4f1a\u5e26\u4e0a\u81ea\u5df1\u7684\u5065\u5eb7\u4fe1\u606f\u3002\u8fd9\u6837\u505a\u7684\u540e\u679c\u662f\u53ea\u6709\u5f53\u8be5\u670d\u52a1\u7684\u72b6\u6001\u662f\nUP\n\u65f6\u624d\u80fd\u88ab\u8bbf\u95ee\uff0c\u5176\u5b83\u7684\u4efb\u4f55\u72b6\u6001\u90fd\u4f1a\u5bfc\u81f4\u8be5\u670d\u52a1\u4e0d\u80fd\u88ab\u8c03\u7528\u3002\n\n\neureka:\n  client:\n    healthcheck:\n      enabled: true\n\n\n\n\n\u5982\u679c\u4f60\u60f3\u5bf9\u5065\u5eb7\u68c0\u67e5\u6709\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\ncom.netflix.appinfo.HealthCheckHandler\n\u63a5\u53e3\u3002\n\n\n\n\n\u4ee5\u4e0b\u5185\u5bb9\u7ffb\u8bd1\u81eaEureka\u5b98\u65b9\u624b\u518c\uff1a\n\n\nEureka\u5ba2\u6237\u7aef\u4f1a\u6bcf\u969430s\u5411\u670d\u52a1\u7aef\u53d1\u9001\u5fc3\u8df3\u5305\u4ee5\u544a\u77e5\u670d\u52a1\u7aef\u5f53\u524d\u5ba2\u6237\u7aef\u6ca1\u6709\u6302\u6389\u3002\u5bf9\u4e8eClient\u6765\u8bf4\uff0c\u670d\u52a1Server\u8d85\u8fc790s\u6ca1\u6709\u6536\u5230\u8be5Client\u7684\u5fc3\u8df3\u6570\u636e\uff0cServer\u5c31\u4f1a\u628a\u8be5Client\u79fb\u51fa\u670d\u52a1\u5217\u8868\u3002\u6700\u597d\u4e0d\u8981\u4fee\u653930s\u7684\u9ed8\u8ba4\u5fc3\u8df3\u95f4\u9694\uff0c\u56e0\u4e3aServer\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u65f6\u95f4\u6570\u503c\u6765\u5224\u65ad\u662f\u5426\u51fa\u73b0\u4e86\u5927\u9762\u79ef\u6545\u969c\u3002(\u8bd1\u8005\uff1a\u610f\u601d\u662f\u6bd4\u5982Eureka\u9ed8\u8ba42\u5206\u949f\u6536\u4e0d\u5230\u5fc3\u8df3\u5c31\u8ba4\u4e3a\u7f51\u7edc\u51fa\u4e86\u6545\u969c\uff0c\u4f60\u5982\u679c\u628a\u8fd9\u4e2a\u5fc3\u8df3\u95f4\u9694\u6539\u6210\u4e863\u5206\u949f\uff0c\u90a3\u5c31\u51fa\u95ee\u9898\u4e86\u3002)\n\n\n\n\nEureka\u5143\u6570\u636e\u8bf4\u660e\n#\n\n\n\u6211\u4eec\u6709\u5fc5\u8981\u82b1\u4e00\u4e9b\u65f6\u95f4\u6765\u4e86\u89e3\u4e00\u4e0bEureka\u7684\u5143\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u4ee5\u9002\u5e94\u7279\u5b9a\u7684\u4e1a\u52a1\u573a\u666f\u3002\u50cf\u4e3b\u673a\u540d\u3001IP\u5730\u5740\u3001\u7aef\u53e3\u53f7\u3001\u72b6\u6001\u9875url\u548c\u5065\u5eb7\u68c0\u67e5url\u90fd\u662fEureka\u5b9a\u4e49\u7684\u6807\u51c6\u5143\u6570\u636e\u3002\u8fd9\u4e9b\u5143\u6570\u636e\u4f1a\u88ab\u4fdd\u5b58\u5728Eureka Server\u7684\u6ce8\u518c\u4fe1\u606f\u4e2d\uff0c\u5ba2\u6237\u7aef\u4f1a\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\u6765\u5411\u9700\u8981\u8c03\u7528\u7684\u670d\u52a1\u76f4\u63a5\u53d1\u8d77\u8fde\u63a5\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\neureka.instance.metadataMap\n\u5f00\u5934\u7684\u53c2\u6570\u6765\u6dfb\u52a0\u4f60\u81ea\u5b9a\u4e49\u7684\u5143\u6570\u636e\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u4f1a\u8bfb\u53d6\u5230\u8be5\u4fe1\u606f\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f60\u80fd\u7ed9\u5ba2\u6237\u7aef\u81ea\u5b9a\u4e49\u4e00\u4e9b\u884c\u4e3a\u3002\n\n\n\u4f7f\u7528EurekaClient\u5bf9\u8c61\n#\n\n\n\u5f53\u6dfb\u52a0\u4e86\n@EnableDiscoveryClient\n\u6216\n@EnableEurekaClient\n\u6ce8\u89e3\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\nEurekaClient\n\u5bf9\u8c61\u6765\u83b7\u53d6\u670d\u52a1\u5217\u8868\uff1a\n\n\n@Autowired\nprivate EurekaClient discoveryClient;\n\npublic String serviceUrl() {\n    InstanceInfo instance = discoveryClient.getNextServerFromEureka(\"STORES\", false);\n    return instance.getHomePageUrl();\n}\n\n\n\n\n\n\n\u4e0d\u8981\u5728\n@PostConstruct\n\u6216\n@Scheduled\n\u65b9\u6cd5\u4e2d\u4f7f\u7528\nEurekaClient\n\u3002\u5728\nApplicationContext\n\u8fd8\u6ca1\u6709\u5b8c\u5168\u542f\u52a8\u65f6\u4f7f\u7528\u8be5\u5bf9\u8c61\u4f1a\u53d1\u751f\u9519\u8bef\u3002\n\n\n\n\n\u4f7f\u7528Spring\u7684DiscoveryClient\u5bf9\u8c61\n#\n\n\n\u4f60\u6ca1\u6709\u5fc5\u8981\u76f4\u63a5\u4f7f\u7528Netflix\u539f\u751f\u7684\nEurekaClient\n\u5bf9\u8c61\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e00\u4e9b\u5c01\u88c5\u4f7f\u7528\u8d77\u6765\u4f1a\u66f4\u65b9\u4fbf\u3002Spring Cloud\u652f\u6301\nFeign\n\u548c\nSpring RestTmpelate\n\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u7684\u903b\u8f91\u540d\u800c\u4e0d\u662fURL\u5730\u5740\u6765\u67e5\u8be2\u670d\u52a1\u3002\u5982\u679c\u60f3\u7ed9\nRibbon\n\u624b\u5de5\u6307\u5b9a\u670d\u52a1\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u5c06\n<client>.ribbon.listOfServers\n\u5c5e\u6027\u8bbe\u4e3a\u9017\u53f7\u5206\u9694\u7684\u7269\u7406\u5730\u5740\u6216\u4e3b\u673a\u540d, \u53c2\u6570\u4e2d\u7684\nclient\n\u662f\u670d\u52a1id\uff0c\u5373\u670d\u52a1\u540d\u3002\n\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528Spring\u63d0\u4f9b\u7684\nDiscoveryClient\n\u5bf9\u8c61\u4ece\u800c\u4ee3\u7801\u4e0d\u4f1a\u4e0eEureka\u7d27\u8026\u5408\uff1a\n\n\n@Autowired\nprivate DiscoveryClient discoveryClient;\n\npublic String serviceUrl() {\n    List<ServiceInstance> list = discoveryClient.getInstances(\"STORES\");\n    if (list != null && list.size() > 0 ) {\n        return list.get(0).getUri();\n    }\n    return null;\n}\n\n\n\n\n\u4e3a\u4ec0\u4e48\u6ce8\u518c\u4e00\u4e2a\u670d\u52a1\u8fd9\u4e48\u6162?\n#\n\n\n\u670d\u52a1\u7684\u6ce8\u518c\u6d89\u53ca\u5230\u5fc3\u8df3\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3a\u6bcf30\u79d2\u4e00\u6b21\u3002\u53ea\u6709\u5f53Eureka\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u672c\u5730\u7f13\u5b58\u4e2d\u7684\u670d\u52a1\u5143\u6570\u636e\u76f8\u540c\u65f6\u8fd9\u4e2a\u670d\u52a1\u624d\u80fd\u88ab\u5176\u5b83\u5ba2\u6237\u7aef\u53d1\u73b0\uff0c\u8fd9\u9700\u89813\u4e2a\u5fc3\u8df3\u5468\u671f\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\neureka.instance.leaseRenewalIntervalInSeconds\n\u8c03\u6574\u8fd9\u4e2a\u65f6\u95f4\u95f4\u9694\u6765\u52a0\u5feb\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f60\u6700\u597d\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u56e0\u4e3aEureka\u5185\u90e8\u7684\u67d0\u4e9b\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u8be5\u65f6\u95f4\u95f4\u9694\u3002\n\n\n\u670d\u52a1\u53d1\u73b0\uff1aEureka\u670d\u52a1\u7aef\n#\n\n\n\u6dfb\u52a0\nspring-cloud-starter-eureka-server\n\uff0c\u4e3b\u7c7b\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a\n\n\n@SpringBootApplication\n@EnableEurekaServer\npublic class Application {\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(Application.class).web(true).run(args);\n    }\n\n}\n\n\n\n\n\u670d\u52a1\u542f\u52a8\u540e\uff0cEureka\u6709\u4e00\u4e2a\u5e26UI\u7684\u4e3b\u9875\uff0c\u6ce8\u518c\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7\n/eureka/*\n\u4e0b\u7684URL\u83b7\u53d6\u5230\u3002\n\n\n\u9ad8\u53ef\u7528, Zone \u548c Region\n#\n\n\nEureka\u628a\u6240\u6709\u6ce8\u518c\u4fe1\u606f\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6240\u6709\u6ce8\u518c\u8fc7\u7684\u5ba2\u6237\u7aef\u90fd\u4f1a\u5411Eureka\u53d1\u9001\u5fc3\u8df3\u5305\u6765\u4fdd\u6301\u8fde\u63a5\u3002\u5ba2\u6237\u7aef\u4f1a\u6709\u4e00\u4efd\u672c\u5730\u6ce8\u518c\u4fe1\u606f\u7684\u7f13\u5b58\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u8fdc\u7a0b\u8c03\u7528\u65f6\u90fd\u5411Eureka\u67e5\u8be2\u6ce8\u518c\u4fe1\u606f\u3002\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cEureka\u670d\u52a1\u7aef\u81ea\u8eab\u4e5f\u662f\u4e2a\u5ba2\u6237\u7aef\uff0c\u6240\u4ee5\u9700\u8981\u6307\u5b9a\u4e00\u4e2aEureka Server\u7684URL\u4f5c\u4e3a\"\u4f19\u4f34\"(peer)\u3002\u5982\u679c\u4f60\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u5730\u5740\uff0cEureka Server\u4e5f\u80fd\u6b63\u5e38\u542f\u52a8\u5de5\u4f5c\uff0c\u4f46\u662f\u5728\u65e5\u5fd7\u4e2d\u4f1a\u6709\u5927\u91cf\u5173\u4e8e\u627e\u4e0d\u5230peer\u7684\u9519\u8bef\u4fe1\u606f\u3002\n\n\nStandalone\u6a21\u5f0f\n#\n\n\n\u53ea\u8981Eureka Server\u8fdb\u7a0b\u4e0d\u4f1a\u6302\u6389\uff0c\u8fd9\u79cd\u96c6Server\u548cClient\u4e8e\u4e00\u8eab\u548c\u5fc3\u8df3\u5305\u7684\u6a21\u5f0f\u80fd\u8ba9Standalone(\u5355\u53f0)\u90e8\u7f72\u7684Eureka Server\u975e\u5e38\u5bb9\u6613\u8fdb\u884c\u707e\u96be\u6062\u590d\u3002\u5728 Standalone \u6a21\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u914d\u7f6e\u6765\u5173\u95ed\u67e5\u627e\u201c\u4f19\u4f34\u201d\u7684\u884c\u4e3a\uff1a\n\n\nserver:\n  port: 8761\n\neureka:\n  instance:\n    hostname: localhost\n  client:\n    registerWithEureka: false\n    fetchRegistry: false\n    serviceUrl:\n      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\n\n\n\n\n\u6ce8\u610f\uff0c\nserviceUrl\n\u4e2d\u7684\u5730\u5740\u7684\u4e3b\u673a\u540d\u8981\u4e0e\u672c\u5730\u4e3b\u673a\u540d\u76f8\u540c\u3002\n\n\n\"\u4f19\u4f34\"\u611f\u77e5\n#\n\n\nEureka Server\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u591a\u4e2a\u5b9e\u4f8b\u5e76\u76f8\u4e92\u6307\u5b9a\u4e3a\u201c\u4f19\u4f34\u201d\u7684\u65b9\u5f0f\u6765\u8fbe\u5230\u66f4\u9ad8\u7684\u9ad8\u53ef\u7528\u6027\u3002\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f60\u53ea\u9700\u8981\u6307\u5b9a\u201c\u4f19\u4f34\u201d\u7684\u5730\u5740\u5c31\u53ef\u4ee5\u4e86:\n\n\n---\nspring:\n  profiles: peer1\neureka:\n  instance:\n    hostname: peer1\n  client:\n    serviceUrl:\n      defaultZone: http://peer2/eureka/\n\n---\nspring:\n  profiles: peer2\neureka:\n  instance:\n    hostname: peer2\n  client:\n    serviceUrl:\n      defaultZone: http://peer1/eureka/\n\n\n\n\n\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\nprofile\n\u914d\u7f6e\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728\u672c\u5730\u8fd0\u884c\u4e24\u4e2aEureka Server\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\n/etc/host\n\u6587\u4ef6\uff0c\u4f7f\u7528\u4e0a\u8ff0\u914d\u7f6e\u5728\u672c\u5730\u6d4b\u8bd5\u4f19\u4f34\u611f\u7279\u6027\u3002\n\n\n\u4f60\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2aEureka Server, \u5e76\u901a\u8fc7\u4f19\u4f34\u914d\u7f6e\u4f7f\u4e4b\u56f4\u6210\u4e00\u5708(\u76f8\u90bb\u4e24\u4e2aServer\u4e92\u4e3a\u4f19\u4f34)\uff0c\u8fd9\u4e9bServer\u4e2d\u7684\u6ce8\u518c\u4fe1\u606f\u90fd\u662f\u540c\u6b65\u7684\u3002If the peers are physically separated (inside a data centre or between multiple data centres) then the system can in principle survive split-brain type failures.\n\n\n\u4f7f\u7528IP\u5730\u5740\n#\n\n\n\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u66f4\u503e\u5411\u4e8e\u76f4\u63a5\u4f7f\u7528IP\u5730\u5740\u5b9a\u4e49\u670d\u52a1\u800c\u4e0d\u662f\u4f7f\u7528\u4e3b\u673a\u540d\u3002\u628a\neureka.instance.preferIpAddress\n\u53c2\u6570\u8bbe\u4e3a\ntrue\n\u65f6\uff0c\u5ba2\u6237\u7aef\u5728\u6ce8\u518c\u65f6\u5c31\u4f1a\u4f7f\u7528\u81ea\u5df1\u7684ip\u5730\u5740\u800c\u4e0d\u662f\u4e3b\u673a\u540d\u3002",
            "title": "Spring Cloud Eureka"
        },
        {
            "location": "/user-guide/eureka/#eureka",
            "text": "\u670d\u52a1\u53d1\u73b0\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\u7684\u4e00\u9879\u6838\u5fc3\u670d\u52a1\u3002\u5982\u679c\u6ca1\u6709\u8be5\u670d\u52a1\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u4e3a\u6bcf\u4e00\u4e2a\u670d\u52a1\u8c03\u7528\u8005\u624b\u5de5\u914d\u7f6e\u53ef\u7528\u670d\u52a1\u7684\u5730\u5740\uff0c\u8fd9\u4e0d\u4ec5\u7e41\u7410\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u51fa\u9519\u3002Eureka\u5305\u62ec\u4e86\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u4e24\u90e8\u5206\u3002\u670d\u52a1\u7aef\u53ef\u4ee5\u505a\u5230\u9ad8\u53ef\u7528\u96c6\u7fa4\u90e8\u7f72\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u81ea\u52a8\u540c\u6b65\uff0c\u6709\u76f8\u540c\u7684\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\u3002",
            "title": "\u670d\u52a1\u53d1\u73b0\uff1aEureka\u5ba2\u6237\u7aef"
        },
        {
            "location": "/user-guide/eureka/#eureka_1",
            "text": "\u5f53\u5ba2\u6237\u7aef\u5411Eureka\u6ce8\u518c\u81ea\u5df1\u65f6\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u5143\u4fe1\u606f\uff0c\u5982\u4e3b\u673a\u540d\u3001\u7aef\u53e3\u53f7\u3001\u83b7\u53d6\u5065\u5eb7\u4fe1\u606f\u7684url\u548c\u4e3b\u9875\u7b49\u3002Eureka\u901a\u8fc7\u5fc3\u8df3\u8fde\u63a5\u5224\u65ad\u670d\u52a1\u662f\u5426\u5728\u7ebf\uff0c\u5982\u679c\u5fc3\u8df3\u68c0\u6d4b\u5931\u8d25\u8d85\u8fc7\u6307\u5b9a\u65f6\u95f4\uff0c\u5bf9\u5e94\u7684\u670d\u52a1\u901a\u5e38\u5c31\u4f1a\u88ab\u79fb\u51fa\u53ef\u7528\u670d\u52a1\u5217\u8868\u3002   \u8bd1\u8005\u6ce8\uff1a\u5411Eureka Server\u6ce8\u518c\u8fc7\u7684\u670d\u52a1\u4f1a\u6bcf30\u79d2\u5411Server\u53d1\u9001\u4e00\u6b21\u5fc3\u8df3\u8fde\u63a5, Server\u4f1a\u6839\u636e\u5fc3\u8df3\u6570\u636e\u66f4\u65b0\u8be5\u670d\u52a1\u7684\u5065\u5eb7\u72b6\u6001\u5e76\u590d\u5236\u5230\u5176\u4ed6Server\u4e2d\u3002\u5982\u679c\u8d85\u8fc790\u79d2\u6ca1\u6709\u6536\u5230\u8be5\u670d\u52a1\u7684\u5fc3\u8df3\u6570\u636e\uff0c\u5219Server\u4f1a\u5c06\u8be5\u670d\u52a1\u79fb\u51fa\u5217\u8868\u3002\u53c2\u8003\u6587\u6863\uff1ahttps://github.com/Netflix/eureka/wiki/Eureka-at-a-glance   Eureka Client\u4ee3\u7801\u793a\u4f8b\uff1a  @Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableEurekaClient\n@RestController\npublic class Application {\n\n    @RequestMapping(\"/\")\n    public String home() {\n        return \"Hello world\";\n    }\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(Application.class).web(true).run(args);\n    }\n\n}  (\u5176\u5b9e\u5c31\u662f\u4e2a\u666e\u901a\u7684Spring Boot\u5e94\u7528)\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u663e\u5f0f\u7684\u4f7f\u7528\u4e86 @EnableEurekaClient \u6ce8\u89e3\uff0c\u5982\u679c\u4f60\u53ea\u6dfb\u52a0\u4e86Eureka\u76f8\u5173\u4f9d\u8d56(\u5373\u4f9d\u8d56\u4e2d\u6ca1\u6709 @EnableEurekaClient \u7684\u5b9a\u4e49)\uff0c\u53ef\u4ee5\u4f7f\u7528 @EnableDiscoveryClient \u6ce8\u89e3\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u9664\u6b64\u4e4b\u5916\u4f60\u5fc5\u987b\u6307\u5b9a\u4e00\u4e0bEureka\u670d\u52a1\u5668\u7684\u5730\u5740\uff1a  application.yml  eureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/  \u5176\u4e2d\uff0c defaultZone \u7684\u4f5c\u7528\u662f\u7ed9\u6ca1\u6709\u6307\u5b9a Zone \u7684\u5ba2\u6237\u7aef\u4e00\u4e2a\u9ed8\u8ba4\u7684Eureka\u5730\u5740\u3002   \u8bd1\u8005\u6ce8\uff1a\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u5f53\u524d\u670d\u52a1\u5c5e\u4e8e\u54ea\u4e00\u4e2a Zone \uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u5c5e\u4e8e\u9ed8\u8ba4 Zone \u3002   \u9ed8\u8ba4\u7684\u5e94\u7528\u540d(Service ID)\u3001\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\u5206\u522b\u5bf9\u5e94\u914d\u7f6e\u4fe1\u606f\u4e2d\u7684 ${spring.application.name} \u3001 ${spring.application.name} \u548c ${server.port} \u53c2\u6570\u3002  \u4f7f\u7528 @EnableEurekaClient \u6ce8\u89e3\u540e\u5f53\u524d\u5e94\u7528\u4f1a\u540c\u65f6\u53d8\u6210\u4e00\u4e2aEureka\u670d\u52a1\u7aef\u5b9e\u4f8b(\u5b83\u4f1a\u6ce8\u518c\u81ea\u8eab)\u548cEureka\u5ba2\u6237\u7aef(\u53ef\u4ee5\u67e5\u8be2\u5f53\u524d\u670d\u52a1\u5217\u8868)\uff0c\u4e0e\u6b64\u76f8\u5173\u7684\u914d\u7f6e\u90fd\u5728\u4ee5 eureka.instance.* \u5f00\u5934\u7684\u53c2\u6570\u4e0b\u3002\u53ea\u8981\u4f60\u6307\u5b9a\u4e86 spring.application.name \u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u653e\u5fc3\u7684\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u800c\u4e0d\u9700\u8981\u4fee\u6539\u4efb\u4f55\u914d\u7f6e\u3002  \u8981\u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u53c2\u6570\uff0c\u8bf7\u53c2\u9605 EurekaInstanceConfigBean \u548c EurekaClientConfigBean \u3002",
            "title": "\u5411Eureka\u6ce8\u518c\u670d\u52a1"
        },
        {
            "location": "/user-guide/eureka/#eureka-server",
            "text": "\u5982\u679c\u5ba2\u6237\u7aef\u7684 eureka.client.serviceUrl.defaultZone \u53c2\u6570\u503c(\u5373Eureka Server\u7684\u5730\u5740)\u4e2d\u5305\u542b HTTP Basic Authentication \u4fe1\u606f\uff0c\u5982 [http://user:password@localhost:8761/eureka](http://user:password@localhost:8761/eureka) \uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u8be5\u7528\u6237\u540d\u3001\u5bc6\u7801\u4fe1\u606f\u4e0eEureka\u670d\u52a1\u7aef\u8fdb\u884c\u9a8c\u8bc1\u3002\u5982\u679c\u4f60\u9700\u8981\u66f4\u590d\u6742\u7684\u9a8c\u8bc1\u903b\u8f91\uff0c\u4f60\u5fc5\u987b\u6ce8\u518c\u4e00\u4e2a DiscoveryClientOptionalArgs \u7ec4\u4ef6\uff0c\u5e76\u5c06 ClientFilter \u7ec4\u4ef6\u6ce8\u5165\uff0c\u5728\u8fd9\u91cc\u5b9a\u4e49\u7684\u903b\u8f91\u4f1a\u5728\u6bcf\u6b21\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u8d77\u8bf7\u6c42\u65f6\u6267\u884c\u3002   \u7531\u4e8eEureka\u7684\u9650\u5236\uff0cEureka\u4e0d\u652f\u6301\u5355\u8282\u70b9\u8eab\u4efd\u9a8c\u8bc1\u3002",
            "title": "Eureka Server\u7684\u8eab\u4efd\u9a8c\u8bc1"
        },
        {
            "location": "/user-guide/eureka/#_1",
            "text": "Eureka\u5e94\u7528\u7684\u72b6\u6001\u9875\u548c\u5065\u5eb7\u4fe1\u606f\u9ed8\u8ba4\u7684url\u4e3a /info \u548c /health \uff0c\u8fd9\u4e0e Spring Boot Actuator \u4e2d\u5bf9\u5e94\u7684Endpoint\u662f\u91cd\u590d\u7684\uff0c\u56e0\u6b64\u4f60\u5fc5\u987b\u8fdb\u884c\u4fee\u6539\uff1a  eureka:\n  instance:\n    statusPageUrlPath: ${management.context-path}/info\n    healthCheckUrlPath: ${management.context-path}/health  \u5ba2\u6237\u7aef\u901a\u8fc7\u8fd9\u4e9bURL\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5411\u67d0\u4e2a\u670d\u52a1\u53d1\u8d77\u8bf7\u6c42\u3002",
            "title": "\u72b6\u6001\u9875\u548c\u5065\u5eb7\u4fe1\u606f\u6307\u793a\u5668"
        },
        {
            "location": "/user-guide/eureka/#https",
            "text": "\u4f60\u53ef\u4ee5\u6307\u5b9a EurekaInstanceConfig \u7c7b\u4e2d\u7684 eureka.instance.[nonSecurePortEnabled,securePortEnabled]=[false,true] \u5c5e\u6027\u6765\u6307\u5b9a\u662f\u5426\u4f7f\u7528HTTPS\u3002\u5f53\u914d\u7f6e\u4f7f\u7528HTTPS\u65f6\uff0cEureka Server\u4f1a\u8fd4\u56de\u4ee5 https \u5f00\u5934\u7684\u670d\u52a1\u5730\u5740\u3002  \u5373\u4f7f\u914d\u7f6e\u4e86\u4f7f\u7528HTTPS\uff0cEureka\u7684\u4e3b\u9875\u4f9d\u7136\u662f\u4ee5\u666e\u901a HTTP \u65b9\u5f0f\u8bbf\u95ee\u7684\u3002\u4f60\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e9b\u914d\u7f6e\u6765\u5c06\u8fd9\u4e9b\u9875\u9762\u4e5f\u901a\u8fc7HTTPS\u4fdd\u62a4\u8d77\u6765\uff1a  eureka:\n  instance:\n    statusPageUrl: https://${eureka.hostname}/info\n    healthCheckUrl: https://${eureka.hostname}/health\n    homePageUrl: https://${eureka.hostname}/   \u6ce8\u610f\uff0c eureka,hostname \u662fEureka\u539f\u751f\u5c5e\u6027\uff0c\u53ea\u6709\u65b0\u7248\u672c\u7684Eureka\u624d\u652f\u6301\u8be5\u5c5e\u6027\u3002\u4f60\u4e5f\u53ef\u4ee5\b\u7528Spring EL\u8868\u8fbe\u5f0f\u4ee3\u66ff\uff1a ${eureka.instance.hostName}  \u5982\u679c\u4f60\u7684\u5e94\u7528\u524d\u7aef\u90e8\u7f72\u4e86\u4ee3\u7406\uff0c\u5e76\u4e14SSL\u7684\u7ec8\u70b9\u662f\u6b64\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u4f60\u5c31\u9700\u8981\u5728\u5e94\u7528\u4e2d\u89e3\u6790 forwarded \u8bf7\u6c42\u5934\u3002\u5982\u679c\u4f60\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e86 X-Forwarded-* \u76f8\u5173\u53c2\u6570\uff0cSpring Boot\u4e2d\u7684\u5d4c\u5165\u5f0fTomcat\u4f1a\u81ea\u52a8\u89e3\u6790\u8be5\u8bf7\u6c42\u5934\u3002\u4e00\u79cd\u8868\u660e\u4f60\u6ca1\u6709\u5904\u7406\u597d forwarded \u8bf7\u6c42\u5934\u7684\u8ff9\u8c61\u5c31\u662f\u4f60\u7684\u5e94\u7528\u6e32\u67d3\u51fa\u7684HTML\u9875\u9762\u4e2d\u94fe\u63a5\u663e\u793a\u7684\u662f\u9519\u8bef\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7\u3002",
            "title": "\u4f7f\u7528HTTPS"
        },
        {
            "location": "/user-guide/eureka/#_2",
            "text": "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cEureka\u901a\u8fc7\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u5fc3\u8df3\u5305\u6765\u5224\u65ad\u5ba2\u6237\u7aef\u662f\u5426\u5728\u7ebf\u3002\u5982\u679c\u4f60\u4e0d\u663e\u5f0f\u6307\u5b9a\uff0c\u5ba2\u6237\u7aef\u5728\u5fc3\u8df3\u5305\u4e2d\u4e0d\u4f1a\u5305\u542b\u5f53\u524d\u5e94\u7528\u7684\u5065\u5eb7\u6570\u636e(\u7531Spring Boot Actuator\u63d0\u4f9b)\u3002\u8fd9\u610f\u5473\u7740\u53ea\u8981\u5ba2\u6237\u7aef\u542f\u52a8\u65f6\u5b8c\u6210\u4e86\u670d\u52a1\u6ce8\u518c\uff0c\u90a3\u4e48\u8be5\u5ba2\u6237\u7aef\u5728\u4e3b\u52a8\u6ce8\u9500\u4e4b\u524d\u5728Eureka\u4e2d\u7684\u72b6\u6001\u4f1a\u6c38\u8fdc\u662f UP \u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4fee\u6539\u8fd9\u4e00\u9ed8\u8ba4\u884c\u4e3a\uff0c\u5373\u5728\u5ba2\u6237\u7aef\u53d1\u9001\u5fc3\u8df3\u5305\u65f6\u4f1a\u5e26\u4e0a\u81ea\u5df1\u7684\u5065\u5eb7\u4fe1\u606f\u3002\u8fd9\u6837\u505a\u7684\u540e\u679c\u662f\u53ea\u6709\u5f53\u8be5\u670d\u52a1\u7684\u72b6\u6001\u662f UP \u65f6\u624d\u80fd\u88ab\u8bbf\u95ee\uff0c\u5176\u5b83\u7684\u4efb\u4f55\u72b6\u6001\u90fd\u4f1a\u5bfc\u81f4\u8be5\u670d\u52a1\u4e0d\u80fd\u88ab\u8c03\u7528\u3002  eureka:\n  client:\n    healthcheck:\n      enabled: true  \u5982\u679c\u4f60\u60f3\u5bf9\u5065\u5eb7\u68c0\u67e5\u6709\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0 com.netflix.appinfo.HealthCheckHandler \u63a5\u53e3\u3002   \u4ee5\u4e0b\u5185\u5bb9\u7ffb\u8bd1\u81eaEureka\u5b98\u65b9\u624b\u518c\uff1a  Eureka\u5ba2\u6237\u7aef\u4f1a\u6bcf\u969430s\u5411\u670d\u52a1\u7aef\u53d1\u9001\u5fc3\u8df3\u5305\u4ee5\u544a\u77e5\u670d\u52a1\u7aef\u5f53\u524d\u5ba2\u6237\u7aef\u6ca1\u6709\u6302\u6389\u3002\u5bf9\u4e8eClient\u6765\u8bf4\uff0c\u670d\u52a1Server\u8d85\u8fc790s\u6ca1\u6709\u6536\u5230\u8be5Client\u7684\u5fc3\u8df3\u6570\u636e\uff0cServer\u5c31\u4f1a\u628a\u8be5Client\u79fb\u51fa\u670d\u52a1\u5217\u8868\u3002\u6700\u597d\u4e0d\u8981\u4fee\u653930s\u7684\u9ed8\u8ba4\u5fc3\u8df3\u95f4\u9694\uff0c\u56e0\u4e3aServer\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u65f6\u95f4\u6570\u503c\u6765\u5224\u65ad\u662f\u5426\u51fa\u73b0\u4e86\u5927\u9762\u79ef\u6545\u969c\u3002(\u8bd1\u8005\uff1a\u610f\u601d\u662f\u6bd4\u5982Eureka\u9ed8\u8ba42\u5206\u949f\u6536\u4e0d\u5230\u5fc3\u8df3\u5c31\u8ba4\u4e3a\u7f51\u7edc\u51fa\u4e86\u6545\u969c\uff0c\u4f60\u5982\u679c\u628a\u8fd9\u4e2a\u5fc3\u8df3\u95f4\u9694\u6539\u6210\u4e863\u5206\u949f\uff0c\u90a3\u5c31\u51fa\u95ee\u9898\u4e86\u3002)",
            "title": "\u5065\u5eb7\u68c0\u67e5"
        },
        {
            "location": "/user-guide/eureka/#eureka_2",
            "text": "\u6211\u4eec\u6709\u5fc5\u8981\u82b1\u4e00\u4e9b\u65f6\u95f4\u6765\u4e86\u89e3\u4e00\u4e0bEureka\u7684\u5143\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u4ee5\u9002\u5e94\u7279\u5b9a\u7684\u4e1a\u52a1\u573a\u666f\u3002\u50cf\u4e3b\u673a\u540d\u3001IP\u5730\u5740\u3001\u7aef\u53e3\u53f7\u3001\u72b6\u6001\u9875url\u548c\u5065\u5eb7\u68c0\u67e5url\u90fd\u662fEureka\u5b9a\u4e49\u7684\u6807\u51c6\u5143\u6570\u636e\u3002\u8fd9\u4e9b\u5143\u6570\u636e\u4f1a\u88ab\u4fdd\u5b58\u5728Eureka Server\u7684\u6ce8\u518c\u4fe1\u606f\u4e2d\uff0c\u5ba2\u6237\u7aef\u4f1a\u8bfb\u53d6\u8fd9\u4e9b\u6570\u636e\u6765\u5411\u9700\u8981\u8c03\u7528\u7684\u670d\u52a1\u76f4\u63a5\u53d1\u8d77\u8fde\u63a5\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5 eureka.instance.metadataMap \u5f00\u5934\u7684\u53c2\u6570\u6765\u6dfb\u52a0\u4f60\u81ea\u5b9a\u4e49\u7684\u5143\u6570\u636e\uff0c\u6240\u6709\u5ba2\u6237\u7aef\u90fd\u4f1a\u8bfb\u53d6\u5230\u8be5\u4fe1\u606f\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4f60\u80fd\u7ed9\u5ba2\u6237\u7aef\u81ea\u5b9a\u4e49\u4e00\u4e9b\u884c\u4e3a\u3002",
            "title": "Eureka\u5143\u6570\u636e\u8bf4\u660e"
        },
        {
            "location": "/user-guide/eureka/#eurekaclient",
            "text": "\u5f53\u6dfb\u52a0\u4e86 @EnableDiscoveryClient \u6216 @EnableEurekaClient \u6ce8\u89e3\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 EurekaClient \u5bf9\u8c61\u6765\u83b7\u53d6\u670d\u52a1\u5217\u8868\uff1a  @Autowired\nprivate EurekaClient discoveryClient;\n\npublic String serviceUrl() {\n    InstanceInfo instance = discoveryClient.getNextServerFromEureka(\"STORES\", false);\n    return instance.getHomePageUrl();\n}   \u4e0d\u8981\u5728 @PostConstruct \u6216 @Scheduled \u65b9\u6cd5\u4e2d\u4f7f\u7528 EurekaClient \u3002\u5728 ApplicationContext \u8fd8\u6ca1\u6709\u5b8c\u5168\u542f\u52a8\u65f6\u4f7f\u7528\u8be5\u5bf9\u8c61\u4f1a\u53d1\u751f\u9519\u8bef\u3002",
            "title": "\u4f7f\u7528EurekaClient\u5bf9\u8c61"
        },
        {
            "location": "/user-guide/eureka/#springdiscoveryclient",
            "text": "\u4f60\u6ca1\u6709\u5fc5\u8981\u76f4\u63a5\u4f7f\u7528Netflix\u539f\u751f\u7684 EurekaClient \u5bf9\u8c61\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u4e00\u4e9b\u5c01\u88c5\u4f7f\u7528\u8d77\u6765\u4f1a\u66f4\u65b9\u4fbf\u3002Spring Cloud\u652f\u6301 Feign \u548c Spring RestTmpelate \uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u7684\u903b\u8f91\u540d\u800c\u4e0d\u662fURL\u5730\u5740\u6765\u67e5\u8be2\u670d\u52a1\u3002\u5982\u679c\u60f3\u7ed9 Ribbon \u624b\u5de5\u6307\u5b9a\u670d\u52a1\u5217\u8868\uff0c\u4f60\u53ef\u4ee5\u5c06 <client>.ribbon.listOfServers \u5c5e\u6027\u8bbe\u4e3a\u9017\u53f7\u5206\u9694\u7684\u7269\u7406\u5730\u5740\u6216\u4e3b\u673a\u540d, \u53c2\u6570\u4e2d\u7684 client \u662f\u670d\u52a1id\uff0c\u5373\u670d\u52a1\u540d\u3002  \u4f60\u53ef\u4ee5\u4f7f\u7528Spring\u63d0\u4f9b\u7684 DiscoveryClient \u5bf9\u8c61\u4ece\u800c\u4ee3\u7801\u4e0d\u4f1a\u4e0eEureka\u7d27\u8026\u5408\uff1a  @Autowired\nprivate DiscoveryClient discoveryClient;\n\npublic String serviceUrl() {\n    List<ServiceInstance> list = discoveryClient.getInstances(\"STORES\");\n    if (list != null && list.size() > 0 ) {\n        return list.get(0).getUri();\n    }\n    return null;\n}",
            "title": "\u4f7f\u7528Spring\u7684DiscoveryClient\u5bf9\u8c61"
        },
        {
            "location": "/user-guide/eureka/#_3",
            "text": "\u670d\u52a1\u7684\u6ce8\u518c\u6d89\u53ca\u5230\u5fc3\u8df3\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3a\u6bcf30\u79d2\u4e00\u6b21\u3002\u53ea\u6709\u5f53Eureka\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u672c\u5730\u7f13\u5b58\u4e2d\u7684\u670d\u52a1\u5143\u6570\u636e\u76f8\u540c\u65f6\u8fd9\u4e2a\u670d\u52a1\u624d\u80fd\u88ab\u5176\u5b83\u5ba2\u6237\u7aef\u53d1\u73b0\uff0c\u8fd9\u9700\u89813\u4e2a\u5fc3\u8df3\u5468\u671f\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 eureka.instance.leaseRenewalIntervalInSeconds \u8c03\u6574\u8fd9\u4e2a\u65f6\u95f4\u95f4\u9694\u6765\u52a0\u5feb\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f60\u6700\u597d\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u56e0\u4e3aEureka\u5185\u90e8\u7684\u67d0\u4e9b\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u8be5\u65f6\u95f4\u95f4\u9694\u3002",
            "title": "\u4e3a\u4ec0\u4e48\u6ce8\u518c\u4e00\u4e2a\u670d\u52a1\u8fd9\u4e48\u6162?"
        },
        {
            "location": "/user-guide/eureka/#eureka_3",
            "text": "\u6dfb\u52a0 spring-cloud-starter-eureka-server \uff0c\u4e3b\u7c7b\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a  @SpringBootApplication\n@EnableEurekaServer\npublic class Application {\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(Application.class).web(true).run(args);\n    }\n\n}  \u670d\u52a1\u542f\u52a8\u540e\uff0cEureka\u6709\u4e00\u4e2a\u5e26UI\u7684\u4e3b\u9875\uff0c\u6ce8\u518c\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7 /eureka/* \u4e0b\u7684URL\u83b7\u53d6\u5230\u3002",
            "title": "\u670d\u52a1\u53d1\u73b0\uff1aEureka\u670d\u52a1\u7aef"
        },
        {
            "location": "/user-guide/eureka/#zone-region",
            "text": "Eureka\u628a\u6240\u6709\u6ce8\u518c\u4fe1\u606f\u90fd\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6240\u6709\u6ce8\u518c\u8fc7\u7684\u5ba2\u6237\u7aef\u90fd\u4f1a\u5411Eureka\u53d1\u9001\u5fc3\u8df3\u5305\u6765\u4fdd\u6301\u8fde\u63a5\u3002\u5ba2\u6237\u7aef\u4f1a\u6709\u4e00\u4efd\u672c\u5730\u6ce8\u518c\u4fe1\u606f\u7684\u7f13\u5b58\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u6bcf\u6b21\u8fdc\u7a0b\u8c03\u7528\u65f6\u90fd\u5411Eureka\u67e5\u8be2\u6ce8\u518c\u4fe1\u606f\u3002  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cEureka\u670d\u52a1\u7aef\u81ea\u8eab\u4e5f\u662f\u4e2a\u5ba2\u6237\u7aef\uff0c\u6240\u4ee5\u9700\u8981\u6307\u5b9a\u4e00\u4e2aEureka Server\u7684URL\u4f5c\u4e3a\"\u4f19\u4f34\"(peer)\u3002\u5982\u679c\u4f60\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u5730\u5740\uff0cEureka Server\u4e5f\u80fd\u6b63\u5e38\u542f\u52a8\u5de5\u4f5c\uff0c\u4f46\u662f\u5728\u65e5\u5fd7\u4e2d\u4f1a\u6709\u5927\u91cf\u5173\u4e8e\u627e\u4e0d\u5230peer\u7684\u9519\u8bef\u4fe1\u606f\u3002",
            "title": "\u9ad8\u53ef\u7528, Zone \u548c Region"
        },
        {
            "location": "/user-guide/eureka/#standalone",
            "text": "\u53ea\u8981Eureka Server\u8fdb\u7a0b\u4e0d\u4f1a\u6302\u6389\uff0c\u8fd9\u79cd\u96c6Server\u548cClient\u4e8e\u4e00\u8eab\u548c\u5fc3\u8df3\u5305\u7684\u6a21\u5f0f\u80fd\u8ba9Standalone(\u5355\u53f0)\u90e8\u7f72\u7684Eureka Server\u975e\u5e38\u5bb9\u6613\u8fdb\u884c\u707e\u96be\u6062\u590d\u3002\u5728 Standalone \u6a21\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u914d\u7f6e\u6765\u5173\u95ed\u67e5\u627e\u201c\u4f19\u4f34\u201d\u7684\u884c\u4e3a\uff1a  server:\n  port: 8761\n\neureka:\n  instance:\n    hostname: localhost\n  client:\n    registerWithEureka: false\n    fetchRegistry: false\n    serviceUrl:\n      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/  \u6ce8\u610f\uff0c serviceUrl \u4e2d\u7684\u5730\u5740\u7684\u4e3b\u673a\u540d\u8981\u4e0e\u672c\u5730\u4e3b\u673a\u540d\u76f8\u540c\u3002",
            "title": "Standalone\u6a21\u5f0f"
        },
        {
            "location": "/user-guide/eureka/#_4",
            "text": "Eureka Server\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u591a\u4e2a\u5b9e\u4f8b\u5e76\u76f8\u4e92\u6307\u5b9a\u4e3a\u201c\u4f19\u4f34\u201d\u7684\u65b9\u5f0f\u6765\u8fbe\u5230\u66f4\u9ad8\u7684\u9ad8\u53ef\u7528\u6027\u3002\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u4f60\u53ea\u9700\u8981\u6307\u5b9a\u201c\u4f19\u4f34\u201d\u7684\u5730\u5740\u5c31\u53ef\u4ee5\u4e86:  ---\nspring:\n  profiles: peer1\neureka:\n  instance:\n    hostname: peer1\n  client:\n    serviceUrl:\n      defaultZone: http://peer2/eureka/\n\n---\nspring:\n  profiles: peer2\neureka:\n  instance:\n    hostname: peer2\n  client:\n    serviceUrl:\n      defaultZone: http://peer1/eureka/  \u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c profile \u914d\u7f6e\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728\u672c\u5730\u8fd0\u884c\u4e24\u4e2aEureka Server\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 /etc/host \u6587\u4ef6\uff0c\u4f7f\u7528\u4e0a\u8ff0\u914d\u7f6e\u5728\u672c\u5730\u6d4b\u8bd5\u4f19\u4f34\u611f\u7279\u6027\u3002  \u4f60\u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u591a\u4e2aEureka Server, \u5e76\u901a\u8fc7\u4f19\u4f34\u914d\u7f6e\u4f7f\u4e4b\u56f4\u6210\u4e00\u5708(\u76f8\u90bb\u4e24\u4e2aServer\u4e92\u4e3a\u4f19\u4f34)\uff0c\u8fd9\u4e9bServer\u4e2d\u7684\u6ce8\u518c\u4fe1\u606f\u90fd\u662f\u540c\u6b65\u7684\u3002If the peers are physically separated (inside a data centre or between multiple data centres) then the system can in principle survive split-brain type failures.",
            "title": "\"\u4f19\u4f34\"\u611f\u77e5"
        },
        {
            "location": "/user-guide/eureka/#ip",
            "text": "\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u66f4\u503e\u5411\u4e8e\u76f4\u63a5\u4f7f\u7528IP\u5730\u5740\u5b9a\u4e49\u670d\u52a1\u800c\u4e0d\u662f\u4f7f\u7528\u4e3b\u673a\u540d\u3002\u628a eureka.instance.preferIpAddress \u53c2\u6570\u8bbe\u4e3a true \u65f6\uff0c\u5ba2\u6237\u7aef\u5728\u6ce8\u518c\u65f6\u5c31\u4f1a\u4f7f\u7528\u81ea\u5df1\u7684ip\u5730\u5740\u800c\u4e0d\u662f\u4e3b\u673a\u540d\u3002",
            "title": "\u4f7f\u7528IP\u5730\u5740"
        },
        {
            "location": "/user-guide/feign/",
            "text": "\u8bd1\u8005\uff1a \u738b\u9e3f\u98de / brucewhf@gmail.com\n\n\n\n\n\u58f0\u660e\u5f0fREST\u5ba2\u6237\u7aef\uff1aFeign\n#\n\n\nFeign\u662f\u4e00\u4e2a\u58f0\u660e\u5f0fWeb Service\u5ba2\u6237\u7aef\u3002\u4f7f\u7528Feign\u80fd\u8ba9\u7f16\u5199Web Service\u5ba2\u6237\u7aef\u66f4\u52a0\u7b80\u5355, \u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u7136\u540e\u5728\u4e0a\u9762\u6dfb\u52a0\u6ce8\u89e3\uff0c\u540c\u65f6\u4e5f\u652f\u6301\nJAX-RS\n\u6807\u51c6\u7684\u6ce8\u89e3\u3002Feign\u4e5f\u652f\u6301\u53ef\u62d4\u63d2\u5f0f\u7684\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u3002Spring Cloud\u5bf9Feign\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f7f\u5176\u652f\u6301\u4e86Spring MVC\u6807\u51c6\u6ce8\u89e3\u548c\nHttpMessageConverters\n\u3002Feign\u53ef\u4ee5\u4e0eEureka\u548cRibbon\u7ec4\u5408\u4f7f\u7528\u4ee5\u652f\u6301\u8d1f\u8f7d\u5747\u8861\u3002\n\n\n\u4e3b\u7c7b\u793a\u4f8b\uff1a\n\n\n@Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableEurekaClient\n@EnableFeignClients\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n}\n\n\n\n\nStoreClient.java\n:\n\n\n@FeignClient(\"stores\")\npublic interface StoreClient {\n    @RequestMapping(method = RequestMethod.GET, value = \"/stores\")\n    List<Store> getStores();\n\n    @RequestMapping(method = RequestMethod.POST, value = \"/stores/{storeId}\", consumes = \"application/json\")\n    Store update(@PathVariable(\"storeId\") Long storeId, Store store);\n}\n\n\n\n\n@FeignClient\n\u6ce8\u89e3\u4e2d\u7684\nstores\n\u5c5e\u6027\u53ef\u4ee5\u662f\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26\u4e32(\n\u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4e0eEureka\u7ec4\u5408\u4f7f\u7528\uff0c\u5219\nstores\n\u5e94\u4e3aEureka\u4e2d\u7684\u670d\u52a1\u540d\n)\uff0cFeign\u7528\u5b83\u6765\u521b\u5efa\u4e00\u4e2aRibbon\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\nurl\n\u5c5e\u6027\u6765\u6307\u5b9a\u4e00\u4e2a\u5730\u5740(\u53ef\u4ee5\u662f\u5b8c\u6574\u7684URL\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e3b\u673a\u540d)\u3002\u6807\u6ce8\u4e86\n@FeignClient\n\u6ce8\u89e3\u7684\u63a5\u53e3\u5728\nApplicationContext\n\u4e2d\u7684Bean\u5b9e\u4f8b\u540d\u662f\u8fd9\u4e2a\u63a5\u53e3\u7684\u5168\u9650\u5b9a\u540d\uff0c\u540c\u65f6\u8fd9\u4e2aBean\u8fd8\u6709\u4e00\u4e2a\u522b\u540d\uff0c\u4e3aBean\u540d + \nFeignClient\n\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\n@Qualifier(\"storesFeignClient\")\n\u6765\u6ce8\u5165\u8be5\u7ec4\u4ef6\u3002\n\n\n\n\n\u5982\u679cclasspath\u4e2d\u6709Ribbon, \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2dRibbon Client\u4f1a\u60f3\u529e\u6cd5\u67e5\u627e\nstores\n\u670d\u52a1\u7684IP\u5730\u5740\u3002\u5982\u679cEureka\u4e5f\u5728classpath\u4e2d\uff0c\u90a3\u4e48Ribbon\u4f1a\u4eceEureka\u7684\u6ce8\u518c\u4fe1\u606f\u4e2d\u67e5\u627e\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u7528Eureka,\u4f60\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f4\u63a5\u6307\u5b9a\u4e00\u7ec4\u670d\u52a1\u5668\u5730\u5740\u3002\n\n\n\n\n\u8986\u76d6Feign\u7684\u9ed8\u8ba4\u914d\u7f6e\n#\n\n\nSpring Cloud\u5bf9Feign\u7684\u5c01\u88c5\u4e2d\u4e00\u4e2a\u6838\u5fc3\u7684\u6982\u5ff5\u5c31\u662f\u5ba2\u6237\u7aef\u8981\u6709\u4e00\u4e2a\u540d\u5b57\u3002\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef\u968f\u65f6\u53ef\u4ee5\u5411\u8fdc\u7a0b\u670d\u52a1\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u4e14\u6bcf\u4e2a\u670d\u52a1\u90fd\u53ef\u4ee5\u50cf\u4f7f\u7528\n@FeignClient\n\u6ce8\u89e3\u4e00\u6837\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u3002Spring Cloud\u4f1a\u5c06\u6240\u6709\u7684\n@FeignClient\n\u7ec4\u5408\u5728\u4e00\u8d77\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\nApplicationContext\n, \u5e76\u4f7f\u7528\nFeignClientsConfiguration\n\u5bf9Clients\u8fdb\u884c\u914d\u7f6e\u3002\u914d\u7f6e\u4e2d\u5305\u62ec\u7f16\u7801\u5668\u3001\u89e3\u7801\u5668\u548c\u4e00\u4e2a\nfeign.Contract\n\u3002\n\n\n\n\nSpring Cloud\u5141\u8bb8\u4f60\u901a\u8fc7\nconfiguration\n\u5c5e\u6027\u5b8c\u5168\u63a7\u5236Feign\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u4e9b\u914d\u7f6e\u6bd4\nFeignClientsConfiguration\n\u4f18\u5148\u7ea7\u8981\u9ad8\uff1a\n\n\n@FeignClient(name = \"stores\", configuration = FooConfiguration.class)\npublic interface StoreClient {\n    //..\n}\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\nFooConfiguration\n\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\u4f1a\u8986\u76d6\u6389\nFeignClientsConfiguration\n\u4e2d\u5bf9\u5e94\u7684\u914d\u7f6e\u3002\n\n\n\n\n\u6ce8\u610f\uff1a\nFooConfiguration\n\u867d\u7136\u662f\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4f46\u662f\u5b83\u4e0d\u5e94\u8be5\u88ab\u4e3b\u4e0a\u4e0b\u6587(ApplicationContext)\u626b\u63cf\u5230\uff0c\u5426\u5219\u8be5\u7c7b\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\u5c31\u4f1a\u88ab\u5e94\u7528\u4e8e\u6240\u6709\u7684\n@FeignClient\n\u5ba2\u6237\u7aef(\u672c\u4f8b\u4e2d\nFooConfiguration\n\u4e2d\u7684\u914d\u7f6e\u5e94\u8be5\u53ea\u5bf9\nStoreClient\n\u8d77\u4f5c\u7528)\u3002\n\n\n\u6ce8\u610f\uff1a\nserviceId\n\u5c5e\u6027\u5df2\u7ecf\u88ab\u5f03\u7528\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\nname\n\u5c5e\u6027\u3002\n\n\n\u5728\u5148\u524d\u7684\u7248\u672c\u4e2d\u5728\u6307\u5b9a\u4e86\nurl\n\u5c5e\u6027\u65f6\nname\n\u662f\u53ef\u9009\u5c5e\u6027\uff0c\u73b0\u5728\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\nname\n\u90fd\u662f\u5fc5\u586b\u5c5e\u6027\u3002\n\n\n\n\nname\n\u548c\nurl\n\u5c5e\u6027\u4e5f\u652f\u6301\u5360\u4f4d\u7b26\uff1a\n\n\n@FeignClient(name = \"${feign.name}\", url = \"${feign.url}\")\npublic interface StoreClient {\n    //..\n}\n\n\n\n\nSpring Cloud Netflix\u4e3aFeign\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u9ed8\u8ba4\u7684\u914d\u7f6eBean\uff1a(\u4e0b\u9762\u6700\u5de6\u4fa7\u662fBean\u7684\u7c7b\u578b\uff0c\u4e2d\u95f4\u662fBean\u7684name, \u53f3\u4fa7\u662f\u7c7b\u540d)\n\n\n\n\nDecoder\n feignDecoder: \nResponseEntityDecoder\n(\u8fd9\u662f\u5bf9\nSpringDecoder\n\u7684\u5c01\u88c5)\n\n\nEncoder\n feignEncoder: \nSpringEncoder\n\n\nLogger\n feignLogger: \nSlf4jLogger\n\n\nContract\n feignContract: \nSpringMvcContract\n\n\nFeign.Builder\n feignBuilder: \nHystrixFeign.Builder\n\n\n\n\n\u4e0b\u5217Bean\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring Cloud Netflix\u5e76\u6ca1\u6709\u63d0\u4f9b\uff0c\u4f46\u662f\u5728\u5e94\u7528\u542f\u52a8\u65f6\u4f9d\u7136\u4f1a\u4ece\u4e0a\u4e0b\u6587\u4e2d\u67e5\u627e\u8fd9\u4e9bBean\u6765\u6784\u9020\u5ba2\u6237\u7aef\u5bf9\u8c61\uff1a\n\n\n\n\nLogger.Level\n\n\nRetryer\n\n\nErrorDecoder\n\n\nRequest.Options\n\n\nCollection<RequestInterceptor>\n\n\n\n\n\u5982\u679c\u60f3\u8981\u8986\u76d6Spring Cloud Netflix\u63d0\u4f9b\u7684\u9ed8\u8ba4\u914d\u7f6eBean, \u9700\u8981\u5728\n@FeignClient\n\u7684\nconfiguration\n\u5c5e\u6027\u4e2d\u6307\u5b9a\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u5e76\u63d0\u4f9b\u60f3\u8981\u8986\u76d6\u7684Bean\u5373\u53ef\uff1a\n\n\n@Configuration\npublic class FooConfiguration {\n    @Bean\n    public Contract feignContract() {\n        return new feign.Contract.Default();\n    }\n\n    @Bean\n    public BasicAuthRequestInterceptor basicAuthRequestInterceptor() {\n        return new BasicAuthRequestInterceptor(\"user\", \"password\");\n    }\n}\n\n\n\n\n\u672c\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528\nfeign.Contract.Default\n\u4ee3\u66ff\u4e86\nSpringMvcContract\n, \u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a\nRequestInterceptor\n\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u505a\u7684\u914d\u7f6e\u4f1a\u5728\u6240\u6709\u7684\n@FeignClient\n\u4e2d\u751f\u6548\u3002\n\n\nFeign\u5bf9Hystrix\u7684\u652f\u6301\n#\n\n\n\u5982\u679cHystrix\u5728classpath\u4e2d\uff0cFeign\u4f1a\u9ed8\u8ba4\u5c06\u6240\u6709\u65b9\u6cd5\u90fd\u5c01\u88c5\u5230\u65ad\u8def\u5668\u4e2d\u3002Returning a\ncom.netflix.hystrix.HystrixCommand\n\u00a0is also available\u3002\u8fd9\u6837\u4e00\u6765\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528Reactive Pattern\u4e86\u3002(\u8c03\u7528\n.toObservalbe()\n\u6216\n.observe()\n\u65b9\u6cd5\uff0c\u6216\u8005\u901a\u8fc7\n.queue()\n\u8fdb\u884c\u5f02\u6b65\u8c03\u7528)\u3002\n\n\n\u5c06\nfeign.hystrix.enabled=false\n\u53c2\u6570\u8bbe\u4e3a\nfalse\n\u53ef\u4ee5\u5173\u95ed\u5bf9Hystrix\u7684\u652f\u6301\u3002\n\n\n\u5982\u679c\u60f3\u53ea\u5173\u95ed\u6307\u5b9a\u5ba2\u6237\u7aef\u7684Hystrix\u652f\u6301\uff0c\u521b\u5efa\u4e00\u4e2a\nFeign.Builder\n\u7ec4\u4ef6\u5e76\u6807\u6ce8\u4e3a\n@Scope(prototype)\n\uff1a\n\n\n@Configuration\npublic class FooConfiguration {\n    @Bean\n    @Scope(\"prototype\")\n    public Feign.Builder feignBuilder() {\n        return Feign.builder();\n    }\n}\n\n\n\n\nFeign\u5bf9Hystrix Fallback\u7684\u652f\u6301\n#\n\n\nHystrix\u652f\u6301\nfallback\n\u7684\u6982\u5ff5\uff0c\u5373\u5f53\u65ad\u8def\u5668\u6253\u5f00\u6216\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u6307\u5b9a\u7684\u5931\u8d25\u903b\u8f91\u3002\u8981\u4e3a\u6307\u5b9a\u7684\n@FeignClient\n\u542f\u7528Fallback\u652f\u6301\uff0c \u9700\u8981\u5728\nfallback\n\u5c5e\u6027\u4e2d\u6307\u5b9a\u5b9e\u73b0\u7c7b\uff1a\n\n\n@FeignClient(name = \"hello\", fallback = HystrixClientFallback.class)\nprotected interface HystrixClient {\n    @RequestMapping(method = RequestMethod.GET, value = \"/hello\")\n    Hello iFailSometimes();\n}\n\nstatic class HystrixClientFallback implements HystrixClient {\n    @Override\n    public Hello iFailSometimes() {\n        return new Hello(\"fallback\");\n    }\n}\n\n\n\n\n\n\n\u6ce8\u610f\uff1aFeign\u5bf9Hystrix Fallback\u7684\u652f\u6301\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u5bf9\u4e8e\u8fd4\u56de\ncom.netflix.hystrix.HystrixCommand\n\u6216\nrx.Observable\n\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0cfallback\u4e0d\u8d77\u4f5c\u7528\u3002\n\n\n\n\nFeign\u5bf9\u7ee7\u627f\u7684\u652f\u6301\n#\n\n\nFeign\u53ef\u4ee5\u901a\u8fc7Java\u7684\u63a5\u53e3\u652f\u6301\u7ee7\u627f\u3002\u4f60\u53ef\u4ee5\u628a\u4e00\u4e9b\u516c\u5171\u7684\u64cd\u4f5c\u653e\u5230\u7236\u63a5\u53e3\u4e2d\uff0c\u7136\u540e\u5b9a\u4e49\u5b50\u63a5\u53e3\u7ee7\u627f\u4e4b\uff1a\n\n\nUserService.java\n\n\npublic interface UserService {\n\n    @RequestMapping(method = RequestMethod.GET, value =\"/users/{id}\")\n    User getUser(@PathVariable(\"id\") long id);\n}\n\n\n\n\nUserResource.java\n\n\n@RestController\npublic class UserResource implements UserService {\n\n}\n\n\n\n\nUserClient.java\n\n\npackage project.user;\n\n@FeignClient(\"users\")\npublic interface UserClient extends UserService {\n\n}\n\n\n\n\n\n\n\u6ce8\u610f: \u5728\u670d\u52a1\u7684\u8c03\u7528\u7aef\u548c\u63d0\u4f9b\u7aef\u5171\u7528\u540c\u4e00\u4e2a\u63a5\u53e3\u5b9a\u4e49\u662f\u4e0d\u660e\u667a\u7684\uff0c\u8fd9\u4f1a\u5c06\u8c03\u7528\u7aef\u548c\u63d0\u4f9b\u7aef\u7684\u4ee3\u7801\u7d27\u7d27\u8026\u5408\u5728\u4e00\u8d77\u3002\u540c\u65f6\u5728SpringMVC\u4e2d\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u8bf7\u6c42\u53c2\u6570\u6620\u5c04\u662f\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u3002\n\n\n\n\nFeign\u5bf9\u538b\u7f29\u7684\u652f\u6301\n#\n\n\n\u4f60\u53ef\u80fd\u4f1a\u60f3\u8981\u5bf9\u8bf7\u6c42/\u54cd\u5e94\u6570\u636e\u8fdb\u884cGzip\u538b\u7f29\uff0c\u6307\u5b9a\u4ee5\u4e0b\u53c2\u6570\u5373\u53ef\uff1a\n\n\nfeign.compression.request.enabled=true\nfeign.compression.response.enabled=true\n\n\n\n\n\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff1a\n\n\nfeign.compression.request.enabled=true\nfeign.compression.request.mime-types=text/xml,application/xml,application/json\nfeign.compression.request.min-request-size=2048\n\n\n\n\n\u4e0a\u9762\u76843\u4e2a\u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u9009\u62e9\u5bf9\u54ea\u79cd\u8bf7\u6c42\u8fdb\u884c\u538b\u7f29\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u6700\u5c0f\u8bf7\u6c42\u5927\u5c0f\u7684\u9600\u503c\u3002\n\n\nFeign\u7684\u65e5\u5fd7\n#\n\n\n\u6bcf\u4e00\u4e2a\n@FeignClient\n\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\nLogger\n, \nLogger\n\u7684\u540d\u5b57\u5c31\u662f\u63a5\u53e3\u7684\u5168\u9650\u5b9a\u540d\u3002Feign\u7684\u65e5\u5fd7\u914d\u7f6e\u53c2\u6570\u4ec5\u652f\u6301\nDEBUG\n\uff1a\n\n\napplication.properties\n\n\nlogging.level.project.user.UserClient: DEBUG\n\n\n\n\nLogger.Level\n\u5bf9\u8c61\u5141\u8bb8\u4f60\u4e3a\u6307\u5b9a\u5ba2\u6237\u7aef\u914d\u7f6e\u60f3\u8bb0\u5f55\u54ea\u4e9b\u4fe1\u606f\uff1a\n\n\n\n\nNONE\n, \u4e0d\u8bb0\u5f55\u4efb\u4f55\u4fe1\u606f\uff0c\u9ed8\u8ba4\u503c\u3002\n\n\nBASIC\n, \u8bb0\u5f55\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42URL\u3001\u72b6\u6001\u7801\u548c\u7528\u65f6\u3002\n\n\nHEADERS\n, \u5728\nBASIC\n\u7684\u57fa\u7840\u4e0a\u518d\u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u4fe1\u606f\u3002\n\n\nFULL\n: \u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u62a5\u6587\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\n\n\n\n\u5c06\nLevel\n\u8bbe\u7f6e\u4e3a\nFULL\n\u7684\u793a\u4f8b\u5982\u4e0b\uff1a\n\n\n@Configuration\npublic class FooConfiguration {\n    @Bean\n    Logger.Level feignLoggerLevel() {\n        return Logger.Level.FULL;\n    }\n}",
            "title": "\u58f0\u660e\u5f0fREST\u5ba2\u6237\u7aefFeign"
        },
        {
            "location": "/user-guide/feign/#restfeign",
            "text": "Feign\u662f\u4e00\u4e2a\u58f0\u660e\u5f0fWeb Service\u5ba2\u6237\u7aef\u3002\u4f7f\u7528Feign\u80fd\u8ba9\u7f16\u5199Web Service\u5ba2\u6237\u7aef\u66f4\u52a0\u7b80\u5355, \u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u7136\u540e\u5728\u4e0a\u9762\u6dfb\u52a0\u6ce8\u89e3\uff0c\u540c\u65f6\u4e5f\u652f\u6301 JAX-RS \u6807\u51c6\u7684\u6ce8\u89e3\u3002Feign\u4e5f\u652f\u6301\u53ef\u62d4\u63d2\u5f0f\u7684\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u3002Spring Cloud\u5bf9Feign\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4f7f\u5176\u652f\u6301\u4e86Spring MVC\u6807\u51c6\u6ce8\u89e3\u548c HttpMessageConverters \u3002Feign\u53ef\u4ee5\u4e0eEureka\u548cRibbon\u7ec4\u5408\u4f7f\u7528\u4ee5\u652f\u6301\u8d1f\u8f7d\u5747\u8861\u3002  \u4e3b\u7c7b\u793a\u4f8b\uff1a  @Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableEurekaClient\n@EnableFeignClients\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n}  StoreClient.java :  @FeignClient(\"stores\")\npublic interface StoreClient {\n    @RequestMapping(method = RequestMethod.GET, value = \"/stores\")\n    List<Store> getStores();\n\n    @RequestMapping(method = RequestMethod.POST, value = \"/stores/{storeId}\", consumes = \"application/json\")\n    Store update(@PathVariable(\"storeId\") Long storeId, Store store);\n}  @FeignClient \u6ce8\u89e3\u4e2d\u7684 stores \u5c5e\u6027\u53ef\u4ee5\u662f\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26\u4e32( \u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u4e0eEureka\u7ec4\u5408\u4f7f\u7528\uff0c\u5219 stores \u5e94\u4e3aEureka\u4e2d\u7684\u670d\u52a1\u540d )\uff0cFeign\u7528\u5b83\u6765\u521b\u5efa\u4e00\u4e2aRibbon\u8d1f\u8f7d\u5747\u8861\u5668\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 url \u5c5e\u6027\u6765\u6307\u5b9a\u4e00\u4e2a\u5730\u5740(\u53ef\u4ee5\u662f\u5b8c\u6574\u7684URL\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u4e3b\u673a\u540d)\u3002\u6807\u6ce8\u4e86 @FeignClient \u6ce8\u89e3\u7684\u63a5\u53e3\u5728 ApplicationContext \u4e2d\u7684Bean\u5b9e\u4f8b\u540d\u662f\u8fd9\u4e2a\u63a5\u53e3\u7684\u5168\u9650\u5b9a\u540d\uff0c\u540c\u65f6\u8fd9\u4e2aBean\u8fd8\u6709\u4e00\u4e2a\u522b\u540d\uff0c\u4e3aBean\u540d +  FeignClient \u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 @Qualifier(\"storesFeignClient\") \u6765\u6ce8\u5165\u8be5\u7ec4\u4ef6\u3002   \u5982\u679cclasspath\u4e2d\u6709Ribbon, \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2dRibbon Client\u4f1a\u60f3\u529e\u6cd5\u67e5\u627e stores \u670d\u52a1\u7684IP\u5730\u5740\u3002\u5982\u679cEureka\u4e5f\u5728classpath\u4e2d\uff0c\u90a3\u4e48Ribbon\u4f1a\u4eceEureka\u7684\u6ce8\u518c\u4fe1\u606f\u4e2d\u67e5\u627e\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u7528Eureka,\u4f60\u4e5f\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f4\u63a5\u6307\u5b9a\u4e00\u7ec4\u670d\u52a1\u5668\u5730\u5740\u3002",
            "title": "\u58f0\u660e\u5f0fREST\u5ba2\u6237\u7aef\uff1aFeign"
        },
        {
            "location": "/user-guide/feign/#feign",
            "text": "Spring Cloud\u5bf9Feign\u7684\u5c01\u88c5\u4e2d\u4e00\u4e2a\u6838\u5fc3\u7684\u6982\u5ff5\u5c31\u662f\u5ba2\u6237\u7aef\u8981\u6709\u4e00\u4e2a\u540d\u5b57\u3002\u6bcf\u4e00\u4e2a\u5ba2\u6237\u7aef\u968f\u65f6\u53ef\u4ee5\u5411\u8fdc\u7a0b\u670d\u52a1\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u4e14\u6bcf\u4e2a\u670d\u52a1\u90fd\u53ef\u4ee5\u50cf\u4f7f\u7528 @FeignClient \u6ce8\u89e3\u4e00\u6837\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u3002Spring Cloud\u4f1a\u5c06\u6240\u6709\u7684 @FeignClient \u7ec4\u5408\u5728\u4e00\u8d77\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 ApplicationContext , \u5e76\u4f7f\u7528 FeignClientsConfiguration \u5bf9Clients\u8fdb\u884c\u914d\u7f6e\u3002\u914d\u7f6e\u4e2d\u5305\u62ec\u7f16\u7801\u5668\u3001\u89e3\u7801\u5668\u548c\u4e00\u4e2a feign.Contract \u3002   Spring Cloud\u5141\u8bb8\u4f60\u901a\u8fc7 configuration \u5c5e\u6027\u5b8c\u5168\u63a7\u5236Feign\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u4e9b\u914d\u7f6e\u6bd4 FeignClientsConfiguration \u4f18\u5148\u7ea7\u8981\u9ad8\uff1a  @FeignClient(name = \"stores\", configuration = FooConfiguration.class)\npublic interface StoreClient {\n    //..\n}  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c FooConfiguration \u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\u4f1a\u8986\u76d6\u6389 FeignClientsConfiguration \u4e2d\u5bf9\u5e94\u7684\u914d\u7f6e\u3002   \u6ce8\u610f\uff1a FooConfiguration \u867d\u7136\u662f\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4f46\u662f\u5b83\u4e0d\u5e94\u8be5\u88ab\u4e3b\u4e0a\u4e0b\u6587(ApplicationContext)\u626b\u63cf\u5230\uff0c\u5426\u5219\u8be5\u7c7b\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\u5c31\u4f1a\u88ab\u5e94\u7528\u4e8e\u6240\u6709\u7684 @FeignClient \u5ba2\u6237\u7aef(\u672c\u4f8b\u4e2d FooConfiguration \u4e2d\u7684\u914d\u7f6e\u5e94\u8be5\u53ea\u5bf9 StoreClient \u8d77\u4f5c\u7528)\u3002  \u6ce8\u610f\uff1a serviceId \u5c5e\u6027\u5df2\u7ecf\u88ab\u5f03\u7528\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f name \u5c5e\u6027\u3002  \u5728\u5148\u524d\u7684\u7248\u672c\u4e2d\u5728\u6307\u5b9a\u4e86 url \u5c5e\u6027\u65f6 name \u662f\u53ef\u9009\u5c5e\u6027\uff0c\u73b0\u5728\u65e0\u8bba\u4ec0\u4e48\u65f6\u5019 name \u90fd\u662f\u5fc5\u586b\u5c5e\u6027\u3002   name \u548c url \u5c5e\u6027\u4e5f\u652f\u6301\u5360\u4f4d\u7b26\uff1a  @FeignClient(name = \"${feign.name}\", url = \"${feign.url}\")\npublic interface StoreClient {\n    //..\n}  Spring Cloud Netflix\u4e3aFeign\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u9ed8\u8ba4\u7684\u914d\u7f6eBean\uff1a(\u4e0b\u9762\u6700\u5de6\u4fa7\u662fBean\u7684\u7c7b\u578b\uff0c\u4e2d\u95f4\u662fBean\u7684name, \u53f3\u4fa7\u662f\u7c7b\u540d)   Decoder  feignDecoder:  ResponseEntityDecoder (\u8fd9\u662f\u5bf9 SpringDecoder \u7684\u5c01\u88c5)  Encoder  feignEncoder:  SpringEncoder  Logger  feignLogger:  Slf4jLogger  Contract  feignContract:  SpringMvcContract  Feign.Builder  feignBuilder:  HystrixFeign.Builder   \u4e0b\u5217Bean\u9ed8\u8ba4\u60c5\u51b5\u4e0bSpring Cloud Netflix\u5e76\u6ca1\u6709\u63d0\u4f9b\uff0c\u4f46\u662f\u5728\u5e94\u7528\u542f\u52a8\u65f6\u4f9d\u7136\u4f1a\u4ece\u4e0a\u4e0b\u6587\u4e2d\u67e5\u627e\u8fd9\u4e9bBean\u6765\u6784\u9020\u5ba2\u6237\u7aef\u5bf9\u8c61\uff1a   Logger.Level  Retryer  ErrorDecoder  Request.Options  Collection<RequestInterceptor>   \u5982\u679c\u60f3\u8981\u8986\u76d6Spring Cloud Netflix\u63d0\u4f9b\u7684\u9ed8\u8ba4\u914d\u7f6eBean, \u9700\u8981\u5728 @FeignClient \u7684 configuration \u5c5e\u6027\u4e2d\u6307\u5b9a\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u5e76\u63d0\u4f9b\u60f3\u8981\u8986\u76d6\u7684Bean\u5373\u53ef\uff1a  @Configuration\npublic class FooConfiguration {\n    @Bean\n    public Contract feignContract() {\n        return new feign.Contract.Default();\n    }\n\n    @Bean\n    public BasicAuthRequestInterceptor basicAuthRequestInterceptor() {\n        return new BasicAuthRequestInterceptor(\"user\", \"password\");\n    }\n}  \u672c\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7528 feign.Contract.Default \u4ee3\u66ff\u4e86 SpringMvcContract , \u5e76\u6dfb\u52a0\u4e86\u4e00\u4e2a RequestInterceptor \u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u505a\u7684\u914d\u7f6e\u4f1a\u5728\u6240\u6709\u7684 @FeignClient \u4e2d\u751f\u6548\u3002",
            "title": "\u8986\u76d6Feign\u7684\u9ed8\u8ba4\u914d\u7f6e"
        },
        {
            "location": "/user-guide/feign/#feignhystrix",
            "text": "\u5982\u679cHystrix\u5728classpath\u4e2d\uff0cFeign\u4f1a\u9ed8\u8ba4\u5c06\u6240\u6709\u65b9\u6cd5\u90fd\u5c01\u88c5\u5230\u65ad\u8def\u5668\u4e2d\u3002Returning a com.netflix.hystrix.HystrixCommand \u00a0is also available\u3002\u8fd9\u6837\u4e00\u6765\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528Reactive Pattern\u4e86\u3002(\u8c03\u7528 .toObservalbe() \u6216 .observe() \u65b9\u6cd5\uff0c\u6216\u8005\u901a\u8fc7 .queue() \u8fdb\u884c\u5f02\u6b65\u8c03\u7528)\u3002  \u5c06 feign.hystrix.enabled=false \u53c2\u6570\u8bbe\u4e3a false \u53ef\u4ee5\u5173\u95ed\u5bf9Hystrix\u7684\u652f\u6301\u3002  \u5982\u679c\u60f3\u53ea\u5173\u95ed\u6307\u5b9a\u5ba2\u6237\u7aef\u7684Hystrix\u652f\u6301\uff0c\u521b\u5efa\u4e00\u4e2a Feign.Builder \u7ec4\u4ef6\u5e76\u6807\u6ce8\u4e3a @Scope(prototype) \uff1a  @Configuration\npublic class FooConfiguration {\n    @Bean\n    @Scope(\"prototype\")\n    public Feign.Builder feignBuilder() {\n        return Feign.builder();\n    }\n}",
            "title": "Feign\u5bf9Hystrix\u7684\u652f\u6301"
        },
        {
            "location": "/user-guide/feign/#feignhystrix-fallback",
            "text": "Hystrix\u652f\u6301 fallback \u7684\u6982\u5ff5\uff0c\u5373\u5f53\u65ad\u8def\u5668\u6253\u5f00\u6216\u53d1\u751f\u9519\u8bef\u65f6\u6267\u884c\u6307\u5b9a\u7684\u5931\u8d25\u903b\u8f91\u3002\u8981\u4e3a\u6307\u5b9a\u7684 @FeignClient \u542f\u7528Fallback\u652f\u6301\uff0c \u9700\u8981\u5728 fallback \u5c5e\u6027\u4e2d\u6307\u5b9a\u5b9e\u73b0\u7c7b\uff1a  @FeignClient(name = \"hello\", fallback = HystrixClientFallback.class)\nprotected interface HystrixClient {\n    @RequestMapping(method = RequestMethod.GET, value = \"/hello\")\n    Hello iFailSometimes();\n}\n\nstatic class HystrixClientFallback implements HystrixClient {\n    @Override\n    public Hello iFailSometimes() {\n        return new Hello(\"fallback\");\n    }\n}   \u6ce8\u610f\uff1aFeign\u5bf9Hystrix Fallback\u7684\u652f\u6301\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u5bf9\u4e8e\u8fd4\u56de com.netflix.hystrix.HystrixCommand \u6216 rx.Observable \u5bf9\u8c61\u7684\u65b9\u6cd5\uff0cfallback\u4e0d\u8d77\u4f5c\u7528\u3002",
            "title": "Feign\u5bf9Hystrix Fallback\u7684\u652f\u6301"
        },
        {
            "location": "/user-guide/feign/#feign_1",
            "text": "Feign\u53ef\u4ee5\u901a\u8fc7Java\u7684\u63a5\u53e3\u652f\u6301\u7ee7\u627f\u3002\u4f60\u53ef\u4ee5\u628a\u4e00\u4e9b\u516c\u5171\u7684\u64cd\u4f5c\u653e\u5230\u7236\u63a5\u53e3\u4e2d\uff0c\u7136\u540e\u5b9a\u4e49\u5b50\u63a5\u53e3\u7ee7\u627f\u4e4b\uff1a  UserService.java  public interface UserService {\n\n    @RequestMapping(method = RequestMethod.GET, value =\"/users/{id}\")\n    User getUser(@PathVariable(\"id\") long id);\n}  UserResource.java  @RestController\npublic class UserResource implements UserService {\n\n}  UserClient.java  package project.user;\n\n@FeignClient(\"users\")\npublic interface UserClient extends UserService {\n\n}   \u6ce8\u610f: \u5728\u670d\u52a1\u7684\u8c03\u7528\u7aef\u548c\u63d0\u4f9b\u7aef\u5171\u7528\u540c\u4e00\u4e2a\u63a5\u53e3\u5b9a\u4e49\u662f\u4e0d\u660e\u667a\u7684\uff0c\u8fd9\u4f1a\u5c06\u8c03\u7528\u7aef\u548c\u63d0\u4f9b\u7aef\u7684\u4ee3\u7801\u7d27\u7d27\u8026\u5408\u5728\u4e00\u8d77\u3002\u540c\u65f6\u5728SpringMVC\u4e2d\u4f1a\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u8bf7\u6c42\u53c2\u6570\u6620\u5c04\u662f\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u3002",
            "title": "Feign\u5bf9\u7ee7\u627f\u7684\u652f\u6301"
        },
        {
            "location": "/user-guide/feign/#feign_2",
            "text": "\u4f60\u53ef\u80fd\u4f1a\u60f3\u8981\u5bf9\u8bf7\u6c42/\u54cd\u5e94\u6570\u636e\u8fdb\u884cGzip\u538b\u7f29\uff0c\u6307\u5b9a\u4ee5\u4e0b\u53c2\u6570\u5373\u53ef\uff1a  feign.compression.request.enabled=true\nfeign.compression.response.enabled=true  \u4e5f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff1a  feign.compression.request.enabled=true\nfeign.compression.request.mime-types=text/xml,application/xml,application/json\nfeign.compression.request.min-request-size=2048  \u4e0a\u9762\u76843\u4e2a\u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u9009\u62e9\u5bf9\u54ea\u79cd\u8bf7\u6c42\u8fdb\u884c\u538b\u7f29\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u6700\u5c0f\u8bf7\u6c42\u5927\u5c0f\u7684\u9600\u503c\u3002",
            "title": "Feign\u5bf9\u538b\u7f29\u7684\u652f\u6301"
        },
        {
            "location": "/user-guide/feign/#feign_3",
            "text": "\u6bcf\u4e00\u4e2a @FeignClient \u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a Logger ,  Logger \u7684\u540d\u5b57\u5c31\u662f\u63a5\u53e3\u7684\u5168\u9650\u5b9a\u540d\u3002Feign\u7684\u65e5\u5fd7\u914d\u7f6e\u53c2\u6570\u4ec5\u652f\u6301 DEBUG \uff1a  application.properties  logging.level.project.user.UserClient: DEBUG  Logger.Level \u5bf9\u8c61\u5141\u8bb8\u4f60\u4e3a\u6307\u5b9a\u5ba2\u6237\u7aef\u914d\u7f6e\u60f3\u8bb0\u5f55\u54ea\u4e9b\u4fe1\u606f\uff1a   NONE , \u4e0d\u8bb0\u5f55\u4efb\u4f55\u4fe1\u606f\uff0c\u9ed8\u8ba4\u503c\u3002  BASIC , \u8bb0\u5f55\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42URL\u3001\u72b6\u6001\u7801\u548c\u7528\u65f6\u3002  HEADERS , \u5728 BASIC \u7684\u57fa\u7840\u4e0a\u518d\u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u4fe1\u606f\u3002  FULL : \u8bb0\u5f55\u8bf7\u6c42\u548c\u54cd\u5e94\u62a5\u6587\u7684\u5168\u90e8\u5185\u5bb9\u3002   \u5c06 Level \u8bbe\u7f6e\u4e3a FULL \u7684\u793a\u4f8b\u5982\u4e0b\uff1a  @Configuration\npublic class FooConfiguration {\n    @Bean\n    Logger.Level feignLoggerLevel() {\n        return Logger.Level.FULL;\n    }\n}",
            "title": "Feign\u7684\u65e5\u5fd7"
        },
        {
            "location": "/user-guide/bus/",
            "text": "Spring Cloud Bus\n#\n\n\nSpring Cloud Bus \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d88\u606f\u4ee3\u7406\u8fde\u63a5\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8282\u70b9\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5e7f\u64ad\u72b6\u6001\u66f4\u6539\uff08\u5982\u914d\u7f6e\u66f4\u6539\uff09\u6216\u5176\u4ed6\u7ba1\u7406\u6307\u4ee4\u3002\u5f53\u524d\u552f\u4e00\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7\u4e00\u4e2aAMQP\u4ee3\u7406\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\uff0c\u4f46\u76f8\u540c\u7684\u57fa\u672c\u7279\u5f81\uff08\u4f20\u8f93\u4e0a\u7684\u4e00\u4e9b\u4f9d\u8d56\uff09\u662f\u5176\u4ed6\u4f20\u8f93\u7684\u8def\u7ebf\u56fe\n\n\nQuick Start\n#\n\n\n\u5982\u679cSpring Cloud Bus\u5728\u7c7b\u8def\u5f84\u91cc\u5b83\u5c06\u901a\u8fc7Spring Boot autconfiguration\u542f\u52a8\u3002\u6240\u6709\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u4f7f\nspring-cloud-starter-bus-amqp\n\u6216\nspring-cloud-starter-bus-kafka\n\u6dfb\u52a0\u5230\u4f60\u7684\u4f9d\u8d56\u7ba1\u7406\u4e2d\uff0cSpring Cloud\u5c06\u5b8c\u6210\u5269\u4e0b\u7684\u4e8b\u3002\u786e\u5b9abroker (RabbitMQ or Kafka) \u53ef\u7528\uff1a\u5982\u679c\u5728\u672c\u5730\u8fd0\u884c\u4f60\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\uff0c\u4f46\u5982\u679c\u5728\u8fdc\u7a0b\u8fd0\u884c\u9700\u8981\u914d\u7f6ebroker\u4fe1\u606f\uff0c\u5982Rabbit\n\n\napplication.yml\n\n\nspring:\n  rabbitmq:\n    host: mybroker.com\n    port: 5672\n    username: user\n    password: secret\n\n\n\nbus\u76ee\u524d\u652f\u6301\u5411\u6240\u6709\u7684\u76d1\u542c\u8282\u70b9\u53d1\u9001\u6d88\u606f\uff0c\u6216\u5411\u6240\u6709\u7279\u5b9a\u670d\u52a1\u8282\u70b9\uff08\u6ce8\u518c\u5230Eureka\u4e2d\u7684\uff09\u53d1\u9001\u6d88\u606f\u3002\u66f4\u591a\u7684\u9009\u62e9\u6807\u51c6\u53ef\u80fd\u5728\u672a\u6765\u589e\u52a0 (ie. only service X nodes in data center Y, etc\u2026\u200b)\u3002\u5728\n/bus/*\n\u547d\u540d\u7a7a\u95f4\u4e0b\u6709\u4e00\u4e9bhttp\u7684endpoints\uff0c\u76ee\u524d\u6709\u4e24\u4e2a\u5b9e\u73b0\uff0c\u7b2c\u4e00\u4e2a\n/bus/env\n\uff0c\u53d1\u9001\u952e/\u503c\u5bf9\u6765\u66f4\u65b0\u6bcf\u4e2a\u8282\u70b9Spring Environment\uff0c\u7b2c\u4e8c\u4e2a\n/bus/refresh\n\uff0c\u91cd\u8f7d\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u914d\u7f6e\uff0c\u5c31\u597d\u50cf\u4ed6\u4eec\u90fd\u88ab\u53d1\u73b0\u901a\u8fc7 \n/refresh\n endpoint\u3002\n\n\nNOTE \n\n\n\n\nBus\u7684starters\u542b\u76d6Rabbit\u548cKafka\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6bd4\u8f83\u5e38\u89c1\uff0c\u53e6\u4e00\u65b9\u9762Spring Cloud Stream\u5341\u5206\u7075\u6d3b\uff0cbinder\u5c06\u7ed3\u5408spring-cloud-bus\u8fdb\u884c\u5de5\u4f5c\u3002\n\n\n\n\nAddressing an Instance\n#\n\n\nHTTP endpoints \u63a5\u53d7\n\"destination\"\n\u53c2\u6570,\u5982\uff1a\n\"/bus/refresh?destination=customers:9000\"\n\uff0c\n\"destination\"\n\u53c2\u6570\u662f\nApplicationContext\n\u7684ID\uff0c\u5982\u679c\u4e00\u4e2aBus\u5b9e\u4f8b\u62e5\u6709\u4e00\u4e2aID\uff0c\u7136\u540e\u5b83\u5c06\u5904\u7406\u6d88\u606f\uff0c\u5e76\u4e14\u6240\u6709\u5176\u4ed6\u5b9e\u4f8b\u5c06\u5ffd\u7565\u5b83\u3002Spring Boot\u5728\nContextIdApplicationContextInitializer\n\u8bbe\u7f6e\u8fd9\u4e2aID\uff0cID\u7684\u7ec4\u6210\u9ed8\u8ba4\u662f\u7531\nspring.application.name\n\uff0c active profiles \uff0c \nserver.port\n\n\nAddressing all instances of a service\n#\n\n\ndestination\u53c2\u6570\u91c7\u7528Spring PathMatcher\uff08\u5206\u9694\u7b26\n\uff1a\n\uff09\u786e\u8ba4\u67d0\u4e2a\u5b9e\u4f8b\u662f\u5426\u5c06\u5904\u7406\u6d88\u606f,\u4f7f\u7528\u4e0a\u9762\u7684\u4f8b\u5b50\"/bus/refresh?destination=customers:**\" \u5c06\u5bf9\u8c61\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u201ccustomers\u201d\u670d\u52a1\u7684\u914d\u7f6e\u548c\u7aef\u53e3\u8bbe\u7f6e\u4e3aApplicationContext\u7684ID\n\n\nApplication Context ID must be unique\n#\n\n\nbus \u8bd5\u56fe\u6d88\u9664\u5904\u7406\u4e00\u4e2a\u4e8b\u4ef6\u4e24\u6b21\uff0c\u4e00\u6b21\u4ece\u539f\u6765\u7684applicationevent\u6d88\u9664\uff0c\u4e00\u6b21\u4ece\u961f\u5217\u6d88\u9664\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u68c0\u67e5\u53d1\u9001\u5e94\u4e2d\u7684\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u548c\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\uff0c\u5982\u679c\u591a\u4e2a\u670d\u52a1\u5b9e\u4f8b\u5177\u6709\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\uff0c\u4e8b\u4ef6\u5c06\u4e0d\u88ab\u5904\u7406\u3002\u5728\u672c\u5730\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u6bcf\u4e2a\u670d\u52a1\u5c06\u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u8fd9\u5c06\u662f\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u7684\u4e00\u90e8\u5206\u3002\u4e91\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7d22\u5f15\u6765\u533a\u5206\u3002Cloud Foundry\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7d22\u5f15\u6765\u533a\u5206\u3002\u786e\u4fdd\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u662f\u552f\u4e00\u7684\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u8bbe\u7f6e\nspring.application.index\n\u552f\u4e00\u3002\u4f8b\u5982\uff0c\u5728\u6846\u67b6\u914d\u7f6eapplication.properties\uff08\u6216bootstrap.properties\u5982\u679c\u4f7f\u7528configserver\uff09\u4e2d\u8bbe\u7f6e\nspring.application.index=${INSTANCE_INDEX}\n\n\nCustomizing the Message Broker\n#\n\n\nSpring Cloud Bus \u901a\u8fc7 Spring Cloud Stream \u5e7f\u64ad\u6d88\u606f\u4ece\u800c\u83b7\u5f97\u4fe1\u606f\u7684\u6d41\u52a8\uff0c\u4f60\u53ea\u9700\u8981\u5728\u7c7b\u8def\u5f84\u4e2d\u9009\u62e9\u4f60\u7ed1\u5b9a\u7684\u5b9e\u73b0\u3002bus\u6709\u65b9\u4fbf\u7684starters\uff0cAMQP (RabbitMQ) \u548c Kafka (spring-cloud-starter-bus-[amqp,kafka])\u3002\u4e00\u822c\u6765\u8bf4\uff0cSpring Cloud Stream\u4f9d\u9760Spring Boot autoconfiguration\u89c4\u5219\u914d\u7f6e\u4e2d\u95f4\u4ef6\uff0c\u6240\u4ee5\u4f8b\u5982AMQP\u4ee3\u7406\u5730\u5740\u662f\u53ef\u4ee5\u901a\u8fc7\nspring.rabbitmq.*\n\u5c5e\u6027\u914d\u7f6e\u6539\u53d8\u7684\u3002Spring Cloud Bus\u6709\u5c11\u6570\u672c\u5730\u914d\u7f6e\nspring.cloud.bus.*\n (\u4f8b\u5982 \nspring.cloud.bus.destination\n\u662f\u4f7f\u7528\u7684\u4f53\u4e2d\u95f4\u4ef6\u7684\u4e3b\u9898\u7684\u540d\u79f0)\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u503c\u5c31\u8db3\u591f\u4e86\u3002\n\n\nTracing Bus Events\n#\n\n\nBus events\uff08RemoteApplicationEvent\u7684\u5b50\u7c7b\uff09\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\nspring.cloud.bus.trace.enabled=true\n\u8ffd\u8e2a\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u505a\u7684\u8bdd\uff0cSpring Boot TraceRepository\uff08\u5982\u679c\u5b58\u5728\uff09\u5c06\u663e\u793a\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u9001\u548c\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u6240\u6709\u7684acks\u3002\u4f8b\u5982(/trace endpoint):\n\n\n{\n  \"timestamp\": \"2015-11-26T10:24:44.411+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.ack\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"stores:8081\",\n    \"destination\": \"*:**\"\n  }\n  },\n  {\n  \"timestamp\": \"2015-11-26T10:24:41.864+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.sent\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"customers:9000\",\n    \"destination\": \"*:**\"\n  }\n  },\n  {\n  \"timestamp\": \"2015-11-26T10:24:41.862+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.ack\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"customers:9000\",\n    \"destination\": \"*:**\"\n  }\n}\n\n\n\n\u8fd9\u4e2atrace\u663e\u793a\u4e86\u6765\u81ea\ncustomers:9000\n\u7684\nRefreshRemoteApplicationEvent\n\uff0c\u5e7f\u64ad\u5230\u6240\u6709\u7684\u670d\u52a1\uff0c\u901a\u8fc7\ncustomers:9000\n\u548c\nstores:8081\n\u6536\u5230\uff08acked\uff09\n\n\n\u5904\u7406\u81ea\u5df1\u7684ACK\u4fe1\u53f7\u4f60\u53ef\u4ee5\u4e3aAckRemoteApplicationEvent\u6dfb\u52a0@EventListener\uff0c\u5728\u6dfb\u52a0SentApplicationEvent\u7c7b\u578b\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u8fdb\u5165TraceRepository\uff0c\u4ece\u90a3\u91cc\u5f00\u91c7\u6570\u636e\u3002\n\n\nNOTE\n\n\n\n\n\u6240\u6709Bus\u5e94\u7528\u90fd\u53ef\u4ee5\u8ffd\u8e2aacks\uff0c\u5728\u505a\u590d\u6742\u67e5\u8be2\u7684\u6570\u636e\u4e2d\u592e\u670d\u52a1\u4e2d\u8fd9\u4e48\u505a\u662f\u6709\u7528\u7684\uff0c\u6216\u5c06\u5176\u8f6c\u53d1\u5230\u4e00\u4e2a\u4e13\u95e8\u7684\u8ddf\u8e2a\u670d\u52a1\u3002\n\n\n\n\nBroadcasting Your Own Events\n#\n\n\nBus\u53ef\u4ee5\u652f\u6301\u4efb\u4f55RemoteApplicationEvent\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f46\u9ed8\u8ba4\u4f20\u8f93JSON\u548c\u53cd\u5e8f\u5217\u5316\u5668\u9700\u8981\u63d0\u524d\u77e5\u9053\u54ea\u4e9b\u7c7b\u578b\u5c06\u88ab\u4f7f\u7528\u3002\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7c7b\u578b\u9700\u8981\u5728org.springframework.cloud.bus.event\u7684\u5b50\u76ee\u5f55\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528@JsonTypeName\u6ce8\u89e3\u5728\u4f60\u7684\u5b9a\u5236\u7c7b\u4e0a\u6216\u4f9d\u8d56\u4e8e\u9ed8\u8ba4\u7684\u7b56\u7565\uff0c\u4f7f\u7528\u7c7b\u7684\u7b80\u5355\u7684\u540d\u5b57\u3002\u8bf7\u6ce8\u610f\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u90fd\u9700\u8981\u8bbf\u95ee\u7c7b\u5b9a\u4e49\u3002",
            "title": "Spring Cloud Bus"
        },
        {
            "location": "/user-guide/bus/#spring-cloud-bus",
            "text": "Spring Cloud Bus \u901a\u8fc7\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6d88\u606f\u4ee3\u7406\u8fde\u63a5\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8282\u70b9\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5e7f\u64ad\u72b6\u6001\u66f4\u6539\uff08\u5982\u914d\u7f6e\u66f4\u6539\uff09\u6216\u5176\u4ed6\u7ba1\u7406\u6307\u4ee4\u3002\u5f53\u524d\u552f\u4e00\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u901a\u8fc7\u4e00\u4e2aAMQP\u4ee3\u7406\u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\uff0c\u4f46\u76f8\u540c\u7684\u57fa\u672c\u7279\u5f81\uff08\u4f20\u8f93\u4e0a\u7684\u4e00\u4e9b\u4f9d\u8d56\uff09\u662f\u5176\u4ed6\u4f20\u8f93\u7684\u8def\u7ebf\u56fe",
            "title": "Spring Cloud Bus"
        },
        {
            "location": "/user-guide/bus/#quick-start",
            "text": "\u5982\u679cSpring Cloud Bus\u5728\u7c7b\u8def\u5f84\u91cc\u5b83\u5c06\u901a\u8fc7Spring Boot autconfiguration\u542f\u52a8\u3002\u6240\u6709\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u4f7f spring-cloud-starter-bus-amqp \u6216 spring-cloud-starter-bus-kafka \u6dfb\u52a0\u5230\u4f60\u7684\u4f9d\u8d56\u7ba1\u7406\u4e2d\uff0cSpring Cloud\u5c06\u5b8c\u6210\u5269\u4e0b\u7684\u4e8b\u3002\u786e\u5b9abroker (RabbitMQ or Kafka) \u53ef\u7528\uff1a\u5982\u679c\u5728\u672c\u5730\u8fd0\u884c\u4f60\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4e8b\uff0c\u4f46\u5982\u679c\u5728\u8fdc\u7a0b\u8fd0\u884c\u9700\u8981\u914d\u7f6ebroker\u4fe1\u606f\uff0c\u5982Rabbit  application.yml  spring:\n  rabbitmq:\n    host: mybroker.com\n    port: 5672\n    username: user\n    password: secret  bus\u76ee\u524d\u652f\u6301\u5411\u6240\u6709\u7684\u76d1\u542c\u8282\u70b9\u53d1\u9001\u6d88\u606f\uff0c\u6216\u5411\u6240\u6709\u7279\u5b9a\u670d\u52a1\u8282\u70b9\uff08\u6ce8\u518c\u5230Eureka\u4e2d\u7684\uff09\u53d1\u9001\u6d88\u606f\u3002\u66f4\u591a\u7684\u9009\u62e9\u6807\u51c6\u53ef\u80fd\u5728\u672a\u6765\u589e\u52a0 (ie. only service X nodes in data center Y, etc\u2026\u200b)\u3002\u5728 /bus/* \u547d\u540d\u7a7a\u95f4\u4e0b\u6709\u4e00\u4e9bhttp\u7684endpoints\uff0c\u76ee\u524d\u6709\u4e24\u4e2a\u5b9e\u73b0\uff0c\u7b2c\u4e00\u4e2a /bus/env \uff0c\u53d1\u9001\u952e/\u503c\u5bf9\u6765\u66f4\u65b0\u6bcf\u4e2a\u8282\u70b9Spring Environment\uff0c\u7b2c\u4e8c\u4e2a /bus/refresh \uff0c\u91cd\u8f7d\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u914d\u7f6e\uff0c\u5c31\u597d\u50cf\u4ed6\u4eec\u90fd\u88ab\u53d1\u73b0\u901a\u8fc7  /refresh  endpoint\u3002  NOTE    Bus\u7684starters\u542b\u76d6Rabbit\u548cKafka\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6bd4\u8f83\u5e38\u89c1\uff0c\u53e6\u4e00\u65b9\u9762Spring Cloud Stream\u5341\u5206\u7075\u6d3b\uff0cbinder\u5c06\u7ed3\u5408spring-cloud-bus\u8fdb\u884c\u5de5\u4f5c\u3002",
            "title": "Quick Start"
        },
        {
            "location": "/user-guide/bus/#addressing-an-instance",
            "text": "HTTP endpoints \u63a5\u53d7 \"destination\" \u53c2\u6570,\u5982\uff1a \"/bus/refresh?destination=customers:9000\" \uff0c \"destination\" \u53c2\u6570\u662f ApplicationContext \u7684ID\uff0c\u5982\u679c\u4e00\u4e2aBus\u5b9e\u4f8b\u62e5\u6709\u4e00\u4e2aID\uff0c\u7136\u540e\u5b83\u5c06\u5904\u7406\u6d88\u606f\uff0c\u5e76\u4e14\u6240\u6709\u5176\u4ed6\u5b9e\u4f8b\u5c06\u5ffd\u7565\u5b83\u3002Spring Boot\u5728 ContextIdApplicationContextInitializer \u8bbe\u7f6e\u8fd9\u4e2aID\uff0cID\u7684\u7ec4\u6210\u9ed8\u8ba4\u662f\u7531 spring.application.name \uff0c active profiles \uff0c  server.port",
            "title": "Addressing an Instance"
        },
        {
            "location": "/user-guide/bus/#addressing-all-instances-of-a-service",
            "text": "destination\u53c2\u6570\u91c7\u7528Spring PathMatcher\uff08\u5206\u9694\u7b26 \uff1a \uff09\u786e\u8ba4\u67d0\u4e2a\u5b9e\u4f8b\u662f\u5426\u5c06\u5904\u7406\u6d88\u606f,\u4f7f\u7528\u4e0a\u9762\u7684\u4f8b\u5b50\"/bus/refresh?destination=customers:**\" \u5c06\u5bf9\u8c61\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u201ccustomers\u201d\u670d\u52a1\u7684\u914d\u7f6e\u548c\u7aef\u53e3\u8bbe\u7f6e\u4e3aApplicationContext\u7684ID",
            "title": "Addressing all instances of a service"
        },
        {
            "location": "/user-guide/bus/#application-context-id-must-be-unique",
            "text": "bus \u8bd5\u56fe\u6d88\u9664\u5904\u7406\u4e00\u4e2a\u4e8b\u4ef6\u4e24\u6b21\uff0c\u4e00\u6b21\u4ece\u539f\u6765\u7684applicationevent\u6d88\u9664\uff0c\u4e00\u6b21\u4ece\u961f\u5217\u6d88\u9664\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5b83\u68c0\u67e5\u53d1\u9001\u5e94\u4e2d\u7684\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u548c\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\uff0c\u5982\u679c\u591a\u4e2a\u670d\u52a1\u5b9e\u4f8b\u5177\u6709\u76f8\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\uff0c\u4e8b\u4ef6\u5c06\u4e0d\u88ab\u5904\u7406\u3002\u5728\u672c\u5730\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u6bcf\u4e2a\u670d\u52a1\u5c06\u5728\u4e00\u4e2a\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u8fd9\u5c06\u662f\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u7684\u4e00\u90e8\u5206\u3002\u4e91\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7d22\u5f15\u6765\u533a\u5206\u3002Cloud Foundry\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7d22\u5f15\u6765\u533a\u5206\u3002\u786e\u4fdd\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587ID\u662f\u552f\u4e00\u7684\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\u8bbe\u7f6e spring.application.index \u552f\u4e00\u3002\u4f8b\u5982\uff0c\u5728\u6846\u67b6\u914d\u7f6eapplication.properties\uff08\u6216bootstrap.properties\u5982\u679c\u4f7f\u7528configserver\uff09\u4e2d\u8bbe\u7f6e spring.application.index=${INSTANCE_INDEX}",
            "title": "Application Context ID must be unique"
        },
        {
            "location": "/user-guide/bus/#customizing-the-message-broker",
            "text": "Spring Cloud Bus \u901a\u8fc7 Spring Cloud Stream \u5e7f\u64ad\u6d88\u606f\u4ece\u800c\u83b7\u5f97\u4fe1\u606f\u7684\u6d41\u52a8\uff0c\u4f60\u53ea\u9700\u8981\u5728\u7c7b\u8def\u5f84\u4e2d\u9009\u62e9\u4f60\u7ed1\u5b9a\u7684\u5b9e\u73b0\u3002bus\u6709\u65b9\u4fbf\u7684starters\uff0cAMQP (RabbitMQ) \u548c Kafka (spring-cloud-starter-bus-[amqp,kafka])\u3002\u4e00\u822c\u6765\u8bf4\uff0cSpring Cloud Stream\u4f9d\u9760Spring Boot autoconfiguration\u89c4\u5219\u914d\u7f6e\u4e2d\u95f4\u4ef6\uff0c\u6240\u4ee5\u4f8b\u5982AMQP\u4ee3\u7406\u5730\u5740\u662f\u53ef\u4ee5\u901a\u8fc7 spring.rabbitmq.* \u5c5e\u6027\u914d\u7f6e\u6539\u53d8\u7684\u3002Spring Cloud Bus\u6709\u5c11\u6570\u672c\u5730\u914d\u7f6e spring.cloud.bus.*  (\u4f8b\u5982  spring.cloud.bus.destination \u662f\u4f7f\u7528\u7684\u4f53\u4e2d\u95f4\u4ef6\u7684\u4e3b\u9898\u7684\u540d\u79f0)\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u503c\u5c31\u8db3\u591f\u4e86\u3002",
            "title": "Customizing the Message Broker"
        },
        {
            "location": "/user-guide/bus/#tracing-bus-events",
            "text": "Bus events\uff08RemoteApplicationEvent\u7684\u5b50\u7c7b\uff09\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e spring.cloud.bus.trace.enabled=true \u8ffd\u8e2a\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u505a\u7684\u8bdd\uff0cSpring Boot TraceRepository\uff08\u5982\u679c\u5b58\u5728\uff09\u5c06\u663e\u793a\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u9001\u548c\u6bcf\u4e2a\u670d\u52a1\u5b9e\u4f8b\u6240\u6709\u7684acks\u3002\u4f8b\u5982(/trace endpoint):  {\n  \"timestamp\": \"2015-11-26T10:24:44.411+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.ack\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"stores:8081\",\n    \"destination\": \"*:**\"\n  }\n  },\n  {\n  \"timestamp\": \"2015-11-26T10:24:41.864+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.sent\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"customers:9000\",\n    \"destination\": \"*:**\"\n  }\n  },\n  {\n  \"timestamp\": \"2015-11-26T10:24:41.862+0000\",\n  \"info\": {\n    \"signal\": \"spring.cloud.bus.ack\",\n    \"type\": \"RefreshRemoteApplicationEvent\",\n    \"id\": \"c4d374b7-58ea-4928-a312-31984def293b\",\n    \"origin\": \"customers:9000\",\n    \"destination\": \"*:**\"\n  }\n}  \u8fd9\u4e2atrace\u663e\u793a\u4e86\u6765\u81ea customers:9000 \u7684 RefreshRemoteApplicationEvent \uff0c\u5e7f\u64ad\u5230\u6240\u6709\u7684\u670d\u52a1\uff0c\u901a\u8fc7 customers:9000 \u548c stores:8081 \u6536\u5230\uff08acked\uff09  \u5904\u7406\u81ea\u5df1\u7684ACK\u4fe1\u53f7\u4f60\u53ef\u4ee5\u4e3aAckRemoteApplicationEvent\u6dfb\u52a0@EventListener\uff0c\u5728\u6dfb\u52a0SentApplicationEvent\u7c7b\u578b\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u8fdb\u5165TraceRepository\uff0c\u4ece\u90a3\u91cc\u5f00\u91c7\u6570\u636e\u3002  NOTE   \u6240\u6709Bus\u5e94\u7528\u90fd\u53ef\u4ee5\u8ffd\u8e2aacks\uff0c\u5728\u505a\u590d\u6742\u67e5\u8be2\u7684\u6570\u636e\u4e2d\u592e\u670d\u52a1\u4e2d\u8fd9\u4e48\u505a\u662f\u6709\u7528\u7684\uff0c\u6216\u5c06\u5176\u8f6c\u53d1\u5230\u4e00\u4e2a\u4e13\u95e8\u7684\u8ddf\u8e2a\u670d\u52a1\u3002",
            "title": "Tracing Bus Events"
        },
        {
            "location": "/user-guide/bus/#broadcasting-your-own-events",
            "text": "Bus\u53ef\u4ee5\u652f\u6301\u4efb\u4f55RemoteApplicationEvent\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f46\u9ed8\u8ba4\u4f20\u8f93JSON\u548c\u53cd\u5e8f\u5217\u5316\u5668\u9700\u8981\u63d0\u524d\u77e5\u9053\u54ea\u4e9b\u7c7b\u578b\u5c06\u88ab\u4f7f\u7528\u3002\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7c7b\u578b\u9700\u8981\u5728org.springframework.cloud.bus.event\u7684\u5b50\u76ee\u5f55\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528@JsonTypeName\u6ce8\u89e3\u5728\u4f60\u7684\u5b9a\u5236\u7c7b\u4e0a\u6216\u4f9d\u8d56\u4e8e\u9ed8\u8ba4\u7684\u7b56\u7565\uff0c\u4f7f\u7528\u7c7b\u7684\u7b80\u5355\u7684\u540d\u5b57\u3002\u8bf7\u6ce8\u610f\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u90fd\u9700\u8981\u8bbf\u95ee\u7c7b\u5b9a\u4e49\u3002",
            "title": "Broadcasting Your Own Events"
        },
        {
            "location": "/user-guide/config/",
            "text": "Spring Cloud Config\n#\n\n\nQuick Start\n#\n\n\nClient Side Usage\n#\n\n\nSpring Cloud Config Server\n#\n\n\nEnvironment Repository\n#\n\n\nHealth Indicator\n#\n\n\nSecurity\n#\n\n\nEncryption and Decryption\n#\n\n\nKey Management\n#\n\n\nCreating a Key Store for Testing\n#\n\n\nUsing Multiple Keys and Key Rotation\n#\n\n\nServing Encrypted Properties\n#\n\n\nServing Alternative Formats\n#\n\n\nServing Plain Text\n#\n\n\nEmbedding the Config Server\n#\n\n\nPush Notifications and Spring Cloud Bus\n#\n\n\n\u8bb8\u591a\u6e90\u4ee3\u7801\u5e93\u63d0\u4f9b\u8005\uff08\u5982GitHub\uff0cgitlab\u6216bitbucket\uff09\u4f1a\u901a\u8fc7webhook\u901a\u77e5\u60a8\u5728\u4ee3\u7801\u5e93\u7684\u53d8\u5316\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f9b\u5e94\u5546\u7684\u7528\u6237\u754c\u9762\u914d\u7f6e\u4f60\u7684webhook\uff0c\u4e00\u4e2aURL\u548c\u4e00\u7cfb\u5217\u4f60\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u3002\u6bd4\u5982Github\u4f1a\u901a\u8fc7POST\u8bf7\u6c42webhook\uff0cbody\u4e2d\u5305\u542b\u63d0\u4ea4\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u8bf7\u6c42\u5934\u201cX-Github-Event\u201d\u7b49\u4e8e\u201cpush\u201d\u3002\u5982\u679c\u4f60\u6dfb\u52a0\u4e86\u4f9d\u8d56\nspring-cloud-config-monitor\n\u5e76\u5728\u4f60\u7684Config Server\u4e2d\u6fc0\u6d3b\u4e86Spring Cloud Bus\uff0c\u4e00\u4e2a\"/monitor\" endpoint\u4f1a\u88ab\u542f\u7528\u3002\n\n\n\u5f53webhook\u88ab\u89e6\u53d1\uff0cConfig Server\u8ba4\u4e3a\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5e76\u5c06\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u4e00\u4e2a\nRefreshRemoteApplicationEvent\n\u3002\u53d8\u5316\u68c0\u6d4b\u53ef\u4ee5\u8003\u8651\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u53ea\u662f\u5728\u5bfb\u627eapplication name\u5339\u914d\u7684\u6587\u4ef6\u7684\u53d8\u5316\uff08\u4f8b\u5982\u201cfoo.properties\u201d\u662f\u9488\u5bf9\u201cfoo\u201d\u5e94\u7528\uff0c\u201capplication.properties\u201d\u662f\u9488\u5bf9\u6240\u6709\u5e94\u7528\uff09\u3002\u8be5\u7b56\u7565\uff0c\u5982\u679c\u4f60\u60f3\u91cd\u5199\u7684\u884c\u4e3a\u662f\nPropertyPathNotificationExtractor\n\uff0c\u8fd9\u4e2a\u7c7b\u63a5\u53d7\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u8def\u5f84\u6539\u53d8\u7684\u5217\u8868\u3002\n\n\n\u9ed8\u8ba4\u914d\u7f6e\u57fa\u4e8eGithub\uff0cGitlab\u6216Bitbucket\u3002\u9664\u4e86\u6765\u81eaGithub\uff0cGitlab\u6216Bitbucket\u7684JSON\u901a\u77e5\uff0c\u60a8\u53ef\u4ee5\u89e6\u53d1\u4e00\u4e2a\u66f4\u6539\u901a\u77e5\uff0c\u5411/monitor\u53d1\u8d77POST\u8bf7\u6c42\uff0c\u53c2\u6570\u662f\npath={name}\n\uff0c\u8fd9\u5c06\u5e7f\u64ad\u5339\u914d\u201c{name}\u201d\u7684\u5e94\u7528\uff08\u53ef\u4ee5\u5305\u542b\u901a\u914d\u7b26\uff09\n\n\nNOTE\n\n\n\n\n\u5f53\nspring-cloud-bus\n\u5728Config Server\u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u88ab\u6fc0\u6d3b\u65f6\uff0c\nRefreshRemoteApplicationEvent\n\u624d\u4f1a\u88ab\u4f20\u64ad\n\n\n\n\nNOTE\n\n\n\n\n\u9ed8\u8ba4\u7684\u914d\u7f6e\u4e5f\u68c0\u6d4b\u5230\u672c\u5730\u7684Git\u4ed3\u5e93\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u53d8\u5316\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9002\u7528webhook\uff0c\u53ea\u8981\u4f60\u7f16\u8f91\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u65b0\u5c31\u4f1a\u88ab\u53d1\u9001\uff09\n\n\n\n\nSpring Cloud Config Client\n#\n\n\nConfig First Bootstrap\n#\n\n\nDiscovery First Bootstrap\n#\n\n\nConfig Client Fail Fast\n#\n\n\nConfig Client Retry\n#\n\n\nLocating Remote Configuration Resources\n#\n\n\nSecurity\n#",
            "title": "Spring Cloud Config"
        },
        {
            "location": "/user-guide/config/#spring-cloud-config",
            "text": "",
            "title": "Spring Cloud Config"
        },
        {
            "location": "/user-guide/config/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/user-guide/config/#client-side-usage",
            "text": "",
            "title": "Client Side Usage"
        },
        {
            "location": "/user-guide/config/#spring-cloud-config-server",
            "text": "",
            "title": "Spring Cloud Config Server"
        },
        {
            "location": "/user-guide/config/#environment-repository",
            "text": "",
            "title": "Environment Repository"
        },
        {
            "location": "/user-guide/config/#health-indicator",
            "text": "",
            "title": "Health Indicator"
        },
        {
            "location": "/user-guide/config/#security",
            "text": "",
            "title": "Security"
        },
        {
            "location": "/user-guide/config/#encryption-and-decryption",
            "text": "",
            "title": "Encryption and Decryption"
        },
        {
            "location": "/user-guide/config/#key-management",
            "text": "",
            "title": "Key Management"
        },
        {
            "location": "/user-guide/config/#creating-a-key-store-for-testing",
            "text": "",
            "title": "Creating a Key Store for Testing"
        },
        {
            "location": "/user-guide/config/#using-multiple-keys-and-key-rotation",
            "text": "",
            "title": "Using Multiple Keys and Key Rotation"
        },
        {
            "location": "/user-guide/config/#serving-encrypted-properties",
            "text": "",
            "title": "Serving Encrypted Properties"
        },
        {
            "location": "/user-guide/config/#serving-alternative-formats",
            "text": "",
            "title": "Serving Alternative Formats"
        },
        {
            "location": "/user-guide/config/#serving-plain-text",
            "text": "",
            "title": "Serving Plain Text"
        },
        {
            "location": "/user-guide/config/#embedding-the-config-server",
            "text": "",
            "title": "Embedding the Config Server"
        },
        {
            "location": "/user-guide/config/#push-notifications-and-spring-cloud-bus",
            "text": "\u8bb8\u591a\u6e90\u4ee3\u7801\u5e93\u63d0\u4f9b\u8005\uff08\u5982GitHub\uff0cgitlab\u6216bitbucket\uff09\u4f1a\u901a\u8fc7webhook\u901a\u77e5\u60a8\u5728\u4ee3\u7801\u5e93\u7684\u53d8\u5316\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f9b\u5e94\u5546\u7684\u7528\u6237\u754c\u9762\u914d\u7f6e\u4f60\u7684webhook\uff0c\u4e00\u4e2aURL\u548c\u4e00\u7cfb\u5217\u4f60\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u3002\u6bd4\u5982Github\u4f1a\u901a\u8fc7POST\u8bf7\u6c42webhook\uff0cbody\u4e2d\u5305\u542b\u63d0\u4ea4\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u8bf7\u6c42\u5934\u201cX-Github-Event\u201d\u7b49\u4e8e\u201cpush\u201d\u3002\u5982\u679c\u4f60\u6dfb\u52a0\u4e86\u4f9d\u8d56 spring-cloud-config-monitor \u5e76\u5728\u4f60\u7684Config Server\u4e2d\u6fc0\u6d3b\u4e86Spring Cloud Bus\uff0c\u4e00\u4e2a\"/monitor\" endpoint\u4f1a\u88ab\u542f\u7528\u3002  \u5f53webhook\u88ab\u89e6\u53d1\uff0cConfig Server\u8ba4\u4e3a\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5e76\u5c06\u9488\u5bf9\u5e94\u7528\u7a0b\u5e8f\u53d1\u9001\u4e00\u4e2a RefreshRemoteApplicationEvent \u3002\u53d8\u5316\u68c0\u6d4b\u53ef\u4ee5\u8003\u8651\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u53ea\u662f\u5728\u5bfb\u627eapplication name\u5339\u914d\u7684\u6587\u4ef6\u7684\u53d8\u5316\uff08\u4f8b\u5982\u201cfoo.properties\u201d\u662f\u9488\u5bf9\u201cfoo\u201d\u5e94\u7528\uff0c\u201capplication.properties\u201d\u662f\u9488\u5bf9\u6240\u6709\u5e94\u7528\uff09\u3002\u8be5\u7b56\u7565\uff0c\u5982\u679c\u4f60\u60f3\u91cd\u5199\u7684\u884c\u4e3a\u662f PropertyPathNotificationExtractor \uff0c\u8fd9\u4e2a\u7c7b\u63a5\u53d7\u8bf7\u6c42\u5934\u548c\u8bf7\u6c42\u4f53\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u8def\u5f84\u6539\u53d8\u7684\u5217\u8868\u3002  \u9ed8\u8ba4\u914d\u7f6e\u57fa\u4e8eGithub\uff0cGitlab\u6216Bitbucket\u3002\u9664\u4e86\u6765\u81eaGithub\uff0cGitlab\u6216Bitbucket\u7684JSON\u901a\u77e5\uff0c\u60a8\u53ef\u4ee5\u89e6\u53d1\u4e00\u4e2a\u66f4\u6539\u901a\u77e5\uff0c\u5411/monitor\u53d1\u8d77POST\u8bf7\u6c42\uff0c\u53c2\u6570\u662f path={name} \uff0c\u8fd9\u5c06\u5e7f\u64ad\u5339\u914d\u201c{name}\u201d\u7684\u5e94\u7528\uff08\u53ef\u4ee5\u5305\u542b\u901a\u914d\u7b26\uff09  NOTE   \u5f53 spring-cloud-bus \u5728Config Server\u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u88ab\u6fc0\u6d3b\u65f6\uff0c RefreshRemoteApplicationEvent \u624d\u4f1a\u88ab\u4f20\u64ad   NOTE   \u9ed8\u8ba4\u7684\u914d\u7f6e\u4e5f\u68c0\u6d4b\u5230\u672c\u5730\u7684Git\u4ed3\u5e93\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u53d8\u5316\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9002\u7528webhook\uff0c\u53ea\u8981\u4f60\u7f16\u8f91\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u65b0\u5c31\u4f1a\u88ab\u53d1\u9001\uff09",
            "title": "Push Notifications and Spring Cloud Bus"
        },
        {
            "location": "/user-guide/config/#spring-cloud-config-client",
            "text": "",
            "title": "Spring Cloud Config Client"
        },
        {
            "location": "/user-guide/config/#config-first-bootstrap",
            "text": "",
            "title": "Config First Bootstrap"
        },
        {
            "location": "/user-guide/config/#discovery-first-bootstrap",
            "text": "",
            "title": "Discovery First Bootstrap"
        },
        {
            "location": "/user-guide/config/#config-client-fail-fast",
            "text": "",
            "title": "Config Client Fail Fast"
        },
        {
            "location": "/user-guide/config/#config-client-retry",
            "text": "",
            "title": "Config Client Retry"
        },
        {
            "location": "/user-guide/config/#locating-remote-configuration-resources",
            "text": "",
            "title": "Locating Remote Configuration Resources"
        },
        {
            "location": "/user-guide/config/#security_1",
            "text": "",
            "title": "Security"
        },
        {
            "location": "/user-guide/sleuth/",
            "text": "\u8bd1\u8005\uff1a\u6960\u500f\u4e4b\u8bed / xc8609@126.com \n\n\n\u539f\u6587\u5730\u5740\uff1a\nSpring Cloud Sleuth\u4f7f\u7528\u7b80\u4ecb\n\n\n\u7edd\u5927\u90e8\u5206\u51fa\u81ea\u539f\u6587\uff0c\u90e8\u5206\u505a\u4e86\u5fae\u8c03\u3002\n\n\n\n\nSpring Cloud Sleuth\n#\n\n\nSpringCloudSleuth\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u672f\u8bed\n#\n\n\nSpringCloudSleuth \u501f\u7528\u4e86 Dapper \u7684\u672f\u8bed\n\n\n\n\nSpan\uff1a\n \u57fa\u672c\u5de5\u4f5c\u5355\u5143\uff0c\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u65b0\u5efa\u7684span\u4e2d\u53d1\u9001\u4e00\u4e2aRPC\u7b49\u540c\u4e8e\u53d1\u9001\u4e00\u4e2a\u56de\u5e94\u8bf7\u6c42\u7ed9RPC\uff0cspan\u901a\u8fc7\u4e00\u4e2a64\u4f4dID\u552f\u4e00\u6807\u8bc6\uff0ctrace\u4ee5\u53e6\u4e00\u4e2a64\u4f4dID\u8868\u793a\uff0cspan\u8fd8\u6709\u5176\u4ed6\u6570\u636e\u4fe1\u606f\uff0c\u6bd4\u5982\u6458\u8981\u3001\u65f6\u95f4\u6233\u4e8b\u4ef6\u3001\u5173\u952e\u503c\u6ce8\u91ca(tags)\u3001span\u7684ID\u3001\u4ee5\u53ca\u8fdb\u5ea6ID(\u901a\u5e38\u662fIP\u5730\u5740)\nspan\u5728\u4e0d\u65ad\u7684\u542f\u52a8\u548c\u505c\u6b62\uff0c\u540c\u65f6\u8bb0\u5f55\u4e86\u65f6\u95f4\u4fe1\u606f\uff0c\u5f53\u4f60\u521b\u5efa\u4e86\u4e00\u4e2aspan\uff0c\u4f60\u5fc5\u987b\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u523b\u505c\u6b62\u5b83\u3002\n\n\n\n\n\n\nroot span\n\u7684SpanID\u548cTraneID\u76f8\u7b49\u3002\n\n\n\n\n\n\nTrace\uff1a\n  \u4e00\u7cfb\u5217spans\u7ec4\u6210\u7684\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6b63\u5728\u8dd1\u4e00\u4e2a\u5206\u5e03\u5f0f\u5927\u6570\u636e\u5de5\u7a0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u521b\u5efa\u4e00\u4e2atrace\u3002\n\n\nAnnotation\uff1a\n \u7528\u6765\u53ca\u65f6\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5b58\u5728\uff0c\u4e00\u4e9b\u6838\u5fc3annotations\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u8bf7\u6c42\u7684\u5f00\u59cb\u548c\u7ed3\u675f\n\n\ncs\uff1aClient Sent - \u5ba2\u6237\u7aef\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42\uff0c\u8fd9\u4e2aannotion\u63cf\u8ff0\u4e86\u8fd9\u4e2aspan\u7684\u5f00\u59cb\n\n\nsr\uff1aServer Received - \u670d\u52a1\u7aef\u83b7\u5f97\u8bf7\u6c42\u5e76\u51c6\u5907\u5f00\u59cb\u5904\u7406\u5b83\uff0c\u5982\u679c\u5c06\u5176sr\u51cf\u53bbcs\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u7f51\u7edc\u5ef6\u8fdf\n\n\nss\uff1aServer Sent - \u6ce8\u89e3\u8868\u660e\u8bf7\u6c42\u5904\u7406\u7684\u5b8c\u6210(\u5f53\u8bf7\u6c42\u8fd4\u56de\u5ba2\u6237\u7aef)\uff0c\u5982\u679css\u51cf\u53bbsr\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u670d\u52a1\u7aef\u9700\u8981\u7684\u5904\u7406\u8bf7\u6c42\u65f6\u95f4\n\n\ncr\uff1aClient Received - \u8868\u660espan\u7684\u7ed3\u675f\uff0c\u5ba2\u6237\u7aef\u6210\u529f\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u56de\u590d\uff0c\u5982\u679ccr\u51cf\u53bbcs\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u56de\u590d\u7684\u6240\u6709\u6240\u9700\u65f6\u95f4\n\n\n\n\n\n\n\n\n\u5c06Span\u548cTrace\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u4f7f\u7528Zipkin\u6ce8\u89e3\u7684\u8fc7\u7a0b\u56fe\u5f62\u5316\uff1a\n\n\n\n\n\u6bcf\u4e2a\u989c\u8272\u7684\u6ce8\u89e3\u8868\u660e\u4e00\u4e2aspan(\u603b\u8ba17\u4e2aspans\uff0c\u4ece\nA\n\u5230\nG\n)\uff0c\u5982\u679c\u5728\u6ce8\u89e3\u4e2d\u6709\u8fd9\u6837\u7684\u4fe1\u606f\uff1a\n\n\nTrace Id = X\nSpan Id = D\nClient Sent\n\n\n\n\n\u8fd9\u5c31\u8868\u660e\u5f53\u524dspan\u5c06\nTrace-Id\n\u8bbe\u7f6e\u4e3a\nX\n\uff0c\u5c06\nSpan-Id\n\u8bbe\u7f6e\u4e3a\nD\n\uff0c\u540c\u65f6\u5b83\u8fd8\u8868\u660e\u4e86\nClient Sent\n\u4e8b\u4ef6\u3002\n\n\nspans \u7684parent/child\u5173\u7cfb\u56fe\u5f62\u5316\uff1a\n\n\n\n\n\n\n\u76ee\u7684\n#\n\n\n\u4e0b\u9762\u7ae0\u8282\u7684\u4f8b\u5b50\u662f\u57fa\u4e8e\u4e0a\u56fe\u63cf\u8ff0\u7684\u573a\u666f\n\n\n\u57fa\u4e8eZipkin\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\n#\n\n\n\u603b\u8ba110\u4e2aspans\uff0c\u5982\u679c\u5728Zipkin\u4e2d\u67e5\u770btraces\u5c06\u770b\u5230\u5982\u4e0b\u56fe\uff1a\n\n\n\n\n\u4f46\u5982\u679c\u4f60\u9009\u53d6\u4e00\u4e2a\u7279\u6b8a\u7684trace\u4f60\u5c06\u770b\u52307\u4e2aspans\uff1a\n\n\n\n\n\n\n\u5f53\u9009\u53d6\u4e00\u4e2a\u7279\u6b8atrace\u65f6\u4f60\u4f1a\u770b\u5230\u5408\u5e76\u7684spans\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4e24\u4e2aspans\u4f7f\u7528\u5ba2\u6237\u7aef\u63a5\u6536\u53d1\u9001/\u670d\u52a1\u7aef\u63a5\u6536\u53d1\u9001\u6ce8\u89e3\u53d1\u9001\u81f3Zipkin\u65f6\uff0c\u4ed6\u4eec\u5c06\u8868\u73b0\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684span\n\n\n\n\n\u5728\u5c55\u793aSpan\u548cTrace\u56fe\u5f62\u5316\u7684\u56fe\u7247\u4e2d\u670920\u4e2a\u989c\u8272\u6807\u7b7e\uff0cZipkin\u53c8\u662f\u5982\u4f55\u63a5\u653610\u4e2aspans\u7684\u5462\uff1f\n\n\n\n\n2\u4e2aspan A\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin\n\n\n4\u4e2aspan B\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 1\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 2\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76\n\n\n2\u4e2aspan C\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin\n\n\n4\u4e2aspan D\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 2\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 3\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76\n\n\n2\u4e2aspan E\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin\n\n\n4\u4e2aspan F\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 2\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 4\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76\n\n\n2\u4e2aspan G\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin\n\n\n\n\n\u56e0\u6b641\u4e2aspan\u6765\u81eaA\uff0c2\u4e2aspan\u6765\u81eaB\uff0c1\u4e2aspan\u6765\u81eaC\uff0c2\u4e2aspan\u6765\u81eaD\uff0c1\u4e2aspan\u6765\u81eaE\uff0c2\u4e2aspan\u6765\u81eaF\uff0c1\u4e2a\u6765\u81eaG\uff0c\u603b\u8ba110\u4e2aspans\u3002\n\n\nZipkin\u4e2d\u7684\u4f9d\u8d56\u56fe\uff1a\n\n\n\n\nLog\u76f8\u5173\n#\n\n\n\u5f53\u4f7f\u7528trace id\u4e3a\n2485ec27856c56f4\n\u6293\u53d6\u8fd9\u56db\u4e2a\u5e94\u7528\u7684log\u65f6\uff0c\u4f1a\u83b7\u5f97\u5982\u4e0b\u8f93\u51fa\uff1a\n\n\nservice1.log:2016-02-26 11:15:47.561  INFO [service1,2485ec27856c56f4,2485ec27856c56f4,true] 68058 --- [nio-8081-exec-1] i.s.c.sleuth.docs.service1.Application   : Hello from service1. Calling service2\nservice2.log:2016-02-26 11:15:47.710  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Hello from service2. Calling service3 and then service4\nservice3.log:2016-02-26 11:15:47.895  INFO [service3,2485ec27856c56f4,1210be13194bfe5,true] 68060 --- [nio-8083-exec-1] i.s.c.sleuth.docs.service3.Application   : Hello from service3\nservice2.log:2016-02-26 11:15:47.924  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Got response from service3 [Hello from service3]\nservice4.log:2016-02-26 11:15:48.134  INFO [service4,2485ec27856c56f4,1b1845262ffba49d,true] 68061 --- [nio-8084-exec-1] i.s.c.sleuth.docs.service4.Application   : Hello from service4\nservice2.log:2016-02-26 11:15:48.156  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Got response from service4 [Hello from service4]\nservice1.log:2016-02-26 11:15:48.182  INFO [service1,2485ec27856c56f4,2485ec27856c56f4,true] 68058 --- [nio-8081-exec-1] i.s.c.sleuth.docs.service1.Application   : Got response from service2 [Hello from service2, response from service3 [Hello from service3] and from service4 [Hello from service4]]\n\n\n\n\n\u5982\u679c\u4f60\u4f7f\u7528log\u96c6\u5408\u5de5\u5177\u4f8b\u5982Kibana\u3001Splunk\u7b49\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e8b\u4ef6\u7684\u53d1\u751f\u4fe1\u606f\uff0cKibana\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n\n\n\u4ee5\u4e0b\u662fLogstash\u7684Grok\u6a21\u5f0f\uff1a\n\n\nfilter {\n       # pattern matching logback pattern\n       grok {\n              match => { \"message\" => \"%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span},%{DATA:exportable}\\]\\s+%{DATA:pid}---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\" }\n       }\n}\n\n\n\n\nJSON Logback with Logstash\n#\n\n\n\u4e3a\u4e86\u65b9\u4fbf\u83b7\u53d6Logstash\uff0c\u901a\u5e38\u4fdd\u5b58log\u5728JSON\u6587\u4ef6\u4e2d\u800c\u4e0d\u662ftext\u6587\u4ef6\u4e2d\uff0c\u914d\u7f6e\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\n\u4f9d\u8d56\u5efa\u7acb\n\n\n\n\n\u786e\u4fddLogback\u5728classpath\u4e2d(ch.qos.logback:logback-core)\n\n\n\u589e\u52a0LogstashLogback\u7f16\u7801 - version 4.6\u7684\u4f8b\u5b50\uff1anet.logstash.logback:logstash-logback-encoder:4.6\n\n\n\n\nLogback\u5efa\u7acb\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2aLogback\u914d\u7f6e\u7684\u4f8b\u5b50(\u6587\u4ef6\u540d\u79f0 \nlogback-spring.xml\n) \uff1a\n\n\n\n\n\u4f7f\u7528JSON\u683c\u5f0f\u8bb0\u5f55\u5e94\u7528\u4fe1\u606f\u5230build/${spring.application.name}.json\u6587\u4ef6\n\n\n\u6709\u4e24\u4e2a\u6dfb\u52a0\u6ce8\u91ca\u6e90- console\u548c\u6807\u51c6log\u6587\u4ef6\n\n\n\u4e0e\u4e4b\u524d\u7ae0\u8282\u4f7f\u7528\u76f8\u540c\u7684log\u6a21\u5f0f\n\n\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n    <include resource=\"org/springframework/boot/logging/logback/defaults.xml\"/>\n    \u200b\n    <springProperty scope=\"context\" name=\"springAppName\" source=\"spring.application.name\"/>\n    <!-- Example for logging into the build folder of your project -->\n    <property name=\"LOG_FILE\" value=\"${BUILD_FOLDER:-build}/${springAppName}\"/>\u200b\n\n    <property name=\"CONSOLE_LOG_PATTERN\"\n              value=\"%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n\n    <!-- Appender to log to console -->\n    <appender name=\"console\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n            <!-- Minimum logging level to be presented in the console logs-->\n            <level>INFO</level>\n        </filter>\n        <encoder>\n            <pattern>${CONSOLE_LOG_PATTERN}</pattern>\n            <charset>utf8</charset>\n        </encoder>\n    </appender>\n\n    <!-- Appender to log to file -->\u200b\n    <appender name=\"flatfile\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_FILE}</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <pattern>${CONSOLE_LOG_PATTERN}</pattern>\n            <charset>utf8</charset>\n        </encoder>\n    </appender>\n    \u200b\n    <!-- Appender to log to file in a JSON format -->\n    <appender name=\"logstash\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_FILE}.json</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\">\n            <providers>\n                <timestamp>\n                    <timeZone>UTC</timeZone>\n                </timestamp>\n                <pattern>\n                    <pattern>\n                        {\n                        \"severity\": \"%level\",\n                        \"service\": \"${springAppName:-}\",\n                        \"trace\": \"%X{X-B3-TraceId:-}\",\n                        \"span\": \"%X{X-B3-SpanId:-}\",\n                        \"exportable\": \"%X{X-Span-Export:-}\",\n                        \"pid\": \"${PID:-}\",\n                        \"thread\": \"%thread\",\n                        \"class\": \"%logger{40}\",\n                        \"rest\": \"%message\"\n                        }\n                    </pattern>\n                </pattern>\n            </providers>\n        </encoder>\n    </appender>\n    \u200b\n    <root level=\"INFO\">\n        <!--<appender-ref ref=\"console\"/>-->\n        <appender-ref ref=\"logstash\"/>\n        <!--<appender-ref ref=\"flatfile\"/>-->\n    </root>\n</configuration>\n\n\n\n\n\n\n\u4f7f\u7528 \nlogback-spring.xml\n \u9700\u8981\u5c06 \nspring.application.name\n \u5728 \nbootstrap\n \u4e2d\u914d\u7f6e\uff0c\u800c\u4e0d\u662f\u914d\u7f6e\u5728 \napplication\n \u4e2d\uff0c\u5426\u5219logback\u5ba2\u6237\u7aef\u5c06\u4e0d\u80fd\u8bfb\u53d6\u5230\u914d\u7f6e\u503c\u3002\n\n\n\n\n\n\n\u6dfb\u52a0\u8fdb\u5de5\u7a0b\n#\n\n\n\u4ec5Sleuth(log\u6536\u96c6)\n#\n\n\n\u5982\u679c\u4ec5\u9700\u8981Spring Cloud Sleuth\u800c\u4e0d\u9700\u8981Zipkin\u96c6\u6210\uff0c\u53ea\u9700\u8981\u589e\u52a0\nspring-cloud-starter-sleuth\n\u6a21\u5757\u5230\u4f60\u5de5\u7a0b\u4e2d\uff0cmaven\u65b9\u5f0f\u5982\u4e0b\n\n\n<dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n\n\n\n\n\n\n\u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-starter-sleuth\n\n\n\n\n\u901a\u8fc7HTTP\u4f7f\u7528\u57fa\u4e8eZipkin\u7684Sleuth\n#\n\n\n\u5982\u679c\u4f60\u9700\u8981Sleuth\u548cZipkin\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\nspring-cloud-starter-zipkin\n\u4f9d\u8d56\n\n\n<dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-zipkin</artifactId>\n</dependency>\n\n\n\n\n\n\n\u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-starter-zipkin\n\n\n\n\n\u901a\u8fc7SpringCloudStream\u4f7f\u7528Sleuth+Zipkin\n#\n\n\n<dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-sleuth-stream</artifactId>\n</dependency>\n<dependency> (3)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n<!-- EXAMPLE FOR RABBIT BINDING -->\n<dependency> (4)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-stream-binder-rabbit</artifactId>\n</dependency>\n\n\n\n\n\n\n\u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-sleuth-stream\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-starter-sleuth\n\n\n\u6dfb\u52a0\u4e00\u4e2abinder(e.g.Rabbit binder)\u6765\u544a\u8bc9Spring Cloud Stream\u5e94\u8be5\u7ed1\u5b9a\u4ec0\u4e48\n\n\n\n\nSpring Cloud Sleuth Stream Zipkin Collector\n#\n\n\n\u542f\u52a8\u4e00\u4e2aSpring Cloud Sleuth Stream Zipkin\u6536\u96c6\u5668\u53ea\u9700\u8981\u6dfb\u52a0\nspring-cloud-sleuth-zipkin-stream\n\u4f9d\u8d56\n\n\n<dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>\n</dependency>\n<dependency> (3)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n<!-- EXAMPLE FOR RABBIT BINDING -->\n<dependency> (4)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-stream-binder-rabbit</artifactId>\n</dependency>\n\n\n\n\n\n\n\u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-sleuth-zipkin-stream\n\n\n\u6dfb\u52a0\u4f9d\u8d56\u5230\nspring-cloud-starter-sleuth\n\n\n\u6dfb\u52a0\u4e00\u4e2abinder(e.g.Rabbit binder)\u6765\u544a\u8bc9Spring Cloud Stream\u5e94\u8be5\u7ed1\u5b9a\u4ec0\u4e48\n\n\n\n\n\u4e4b\u540e\u53ea\u9700\u8981\u5728\u4f60\u7684\u4e3b\u7c7b\u4e2d\u6dfb\u52a0@EnableZipkinStreamServer\u6ce8\u89e3\n\n\npackage example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.sleuth.zipkin.stream.EnableZipkinStreamServer;\n\n@SpringBootApplication\n@EnableZipkinStreamServer\npublic class ZipkinStreamServerApplication {\n\n    public static void main(String[] args) throws Exception {\n        SpringApplication.run(ZipkinStreamServerApplication.class, args);\n    }\n\n}\n\n\n\n\n\n\n\u7279\u6027\n#\n\n\n\n\n\u6dfb\u52a0trace\u548cspanid\u5230Slf4J MDC\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684trace\u6216span\u4e2d\u63d0\u53d6\u6240\u6709\u7684log\uff0c\u4f8b\u5982\n\n\n\n\n2016-02-02 15:30:57.902  INFO [bar,6bfd228dc00d216b,6bfd228dc00d216b,false] 23030 --- [nio-8081-exec-3] ...\n2016-02-02 15:30:58.372 ERROR [bar,6bfd228dc00d216b,6bfd228dc00d216b,false] 23030 --- [nio-8081-exec-3] ...\n2016-02-02 15:31:01.936  INFO [bar,46ab0d418373cbc9,46ab0d418373cbc9,false] 23030 --- [nio-8081-exec-4] ...\n\n\n\n\n\u6ce8\u610fMDC\u4e2d\u7684\n[appname,traceId,spanId,exportable]\n\uff1a\n\n\n\n\n\n\n\n\nspanId - the id of a specific operation that took place\n\n\nappname - the name of the application that logged the span\n\n\ntraceId - the id of the latency graph that contains the span\n\n\nexportable - whether the log should be exported to Zipkin or not. When would you like the span not to be exportable? In the case in which you want to wrap some operation in a Span and have it written to the logs only.\n\n\n\n\n\n\n\n\n\u5728\u901a\u5e38\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u6570\u636e\u6a21\u578b\u4e0a\u63d0\u4f9b\u4e00\u79cd\u62bd\u8c61\u6a21\u578b\uff1atraces\u3001spans(\u751f\u6210\u4e00\u4e2aDAG)\u3001annotations\u3001key-value annotations\u3002\u57fa\u4e8eHTrace\u662f\u8f83\u4e3a\u5bbd\u677e\u7684\uff0c\u4f46Zipkin(Dapper)\u66f4\u5177\u517c\u5bb9\u6027\n\n\n\n\nSleuth\u8bb0\u5f55\u65f6\u95f4\u4fe1\u606f\u6765\u5e2e\u52a9\u5ef6\u8fdf\u5206\u6790\uff0c\u4f7f\u7528Sleuth\u53ef\u4ee5\u7cbe\u786e\u627e\u5230\u5e94\u7528\u4e2d\u5ef6\u8fdf\u7684\u539f\u56e0\uff0cSleuth\u4e0d\u4f1alog\u592a\u591a\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bfc\u81f4\u4f60\u7684\u5e94\u7528\u6302\u6389\n\n\npropagatesstructural data about your call-graph in-band, and the rest out-of-band\n\n\nincludesopinionated instrumentation of layers such as HTTP\n\n\nincludessampling policy to manage volume\n\n\ncanreport to a Zipkin system for query and visualization\n\n\n\n\n\n\n\u4f7f\u7528Spring\u5e94\u7528\u88c5\u5907\u51fa\u5165\u53e3\u70b9(servletfilter\u3001async endpoints\u3001rest template\u3001scheduled actions\u3001messagechannels\u3001zuul filters\u3001feign client)\n\n\nSleuth\u5305\u542b\u9ed8\u8ba4\u903b\u8f91\u901a\u8fc7http\u6216messaging boundaries\u6765\u52a0\u5165\u4e00\u4e2atrace\uff0c\u4f8b\u5982\uff0chttp\u4f20\u64ad\u901a\u8fc7Zipkin-compatiblerequest headers\u5de5\u4f5c\uff0c\u8fd9\u4e2a\u4f20\u64ad\u903b\u8f91\u5b9a\u4e49\u548c\u5b9a\u5236\u662f\u901a\u8fc7SpanInjector\u548cSpanExtractor\n\n\n\u5b9e\u73b0\u63d0\u4f9b\u7b80\u5355\u7684\u63a5\u53d7\u6216\u653e\u5f03span\n\n\nIf spring-cloud-sleuth-zipkin then the app will generate and collect Zipkin-compatible traces. By default it sends them via HTTP to a Zipkin server on localhost (port 9411). Configure the location of the service using spring.zipkin.baseUrl.\n\n\nIf spring-cloud-sleuth-stream then the app will generate and collect traces via Spring Cloud Stream. Your app automatically becomes a producer of tracer messages that are sent over your broker of choice (e.g. RabbitMQ, Apache Kafka, Redis).\n\n\n\n\nIMPORTANT\n\n\n\n\nIf using Zipkin or Stream, configure the percentage of spans exported using spring.sleuth.sampler.percentage (default 0.1, i.e. 10%). Otherwise you might think that Sleuth is not working cause it\u2019s omitting some spans.\n\n\n\n\nNOTE\n\n\n\n\nthe SLF4J MDC is always set and logback users will immediately see the trace and span ids in logs per the example above. Other logging systems have to configure their own formatter to get the same result. The default is logging.pattern.level set to %clr(%5p) %clr([${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} (this is a Spring Boot feature for logback users). This means that if you\u2019re not using SLF4J this pattern WILL NOT be automatically applied.\n\n\n\n\n\n\n\u62bd\u6837\n#\n\n\n\u5728\u5206\u5e03\u5f0f\u8ffd\u8e2a\u65f6\uff0c\u6570\u636e\u91cf\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u62bd\u6837\u5c31\u53d8\u5f97\u975e\u5e38\u91cd\u8981(\u901a\u5e38\u4e0d\u9700\u8981\u5bfc\u51fa\u6240\u6709\u7684spans\u4ee5\u5f97\u5230\u4e8b\u4ef6\u53d1\u751f\u539f\u8c8c)\uff0cSpring Cloud Sleuth\u6709\u4e00\u4e2a\nSampler\n\u6218\u7565\uff0c\u5373\u7528\u6237\u53ef\u4ee5\u63a7\u5236\u62bd\u6837\u7b97\u6cd5\uff0cSamplers\u4e0d\u4f1a\u505c\u6b62\u6b63\u5728\u751f\u6210\u7684span id(\u76f8\u5173\u7684)\uff0c\u4f46\u4ed6\u4eec\u4f1a\u963b\u6b62tags\u548cevents\u9644\u52a0\u548c\u8f93\u51fa\uff0c\u9ed8\u8ba4\u6218\u7565\u662f\u5f53\u4e00\u4e2aspan\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\u4f1a\u7ee7\u7eedtrace\uff0c\u4f46\u65b0\u7684span\u4f1a\u4e00\u76f4\u5904\u4e8e\u4e0d\u8f93\u51fa\u72b6\u6001\uff0c\u5982\u679c\u6240\u6709\u5e94\u7528\u90fd\u4f7f\u7528\u8fd9\u4e2asampler\uff0c\u4f60\u4f1a\u5728logs\u4e2d\u770b\u5230traces\uff0c\u4f46\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u8fdc\u7a0b\u4ed3\u5e93\u3002\u6d4b\u8bd5\u72b6\u6001\u8d44\u6e90\u90fd\u662f\u5145\u8db3\u7684\uff0c\u5e76\u4e14\u4f60\u53ea\u4f7f\u7528logs\u7684\u8bdd\u4ed6\u5c31\u662f\u4f60\u9700\u8981\u7684\u5168\u90e8(e.g. \u4e00\u4e2aELK\u96c6\u5408)\uff0c\u5982\u679c\u8f93\u51faspan\u6570\u636e\u5230Zipkin\u6216Spring Cloud Stream\uff0c\u6709\nAlwaysSampler\n\u8f93\u51fa\u6240\u6709\u6570\u636e\u548c\nPercentageBasedSampler\n\u91c7\u6837spans\u786e\u5b9a\u7684\u4e00\u90e8\u5206\u3002\n\n\n\n\n\u5982\u679c\u4f7f\u7528spring-cloud-sleuth-zipkin\u6216spring-cloud-sleuth-stream\uff0cPercentageBasedSampler\u662f\u9ed8\u8ba4\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528spring.sleuth.sampler.percentage\u914d\u7f6e\u8f93\u51fa\n\n\n\n\n\u901a\u8fc7\u521b\u5efa\u4e00\u4e2abean\u5b9a\u4e49\u5c31\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2asampler\n\n\n@Bean\npublic Sampler defaultSampler() {\n    return new AlwaysSampler();\n}\n\n\n\n\n\n\nInstrumentation\n#\n\n\nSpring Cloud Sleuth\u81ea\u52a8\u88c5\u914d\u6240\u6709Spring\u5e94\u7528\uff0c\u56e0\u6b64\u4f60\u4e0d\u7528\u505a\u4efb\u4f55\u4e8b\u6765\u8ba9\u4ed6\u5de5\u4f5c\uff0c\u88c5\u914d\u662f\u4f7f\u7528\u4e00\u7cfb\u5217\u6280\u672f\u6dfb\u52a0\u7684\uff0c\u4f8b\u5982\u5bf9\u4e8e\u4e00\u4e2aservlet web\u5e94\u7528\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aFilter\uff0c\u5bf9\u4e8eSpringIntegration\u6211\u4eec\u4f7f\u7528\nChannelInterceptors\n\u3002\n\n\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528span tags\u5b9a\u5236\u5173\u952e\u5b57\uff0c\u4e3a\u4e86\u9650\u5236span\u6570\u636e\u91cf\uff0c\u4e00\u822c\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ea\u4f1a\u88ab\u5c11\u6570\u5143\u6570\u636e\u6807\u8bb0\uff0c\u4f8b\u5982status code\u3001host\u4ee5\u53caURL\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\nspring.sleuth.keys.http.headers\n(\u4e00\u7cfb\u5217\u5934\u540d\u79f0)\u6dfb\u52a0request headers\u3002\n\n\n\n\ntags\u4ec5\u5728Sampler\u5141\u8bb8\u5176\u88ab\u6536\u96c6\u548c\u8f93\u51fa\u65f6\u5de5\u4f5c(\u9ed8\u8ba4\u60c5\u51b5\u5176\u4e0d\u5de5\u4f5c\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u5728\u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u6536\u96c6\u8fc7\u591a\u6570\u636e\u7684\u610f\u5916\u5371\u9669\u51fa\u73b0)\n\n\nCurrently the instrumentation in Spring Cloud Sleuth is eager - it means that we\u2019re actively trying to pass the tracing context between threads. Also timing events are captured even when sleuth isn\u2019t exporting data to a tracing system. This approach may change in the future towards being lazy on this matter.\n\n\n\n\n\n\nSpan\u751f\u547d\u5468\u671f\n#\n\n\n\u901a\u8fc7Trace\u63a5\u53e3\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728Span\u4e0a\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n\n\n\nstart - \u5f53\u6253\u5f00\u4e00\u4e2aspan\u65f6\uff0c\u5176\u540d\u5b57\u88ab\u6307\u5b9a\u4e14\u5f00\u59cb\u65f6\u95f4\u6233\u88ab\u8bb0\u5f55\n\n\nclose - span\u5df2\u7ecf\u7ed3\u675f(span\u7684\u7ed3\u675f\u65f6\u95f4\u5df2\u88ab\u8bb0\u5f55)\u5e76\u4e14\u5982\u679cspan\u662f\u8f93\u51fa\u7684\uff0c\u4ed6\u5c06\u662fZipkin\u5408\u9002\u7684\u6536\u96c6\u9879\uff0cspan\u5728\u5f53\u524d\u7ebf\u7a0b\u4e5f\u5c06\u88ab\u79fb\u9664\n\n\ncontinue - span\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u5c06\u88ab\u521b\u5efa\uff0c\u7136\u800c\u4ed6\u5c06\u662f\u6b63\u662f\u6b63\u5728\u8fd0\u884c\u7684span\u7684\u4e00\u4e2a\u590d\u5236\u4f53\n\n\ndetach - span\u4e0d\u4f1a\u505c\u6b62\u6216\u5173\u95ed\uff0c\u4ed6\u53ea\u4f1a\u88ab\u4ece\u5f53\u524d\u7ebf\u7a0b\u4e2d\u79fb\u9664\n\n\ncreate with explicit parent - \u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u660e\u786e\u7684parent\u7ed9\u4ed6\n\n\n\n\nCreating and closing spans\n#\n\n\n\u4f7f\u7528Tracer\u63a5\u53e3\u53ef\u4ee5\u624b\u52a8\u65b0\u5efaspans\n\n\n// Start a span. If there was a span present in this thread it will become\n// the `newSpan`'s parent.\nSpan newSpan = this.tracer.createSpan(\"calculateTax\");\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"taxValue\", taxValue);\n    // ...\n    // You can log an event on a span\n    newSpan.logEvent(\"taxCalculated\");\n} finally {\n    // Once done remember to close the span. This will allow collecting\n    // the span to send it to Zipkin\n    this.tracer.close(newSpan);\n}\n\n\n\n\n\u5728\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u65b0\u5efa\u4e00\u4e2aspan\u5b9e\u4f8b\uff0c\u5047\u8bbe\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2aspan\uff0c\u90a3\u4e48\u65b0\u5efa\u7684\u7ebf\u7a0b\u5c06\u4f1a\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u7684parent\u3002\n\n\nIMPORTANT\n\n\n\n\n\u65b0\u5efaspan\u540e\u8981\u8bb0\u5f97\u6e05\u9664\u4ed6\uff01\u5982\u679c\u4f60\u60f3\u8981\u5c06\u4e00\u4e2aspan\u53d1\u9001\u7ed9Zipkin\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5173\u95ed\u4ed6\u3002\n\n\n\n\nContinuing spans\n#\n\n\n\u6709\u65f6\u4f60\u4e0d\u60f3\u8981\u65b0\u5efa\u4e00\u4e2aspan\u4f46\u4f60\u53c8\u60f3\u6301\u7eed\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u4f8b\u5b50\u53ef\u80fd\u5982\u4e0b(\u5f53\u7136\u5b9e\u9645\u4f9d\u8d56\u4e8e\u4f7f\u7528\u60c5\u51b5)\uff1a\n\n\n\n\nAOP\n - \u5982\u679c\u5728\u5b9e\u9645\u5e94\u7528\u524d\u5df2\u7ecf\u6709\u4e00\u4e2aspan\u65b0\u5efa\u53ef\u7528\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u65b0\u5efa\u4e00\u4e2aspan\n\n\nHystrix\n - \u5bf9\u4e8e\u5f53\u524d\u5904\u7406\u6d41\u7a0b\u800c\u8a00\uff0c\u6267\u884cHystrix\u64cd\u4f5c\u662f\u6700\u4e3a\u5408\u7406\u7684\u4e00\u90e8\u5206\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709\u6280\u672f\u5b9e\u73b0\u7ec6\u8282\u7684\u8bdd\uff0c\u4e0d\u5fc5\u5c06\u4ed6\u4f5c\u4e3a\u5206\u79bb\u7684\u90e8\u5206\u53cd\u6620\u5728tracing\u4e2d\n\n\n\n\nspan\u7684\u6301\u7eed\u5b9e\u4f8b\u7b49\u540c\u4e8e\u6b63\u5728\u8fd0\u884c\u7684\uff1a\n\n\nSpan continuedSpan = this.tracer.continueSpan(spanToContinue);\nassertThat(continuedSpan).isEqualTo(spanToContinue);\n\n\n\n\n\u53ef\u4ee5\u4f7f\u7528Tracer\u63a5\u53e3\u5ef6\u7eed\u4e00\u4e2aspan\n\n\n// let's assume that we're in a thread Y and we've received\n// the `initialSpan` from thread X\nSpan continuedSpan = this.tracer.continueSpan(initialSpan);\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"taxValue\", taxValue);\n    // ...\n    // You can log an event on a span\n    continuedSpan.logEvent(\"taxCalculated\");\n} finally {\n    // Once done remember to detach the span. That way you'll\n    // safely remove it from the current thread without closing it\n    this.tracer.detach(continuedSpan);\n}\n\n\n\n\nIMPORTANT\n\n\n\n\n\u65b0\u5efa\u4e00\u4e2aspan\u540e\u8bb0\u5f97\u6e05\u9664\u4ed6\uff01\u5982\u679c\u6709\u4e9b\u5de5\u4f5c\u5728\u4e00\u4e2a\u7ebf\u7a0b(e.g. thread X)\u4e2d\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14\u4ed6\u5728\u7b49\u5f85\u53e6\u5916\u7684\u7ebf\u7a0b(e.g. Y,Z)\u7ed3\u675f\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5206\u79bbspan\uff0c\u5728\u7ebf\u7a0bY,Z\u4e2d\u7684spans\u5728\u4ed6\u4eec\u5de5\u4f5c\u7ed3\u675f\u65f6\u4e5f\u5e94\u88ab\u5206\u79bb\uff0c\u7ed3\u679c\u6536\u96c6\u5b8c\u6210\u65f6thread X\u4e2d\u7684span\u5e94\u8be5\u88ab\u5173\u95ed\n\n\n\n\nCreating spans with an explicit parent\n#\n\n\n\u5982\u679c\u4f60\u60f3\u65b0\u5efa\u4e00\u4e2aspan\u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a\u660e\u786e\u7684parent\u7ed9\u4ed6\uff0c\u5047\u8bbespan\u7684parent\u5728\u4e00\u4e2athread\u4e2d\uff0c\u800c\u4f60\u60f3\u5728\u53e6\u4e00\u4e2athread\u4e2d\u65b0\u5efaspan\uff0cTracer\u63a5\u53e3\u7684startSpan\u547d\u4ee4\u5c31\u662f\u4f60\u9700\u8981\u7684\u3002\n\n\n// let's assume that we're in a thread Y and we've received\n// the `initialSpan` from thread X. `initialSpan` will be the parent\n// of the `newSpan`\nSpan newSpan = this.tracer.createSpan(\"calculateCommission\", initialSpan);\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"commissionValue\", commissionValue);\n    // ...\n    // You can log an event on a span\n    newSpan.logEvent(\"commissionCalculated\");\n} finally {\n    // Once done remember to close the span. This will allow collecting\n    // the span to send it to Zipkin. The tags and events set on the\n    // newSpan will not be present on the parent\n    this.tracer.close(newSpan);\n}\n\n\n\n\nIMPORTANT\n\n\n\n\n\u8bb0\u5f97\u5728\u65b0\u5efa\u8fd9\u6837\u7684span\u540e\u5173\u95ed\u4ed6\uff0c\u5426\u5219\u4f60\u5728\u4f60\u7684log\u4e2d\u770b\u5230\u5927\u91cf\u7684\u76f8\u5173warning\uff0c\u66f4\u7cdf\u7cd5\u7684\u662f\u4f60\u7684span\u4e0d\u4f1a\u6b63\u5e38\u5173\u95ed\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u65e0\u6cd5\u88abZipkin\u6536\u96c6\n\n\n\n\n\n\n\u547d\u540dspans\n#\n\n\n\u4e3aspan\u547d\u540d\u662f\u5f88\u91cd\u8981\u7684\u5de5\u4f5c\uff0cspan\u540d\u79f0\u5fc5\u987b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u64cd\u4f5c\u540d\u79f0\uff0c\u540d\u79f0\u5fc5\u987b\u8981\u7b80\u660e(e.g. \u4e0d\u5305\u62ec\u6807\u8bc6\u7b26)\u3002\n\n\nSince there is a lot of instrumentation going on some of thespan names will be artificial like:\n\n\n\n\ncontroller-method-name when received by a Controller with a methodname conrollerMethodName\n\n\nasync for asynchronous operations done via wrappedCallable and Runnable\n\n\n@Scheduled annotated methods will return the simple nameof the class\n\n\n\n\nFortunately, for the asynchronous processing you can provideexplicit naming\n\n\n@SpanName\u6ce8\u89e3\n#\n\n\n\u53ef\u4ee5\u4f7f\u7528@SpanName\u6ce8\u89e3\u660e\u786e\u547d\u540dspan\n\n\n@SpanName(\"calculateTax\")\nclass TaxCountingRunnable implements Runnable {\n\n    @Override public void run() {\n        // perform logic\n    }\n}\n\n\n\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u4fbf\u547d\u540d\u4e00\u4e2aspan\u4e3acalculateTax\n\n\nRunnable runnable = new TraceRunnable(tracer, spanNamer, new TaxCountingRunnable());\nFuture<?> future = executorService.submit(runnable);\n// ... some additional logic ...\nfuture.get();\n\n\n\n\ntoString()\u65b9\u6cd5\n#\n\n\n\u4e3aRunnable\u6216Callable\u5efa\u7acb\u5206\u79bb\u7684classes\u662f\u975e\u5e38\u5c11\u89c1\u7684\uff0c\u4e00\u822c\u5efa\u7acb\u8fd9\u4e9bclasses\u7684\u533f\u540d\u5b9e\u4f8b\uff0c\u4f60\u4e0d\u80fd\u6ce8\u89e3\u8fd9\u4e9bclasses\u9664\u975eoverride\uff0c\u5982\u679c\u6ca1\u6709@SpanName\u6ce8\u89e3\uff0c\u6211\u4eec\u5c06\u4f1a\u68c0\u67e5class\u662f\u5426\u4f7f\u7528\u4f20\u7edf\u7684toString()\u65b9\u6cd5\u5b9e\u73b0\n\n\n\u6267\u884c\u8fd9\u4e9b\u4ee3\u7801\u5c06\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3acalculateTax\u7684span\uff1a\n\n\nRunnable runnable = new TraceRunnable(tracer, spanNamer, new Runnable() {\n    @Override public void run() {\n        // perform logic\n    }\n\n    @Override public String toString() {\n        return \"calculateTax\";\n    }\n});\nFuture<?> future = executorService.submit(runnable);\n// ... some additional logic ...\nfuture.get();\n\n\n\n\n\n\n\u5b9a\u5236\u5316\n#\n\n\n\u4f7f\u7528\nSpanInjector\n\u548c\nSpanExtractor\n\u4f60\u53ef\u4ee5\u5b9a\u5236\u5316span\u7684\u65b0\u5efa\u548c\u4f20\u64ad\u3002\n\n\n\u5f53\u524d\u6709\u4e24\u79cdbuilt-in\u65b9\u6cd5\u6765\u5728\u8fdb\u7a0b\u95f4\u4f20\u9012tracing\u4fe1\u606f\uff1a\n\n\n\n\n\u901a\u8fc7SpringIntegration\n\n\n\u901a\u8fc7HTTP\n\n\n\n\nspan id\u662f\u4eceZipkin-compatible(B3)\u5934\u4e2d\u63d0\u53d6\u7684(\u4e0d\u8bbaMessage\u6216HTTP\u5934)\uff0c\u4ee5\u6b64\u6765\u5f00\u59cb\u6216\u52a0\u5165\u4e00\u4e2a\u5b58\u5728\u7684trace\uff0ctrace\u4fe1\u606f\u88ab\u6ce8\u5165\u5230\u8f93\u51fa\u8bf7\u6c42\u4e2d\uff0c\u8fd9\u6837\u540e\u9762\u7684\u6b65\u9aa4\u5c31\u53ef\u4ee5\u63d0\u53d6\u4ed6\u3002\n\n\nSpring Integration\n#\n\n\n\u5bf9\u4e8eSpring Integration\uff0c\u5b58\u5728beans\u8d1f\u8d23span\u4eceMessage\u7684\u521b\u5efa\u548c\u4f7f\u7528tracing\u4fe1\u606f\u88c5\u914dMessageBuilder\n\n\n@Bean\npublic SpanExtractor<Message> messagingSpanExtractor() {\n    ...\n}\n\n@Bean\npublic SpanInjector<MessageBuilder> messagingSpanInjector() {\n    ...\n}\n\n\n\n\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5b9e\u73b0\u6765override\u4ed6\uff0c\u6216\u8005\u6dfb\u52a0\n@Primary\n\u6ce8\u89e3\u5230\u4f60\u7684bean\u5b9a\u4e49\n\n\nHTTP\n#\n\n\n\u5bf9\u4e8eHTTP\uff0c\u5b58\u5728beans\u8d1f\u8d23span\u4eceHttpServletRequest\u7684\u521b\u5efa\u548c\u4f7f\u7528tracing\u4fe1\u606f\u88c5\u914dHttpServletResponse\u3002\n\n\n@Bean\npublic SpanExtractor<HttpServletRequest> httpServletRequestSpanExtractor() {\n    ...\n}\n\n@Bean\npublic SpanInjector<HttpServletResponse> httpServletResponseSpanInjector() {\n    ...\n}\n\n\n\n\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5b9e\u73b0\u6765override\u4ed6\uff0c\u6216\u8005\u6dfb\u52a0\n@Primary\n\u6ce8\u89e3\u5230\u4f60\u7684bean\u5b9a\u4e49\n\n\nExample\n#\n\n\n\u5bf9\u6bd4\u4f20\u7edf\u7684\u517c\u5bb9Zipkin\uff0ctracingHTTP\u5934\u540d\u6709\u4ee5\u4e0b\u683c\u5f0f\n\n\n\n\ntraceid - correlationId\n\n\nspanid - mySpanId\n\n\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\nSpanExtractor\n\u7684\u4f8b\u5b50\n\n\nstatic class CustomHttpServletRequestSpanExtractor\n        implements SpanExtractor<HttpServletRequest> {\n\n    @Override\n    public Span joinTrace(HttpServletRequest carrier) {\n        long traceId = Span.hexToId(carrier.getHeader(\"correlationId\"));\n        long spanId = Span.hexToId(carrier.getHeader(\"mySpanId\"));\n        // extract all necessary headers\n        Span.SpanBuilder builder = Span.builder().traceId(traceId).spanId(spanId);\n        // build rest of the Span\n        return builder.build();\n    }\n}\n\n\n\n\n\u4ee5\u4e0b\nSpanInjector\n\u5c06\u88ab\u5efa\u7acb\n\n\nstatic class CustomHttpServletResponseSpanInjector\n        implements SpanInjector<HttpServletResponse> {\n\n    @Override\n    public void inject(Span span, HttpServletResponse carrier) {\n        carrier.addHeader(\"correlationId\", Span.idToHex(span.getTraceId()));\n        carrier.addHeader(\"mySpanId\", Span.idToHex(span.getSpanId()));\n        // inject the rest of Span values to the header\n    }\n}\n\n\n\n\n\u5e76\u4e14\u4f60\u53ef\u4ee5\u8fd9\u6837\u6ce8\u518c\u4ed6\u4eec\n\n\n@Bean\n@Primary\nSpanExtractor<HttpServletRequest> customHttpServletRequestSpanExtractor() {\n    return new CustomHttpServletRequestSpanExtractor();\n}\n\n@Bean\n@Primary\nSpanInjector<HttpServletResponse> customHttpServletResponseSpanInjector() {\n    return new CustomHttpServletResponseSpanInjector();\n}\n\n\n\n\nCustom SA tag in Zipkin\n#\n\n\nSometimes you want to create a manual Span that will wrap a call to an external service which is not instrumented. What you can do is to create a span with the peer.service tag that will contain a value of the service that you want to call. Below you can see an example of a call to Redis that is wrapped in such a span.\n\n\norg.springframework.cloud.sleuth.Span newSpan = tracer.createSpan(\"redis\");\ntry {\n    newSpan.tag(\"redis.op\", \"get\");\n    newSpan.tag(\"lc\", \"redis\");\n    newSpan.logEvent(org.springframework.cloud.sleuth.Span.CLIENT_SEND);\n    // call redis service e.g\n    // return (SomeObj) redisTemplate.opsForHash().get(\"MYHASH\", someObjKey);\n} finally {\n    newSpan.tag(\"peer.service\", \"redisService\");\n    newSpan.tag(\"peer.ipv4\", \"1.2.3.4\");\n    newSpan.tag(\"peer.port\", \"1234\");\n    newSpan.logEvent(org.springframework.cloud.sleuth.Span.CLIENT_RECV);\n    tracer.close(newSpan);\n}\n\n\n\n\n\n\nRemember not to add both peer.service tag and the SA tag! You have to add only peer.service.\n\n\n\n\n\n\nSpring Data as Messages\n#\n\n\n\u53ef\u4ee5\u901a\u8fc7Spring Cloud Stream\u6765\u79ef\u7d2f\u548c\u53d1\u9001span\u6570\u636e\uff0c\u914d\u7f6e\u65f6\u9700\u8981\u5305\u542bspring-cloud-sleuth-streamjar\u4e3a\u4f9d\u8d56\u4e14\u589e\u52a0\u4e00\u4e2aChannel Binder\u5b9e\u73b0\u65b9\u5f0f(e.g. spring-cloud-starter-stream-rabbit\u5bf9\u5e94RabbitMQ\u6216spring-cloud-starter-stream-kafka\u5bf9\u5e94Kafka)\uff0c\u4f7f\u7528payload\u683c\u5f0fSpans\u5c06\u81ea\u52a8\u628a\u4f60\u7684app\u53d8\u4e3a\u4e00\u4e2a\u4fe1\u606f\u751f\u4ea7\u8005\n\n\nZipkin Consumer\n#\n\n\n\u6709\u4e00\u79cd\u7279\u6b8a\u800c\u53c8\u4fbf\u5229\u7684\u6ce8\u89e3\u65b9\u5f0f\uff0c\u5373\u4e3aspan\u6570\u636e\u5efa\u7acb\u4e00\u4e2a\u4fe1\u606f\u6d88\u8d39\u8005\uff0c\u5e76\u5c06\u4ed6\u63a8\u5230\u4e00\u4e2aZipkin SpanStrore\u4e2d\n\n\n@SpringBootApplication\n@EnableZipkinStreamServer\npublic class Consumer {\n    public static void main(String[] args) {\n        SpringApplication.run(Consumer.class, args);\n    }\n}\n\n\n\n\n\u8fd9\u79cd\u5e94\u7528\u5c06\u901a\u8fc7Spring Cloud Stream Binder\u76d1\u542c\u4e0d\u8bba\u4f55\u79cd\u65b9\u5f0f\u4f20\u8f93\u7684span\u6570\u636e(e.g.\u5305\u62ecspring-cloud-starter-stream-rabbit\u5bf9\u5e94RabbitMQ\uff0c\u548c\u5bf9\u5e94Redis\u548cKafka\u7684\u7c7b\u4f3cstarter\u5b58\u5728)\uff0c\u5982\u679c\u6dfb\u52a0\u4ee5\u4e0bUI\u4f9d\u8d56\n\n\n<groupId>io.zipkin.java</groupId>\n<artifactId>zipkin-autoconfigure-ui</artifactId>\n\n\n\n\n\u4f60\u5c06\u542f\u52a8\u4e00\u4e2aZipkin server\u5e94\u7528\uff0c\u4ed6\u5c06\u901a\u8fc7\u7aef\u53e39411\u8bbf\u95eeUI\u548capi\u3002\n\n\n\u9ed8\u8ba4SpanStore\u662fin-memory\u7684(\u9002\u5408\u4e8edemos\u4e14\u542f\u52a8\u8fc5\u901f)\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0MySQL\u548cspring-boot-starter-jdbc\u5230\u4f60\u7684\u7cfb\u7edf\u73af\u5883\u5e76\u901a\u8fc7\u914d\u7f6e\u6fc0\u6d3bJDBC SpanStore\u3002\u4f8b\u5982\uff1a\n\n\nspring:\n  rabbitmq:\n    host: ${RABBIT_HOST:localhost}\n  datasource:\n    schema: classpath:/mysql.sql\n    url: jdbc:mysql://${MYSQL_HOST:localhost}/test\n    username: root\n    password: root\n# Switch this on to create the schema on startup:\n    initialize: true\n    continueOnError: true\n  sleuth:\n    enabled: false\nzipkin:\n  storage:\n    type: mysql\n\n\n\n\n\n\n@EnableZipkinStreamServer\u4e5f\u4f7f\u7528@EnableZipkinServer\u6ce8\u89e3\uff0c\u56e0\u6b64\u8fdb\u7a0b\u4e5f\u4f1a\u663e\u793a\u6807\u51c6Zipkin\u670d\u52a1\u7ec8\u7aef\u4ee5\u901a\u8fc7HTTP\u6536\u96c6span\uff0c\u4e14\u53ef\u4ee5\u901a\u8fc7Zipkin Web UI\u67e5\u8be2\n\n\n\n\nCustom Consumer\n#\n\n\n\u4f7f\u7528spring-cloud-sleuth-stream\u4e14\u7ed1\u5b9aSleuthSink\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u5b9a\u5236\u6d88\u8d39\u8005\u3002\u4f8b\u5b50\uff1a\n\n\n@EnableBinding(SleuthSink.class)\n@SpringBootApplication(exclude = SleuthStreamAutoConfiguration.class)\n@MessageEndpoint\npublic class Consumer {\n\n    @ServiceActivator(inputChannel = SleuthSink.INPUT)\n    public void sink(Spans input) throws Exception {\n        // ... process spans\n    }\n}\n\n\n\n\n\n\n\u4e0a\u8ff0\u7684\u6d88\u8d39\u8005\u5e94\u7528\u660e\u786e\u6392\u9664SleuthStreamAutoConfiguration\uff0c\u56e0\u6b64\u4ed6\u4e0d\u4f1a\u7ed9\u81ea\u5df1\u53d1\u6d88\u606f\uff0c\u4f46\u8fd9\u662f\u53ef\u9009\u7684(\u4f60\u53ef\u80fd\u60f3\u8981trace\u8bf7\u6c42\u5230\u6d88\u8d39\u8005app)\n\n\n\n\n\n\n\u5ea6\u91cf\n#\n\n\n\u5f53\u524dSpring Cloud Sleuth\u8bb0\u5f55\u975e\u5e38\u7b80\u5355\u7684spans metrics\uff0c\u4f7f\u7528Spring Boot\u7684metrics support\u6765\u8ba1\u7b97\u63a5\u6536\u4e22\u5f03\u7684span\u6570\u91cf\uff0c\u5f53\u6709span\u53d1\u9001\u7ed9Zipkin\u65f6\uff0c\u63a5\u6536span\u7684\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\uff0c\u5982\u679c\u6709\u9519\u8bef\u53d1\u751f\uff0c\u4e22\u5f03span\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\u3002\n\n\n\n\nIntegrations\n#\n\n\nRunnable and Callable\n#\n\n\n\u5982\u679c\u4f60\u8981\u5c06\u4f60\u7684\u903b\u8f91\u5305\u88f9\u5728Runable\u6216Callable\u4e2d\uff0c\u8db3\u591f\u5c06\u8fd9\u4e9bclasses\u653e\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868\u4e2d\u3002\n\n\nExample for Runnable:\n\n\nRunnable runnable = new Runnable() {\n    @Override\n    public void run() {\n        // do some work\n    }\n\n    @Override\n    public String toString() {\n        return \"spanNameFromToStringMethod\";\n    }\n};\n// Manual `TraceRunnable` creation with explicit \"calculateTax\" Span name\nRunnable traceRunnable = new TraceRunnable(tracer, spanNamer, runnable, \"calculateTax\");\n// Wrapping `Runnable` with `Tracer`. The Span name will be taken either from the\n// `@SpanName` annotation or from `toString` method\nRunnable traceRunnableFromTracer = tracer.wrap(runnable);\n\n\n\n\nExample for Callable:\n\n\nCallable<String> callable = new Callable<String>() {\n    @Override\n    public String call() throws Exception {\n        return someLogic();\n    }\n\n    @Override\n    public String toString() {\n        return \"spanNameFromToStringMethod\";\n    }\n};\n// Manual `TraceCallable` creation with explicit \"calculateTax\" Span name\nCallable<String> traceCallable = new TraceCallable<>(tracer, spanNamer, callable, \"calculateTax\");\n// Wrapping `Callable` with `Tracer`. The Span name will be taken either from the\n// `@SpanName` annotation or from `toString` method\nCallable<String> traceCallableFromTracer = tracer.wrap(callable);\n\n\n\n\n\u8fd9\u79cd\u65b9\u5f0f\u4f60\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u65b0\u7684Span\u5728\u6bcf\u6b21\u6267\u884c\u65f6\u65b0\u5efa\u548c\u5173\u95ed\u3002\n\n\nHystrix\n#\n\n\n\u4f20\u7edf\u5e76\u53d1\u7b56\u7565\n\n\n\u6211\u4eec\u4ee5\u5c06\u6240\u6709\u7684\nCallable\n\u5b9e\u4f8b\u7f6e\u5165\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868-\nTraceCallable\n\u7684\u65b9\u5f0f\u6765\u8bb0\u5f55\u4e00\u4e2a\u4f20\u7edf\u7684\nHystrixConcurrencyStrategy\n\uff0c\u7b56\u7565\u7684\u6253\u5f00\u6216\u5ef6\u7eed\u4e00\u4e2aspan\u53d6\u51b3\u4e8e\u5728Hystrix\u64cd\u4f5c\u88ab\u8c03\u7528\u524dtracing\u662f\u5426\u5728\u5de5\u4f5c\uff0c\u4e3a\u4e86\u4f7f\u4f20\u7edfHystrix\u5e76\u53d1\u7b56\u7565\u65e0\u6548\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.hystrix.strategy.enable\n\u4e3afalse\u3002\n\n\n\u624b\u52a8\u64cd\u4f5c\u8bbe\u7f6e\n\n\n\u5047\u8bbe\u4f60\u6709\u4ee5\u4e0bHystrixCommand\uff1a\n\n\nHystrixCommand<String> hystrixCommand = new HystrixCommand<String>(setter) {\n    @Override\n    protected String run() throws Exception {\n        return someLogic();\n    }\n};\n\n\n\n\n\u4e3a\u4e86\u4f20\u9012tracing\u4fe1\u606f\u4f60\u5fc5\u987b\u5c06\u540c\u6837\u7684\u903b\u8f91\u7f6e\u4e8e\nHystrixCommand\n\u7684Sleuth\u7248\u672c\u4e2d\uff0c\u4e5f\u5c31\u662f\nTraceCommand\n\uff1a\n\n\nTraceCommand<String> traceCommand = new TraceCommand<String>(tracer, traceKeys, setter) {\n    @Override\n    public String doRun() throws Exception {\n        return someLogic();\n    }\n};\n\n\n\n\nRxJava\n#\n\n\n\u6211\u4eec\u8bb0\u5f55\u4e86\u4e00\u4e2a\u5178\u578b\u7684RxJavaSchedulersHook\uff0c\u4ed6\u5c06\u6240\u6709Action0\u5b9e\u4f8b\u7f6e\u5165\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868-TraceAction\u4e2d\uff0chook\u6253\u5f00\u6216\u5ef6\u7eed\u4e00\u4e2aspan\u53d6\u51b3\u4e8eAction\u88ab\u5b89\u6392\u524dtracing\u662f\u5426\u5df2\u7ecf\u5728\u5de5\u4f5c\uff0c\u4e3a\u4e86\u4f7fRxJavaSchedulersHook\u65e0\u6548\u53ef\u8bbe\u7f6e\nspring.sleuth.rxjava.schedulers.hook.enabled\n\u4e3afalse\u3002\n\n\nYou can define a list of regular expressions for thread names, for which you don\u2019t want a Span to be created. Just provide a comma separated list of regular expressions in the spring.sleuth.rxjava.schedulers.ignoredthreads property.\n\n\nHTTP integration\n#\n\n\n\u5c06\nspring.sleuth.web.enabled\n\u914d\u7f6e\u503c\u8bbe\u7f6e\u4e3afalse\u53ef\u4ee5\u4f7f\u8fd9\u7ae0\u4e2d\u7684\u7279\u5f81\u65b9\u6cd5\u65e0\u6548\n\n\nHTTP Filter\n\n\n\u901a\u8fc7TraceFilter\uff0c\u6240\u6709\u62bd\u6837\u8f93\u5165\u7684\u8bf7\u6c42\u90fd\u4f1a\u5f52\u7ed3\u5230span\u7684\u521b\u5efa\uff0cspan\u7684\u540d\u79f0\u4e3a\"http+\u8bf7\u6c42\u53d1\u9001\u7684\u8def\u5f84\"\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u8bf7\u6c42\u53d1\u9001\u5230/foo/bar\uff0c\u540d\u79f0\u5373\u4e3ahttp:/foo/bar\uff0c\u4f60\u53ef\u4ee5\u914d\u7f6e\u901a\u8fc7\nspring.sleuth.web.skipPattern\n\uff0c\u90a3\u4e9bURIs\u5c06\u88ab\u8fc7\u6ee4\u6389\uff0c\u5982\u679c\u4f60\u5728\u73af\u5883\u4e2d\u6dfb\u52a0\u4e86ManagementServerProperties\uff0c\u4f60\u7684contextPath\u503c\u4f1a\u9644\u52a0\u5230\u8fc7\u6ee4\u914d\u7f6e\u4e0a\u3002\n\n\nHandlerIntercepter\n\n\n\u7531\u4e8e\u9700\u8981span\u540d\u79f0\u7684\u7cbe\u786e\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aTraceHandlerInterceptor\u6765\u7f6e\u5165\u4e00\u4e2a\u5b58\u5728\u7684HandlerInterceptor\u6216\u76f4\u63a5\u6dfb\u52a0\u5230\u5b58\u5728\u7684HandlerInterceptors\u5217\u8868\u4e2d\uff0cTraceHandlerInterceptor\u6dfb\u52a0\u4e00\u4e2a\u7279\u6b8a\u7684\u8bf7\u6c42\u5c5e\u6027\u7ed9HttpServletRequest\uff0c\u5982\u679cTraceFilter\u6ca1\u6709\u770b\u5230\u5c5e\u6027\uff0c\u4ed6\u4f1a\u5efa\u7acb\u4e00\u4e2a\"fallback\"span\uff0c\u8fd9\u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u670d\u52a1\u7aef\u7684\u9644\u52a0\u7684span\uff0c\u6b64\u65f6trace\u5728UI\u4e2d\u53ef\u4ee5\u6b63\u786e\u7684\u663e\u793a\u3002\n\n\nAsync Servlet support\n\n\nIf your controller returns a Callable or a WebAsyncTask Spring Cloud Sleuth will continue the existing span instead of creating a new one.\n\n\nHTTP client integration\n#\n\n\n\u540c\u6b65RestTemplate\n\n\n\u6211\u4eec\u6ce8\u5165\u4e00\u4e2aRestTemplate\u62e6\u622a\u5668\u6765\u4fdd\u8bc1\u6240\u6709\u7684tracing\u4fe1\u606f\u88ab\u53d1\u9001\u5230\u8bf7\u6c42\u7aef\uff0c\u6bcf\u5f53\u4e00\u4e2a\u8bf7\u6c42\u88ab\u751f\u6210\uff0c\u4e00\u4e2a\u65b0\u7684span\u5c06\u88ab\u521b\u5efa\uff0c\u4ed6\u4f1a\u5728\u63a5\u6536\u5e94\u7b54\u540e\u5173\u95ed\uff0c\u4e3a\u4e86\u9650\u5236\u540c\u6b65RestTemplate\u53ea\u9700\u8981\u8bbe\u7f6e\nspring.sleuth.web.client.enabled\n\u4e3afalse\u3002\n\n\n\n\n\u4f60\u5fc5\u987b\u6ce8\u518c\u4e00\u4e2aRestTemplate\u4e3abean\u4ee5\u4f7f\u5f97\u62e6\u622a\u5668\u53ef\u4ee5\u6ce8\u5165\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\u5efa\u7acb\u4e00\u4e2aRestTemplate\u5b9e\u4f8b\uff0cinstrumentation\u5c06\u65e0\u6cd5\u5de5\u4f5c\n\n\n\n\n\u5f02\u6b65RestTemplate\n\n\n\u4f20\u7edf\u7684instrumentation\u662f\u901a\u8fc7\u53d1\u9001\u63a5\u6536\u8bf7\u6c42\u6765\u5efa\u7acb\u5173\u95edspan\u7684\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4f60\u7684bean\u6765\u5b9a\u5236ClientHttpRequestFactory\u548cAsyncClientHttpRequestFactory\uff0c\u8bb0\u5f97\u4f7f\u7528tracing compatible\u5b9e\u73b0\u65b9\u5f0f(e.g. \u4e0d\u8981\u5fd8\u8bb0\u5c06ThreadPoolTaskScheduler\u7f6e\u5165\u4e00\u4e2aTraceAsyncListenableTaskExecutor)\uff0c\u4f20\u7edf\u8bf7\u6c42\u5de5\u5382\u4f8b\u5b50\u5982\u4e0b\uff1a\n\n\n@EnableAutoConfiguration\n@Configuration\npublic static class TestConfiguration {\n\n    @Bean\n    ClientHttpRequestFactory mySyncClientFactory() {\n        return new MySyncClientHttpRequestFactory();\n    }\n\n    @Bean\n    AsyncClientHttpRequestFactory myAsyncClientFactory() {\n        return new MyAsyncClientHttpRequestFactory();\n    }\n}\n\n\n\n\n\u901a\u8fc7\u8bbe\u7f6e\nspring.sleuth.web.async.client.enabled\n\u4e3afalse\u53ef\u4ee5\u9650\u5236\nAsyncRestTemplate\n\uff0c\u4f7f\u9ed8\u8ba4\u7684\nTraceAsyncClientHttpRequestFactoryWrapper\n\u65e0\u6548\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.web.async.client.factory.enabled\n\u4e3afalse\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u521b\u5efa\nAsyncRestClient\n\uff0c\u8bbe\u7f6e\nspring.sleuth.web.async.client.template.enabled\n\u4e3afalse\u3002\n\n\nFeign\n#\n\n\n\u9ed8\u8ba4Spring Cloud Sleuth\u901a\u8fc7\nTraceFeignClientAutoConfiguration\n\u63d0\u4f9bfeign\u7684\u96c6\u6210\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.feign.enabled\n\u4e3afalse\u6765\u4f7f\u4ed6\u65e0\u6548\uff0c\u5982\u679c\u8fd9\u6837\u8bbe\u7f6e\u90a3\u4e48\u6240\u6709feign\u76f8\u5173\u7684\u88c5\u914d\u90fd\u65e0\u6cd5\u53d1\u751f\u3002\n\n\n\u901a\u8fc7FeignBeanPostProcessor feign\u88c5\u914d\u7684\u90e8\u5206\u7ed3\u675f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.feign.processor.enabled\n\u4e3afalse\u6765\u662f\u4ed6\u65e0\u6548\u5316\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u8bbe\u7f6e\uff0cSpring Cloud Sleuth\u5c06\u4e0d\u4f1a\u88c5\u914d\u4efb\u4f55\u4f60\u7684\u4f20\u7edffeign\u7ec4\u4ef6\uff0c\u6240\u6709\u9ed8\u8ba4\u88c5\u914d\u4fdd\u6301\u539f\u6709\u72b6\u6001\u3002\n\n\n\u5f02\u6b65\u901a\u4fe1\n#\n\n\n@Async\u6ce8\u89e3\u65b9\u6cd5\n\n\n\u5728Spring Cloud Sleuth\u4e2d\uff0c\u6211\u4eec\u88c5\u914d\u5f02\u6b65\u5173\u8054\u7ec4\u4ef6\u4ee5\u4f7f\u5f97tracing\u4fe1\u606f\u53ef\u4ee5\u5728threads\u95f4\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\nspring.sleuth.async.enabled\n\u503c\u4e3afalse\u6765\u4f7f\u5176\u65e0\u6548\u5316\u3002\n\u5982\u679c\u4f60\u4f7f\u7528@Async\u6765\u6ce8\u89e3\u4f60\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u81ea\u52a8\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\uff1a\n\n\n\n\nspan\u540d\u79f0\u5c06\u662f\u6ce8\u89e3\u65b9\u6cd5\u540d\n\n\nspan\u5c06\u88ab\u6807\u6ce8\u4e3a\u65b9\u6cd5\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\n\n\n\n\n@Scheduled\u6ce8\u89e3\u65b9\u6cd5\n\n\n\u5728Spring Cloud Sleuth\u4e2d\uff0c\u6211\u4eec\u88c5\u914dscheduled\u6267\u884c\u65b9\u6cd5\u4ee5\u4f7f\u5f97tracing\u4fe1\u606f\u53ef\u4ee5\u5728threads\u95f4\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\nspring.sleuth.scheduled.enabled\n\u503c\u4e3afalse\u6765\u4f7f\u5176\u65e0\u6548\u5316\u3002\n\u5982\u679c\u4f60\u4f7f\u7528\n@Scheduled\n\u6765\u6ce8\u89e3\u4f60\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u81ea\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\uff1a\n\n\n\n\nspan\u540d\u79f0\u5c06\u662f\u6ce8\u89e3\u65b9\u6cd5\u540d\n\n\nspan\u5c06\u88ab\u6807\u6ce8\u4e3a\u65b9\u6cd5\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\n\n\n\n\n\u5982\u679c\u5728\u4e00\u4e9b@Scheduled\u6ce8\u89e3\u7c7b\u4e2d\u4f60\u60f3\u8df3\u8fc7span\u65b0\u5efa\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.scheduled.skipPattern\n\u4e3a\u4e00\u4e2a\u6307\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5c06\u5339\u914d\n@Scheduled\n\u6ce8\u89e3\u7c7b\u7684\u5b8c\u6574\u63cf\u8ff0\u540d\u79f0\u3002\n\n\nExecutor, ExecutorServiceand ScheduledExecutorService\n\n\n\u6211\u4eec\u63d0\u4f9b\u4e86LazyTraceExecutor\uff0cTraceableExecutorService\u548cTraceableScheduledExecutorService\u3002\u6bcf\u5f53\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u88ab\u63d0\u4ea4\u3001\u8c03\u7528\u6216scheduled\u65f6\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u4f1a\u5efa\n\u7acb\u65b0\u7684spans\u3002\n\n\n\u4ee5\u4e0b\u662f\u5f53\u4f7f\u7528CompletableFuture\u65f6\u5982\u4f55\u7528TraceableExecutorService\u4f20\u9012tracing\u4fe1\u606f\uff1a\n\n\nCompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> {\n    // perform some logic\n    return 1_000_000L;\n}, new TraceableExecutorService(executorService,\n        // 'calculateTax' explicitly names the span - this param is optional\n        tracer, traceKeys, spanNamer, \"calculateTax\"));\n\n\n\n\nMessaging\n#\n\n\nSpring Cloud Sleuth\u96c6\u6210\u4e86Spring Integration\u3002\u4ed6\u4f1a\u5efa\u7acbspan\u6765\u53d1\u5e03\u6216\u8ba2\u9605\u4e8b\u4ef6\uff0c\u8bbe\u7f6e\nspring.sleuth.integration.enabled\n\u4e3afalse\u53ef\u4ee5\u4f7fSpring Integration\u65e0\u6548\u3002\n\n\nSpring Cloud Sleuth\u52301.0.4\u7248\u672c\u524d\u90fd\u662f\u4f7f\u7528\u6d88\u606f\u4f20\u9012\u65f6\u53d1\u9001\u65e0\u6548tracing\u5934\uff0c\u8fd9\u4e9b\u5934\u548c\u5728HTTP(\u5305\u542b - )\u53d1\u9001\u7684\u540d\u79f0\u65f6\u4e00\u6837\u7684\uff0c\u4e3a\u4e86\u57281.0.4\u7248\u672c\u7684\u5411\u540e\u517c\u5bb9\u76ee\u7684\uff0c\u6211\u4eec\u5f00\u59cb\u53d1\u9001\u6240\u6709\u6709\u6548\u548c\u65e0\u6548\u7684\u5934\uff0c\u8bf7\u66f4\u65b0\u52301.0.4\uff0c\u56e0\u4e3a\u5728Spring Cloud Sleuth 1.1\u4e2d\u6211\u4eec\u5c06\u4f1a\u79fb\u9664\u5bf9\u5206\u79bb\u5934\u7684\u652f\u6301\u3002\n\n\n\u4ece1.0.4\u540e\u53ef\u4ee5\u660e\u786e\u8bbe\u7f6e\nspring.sleuth.integration.patterns\n\u6a21\u5f0f\u6765\u63d0\u4f9b\u4f60\u60f3\u8981\u5305\u542b\u7684tracing\u4fe1\u9053\u540d\u79f0\uff0c\u9ed8\u8ba4\u6240\u6709\u7684\u4fe1\u9053\u5df2\u88ab\u5305\u542b\u5728\u5185\u3002\n\n\nZuul\n#\n\n\n\u6211\u4eec\u6ce8\u518cZuul\u8fc7\u6ee4\u5668\u6765\u4f20\u64adtracing\u4fe1\u606f(\u8bf7\u6c42\u5934\u4f7f\u7528tracing\u6570\u636e\u586b\u6ee1)\uff0c\u53ef\u4ee5\u8bbe\u7f6e\nspring.sleuth.zuul.enabled\n\u4e3afalse\u6765\u5173\u95edZuul\u670d\u52a1\u3002",
            "title": "Spring Cloud sleuth"
        },
        {
            "location": "/user-guide/sleuth/#spring-cloud-sleuth",
            "text": "SpringCloudSleuth\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7684\u89e3\u51b3\u65b9\u6848\u3002",
            "title": "Spring Cloud Sleuth"
        },
        {
            "location": "/user-guide/sleuth/#_1",
            "text": "SpringCloudSleuth \u501f\u7528\u4e86 Dapper \u7684\u672f\u8bed   Span\uff1a  \u57fa\u672c\u5de5\u4f5c\u5355\u5143\uff0c\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u65b0\u5efa\u7684span\u4e2d\u53d1\u9001\u4e00\u4e2aRPC\u7b49\u540c\u4e8e\u53d1\u9001\u4e00\u4e2a\u56de\u5e94\u8bf7\u6c42\u7ed9RPC\uff0cspan\u901a\u8fc7\u4e00\u4e2a64\u4f4dID\u552f\u4e00\u6807\u8bc6\uff0ctrace\u4ee5\u53e6\u4e00\u4e2a64\u4f4dID\u8868\u793a\uff0cspan\u8fd8\u6709\u5176\u4ed6\u6570\u636e\u4fe1\u606f\uff0c\u6bd4\u5982\u6458\u8981\u3001\u65f6\u95f4\u6233\u4e8b\u4ef6\u3001\u5173\u952e\u503c\u6ce8\u91ca(tags)\u3001span\u7684ID\u3001\u4ee5\u53ca\u8fdb\u5ea6ID(\u901a\u5e38\u662fIP\u5730\u5740)\nspan\u5728\u4e0d\u65ad\u7684\u542f\u52a8\u548c\u505c\u6b62\uff0c\u540c\u65f6\u8bb0\u5f55\u4e86\u65f6\u95f4\u4fe1\u606f\uff0c\u5f53\u4f60\u521b\u5efa\u4e86\u4e00\u4e2aspan\uff0c\u4f60\u5fc5\u987b\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u523b\u505c\u6b62\u5b83\u3002    root span \u7684SpanID\u548cTraneID\u76f8\u7b49\u3002    Trace\uff1a   \u4e00\u7cfb\u5217spans\u7ec4\u6210\u7684\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6b63\u5728\u8dd1\u4e00\u4e2a\u5206\u5e03\u5f0f\u5927\u6570\u636e\u5de5\u7a0b\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u521b\u5efa\u4e00\u4e2atrace\u3002  Annotation\uff1a  \u7528\u6765\u53ca\u65f6\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5b58\u5728\uff0c\u4e00\u4e9b\u6838\u5fc3annotations\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u8bf7\u6c42\u7684\u5f00\u59cb\u548c\u7ed3\u675f  cs\uff1aClient Sent - \u5ba2\u6237\u7aef\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42\uff0c\u8fd9\u4e2aannotion\u63cf\u8ff0\u4e86\u8fd9\u4e2aspan\u7684\u5f00\u59cb  sr\uff1aServer Received - \u670d\u52a1\u7aef\u83b7\u5f97\u8bf7\u6c42\u5e76\u51c6\u5907\u5f00\u59cb\u5904\u7406\u5b83\uff0c\u5982\u679c\u5c06\u5176sr\u51cf\u53bbcs\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u7f51\u7edc\u5ef6\u8fdf  ss\uff1aServer Sent - \u6ce8\u89e3\u8868\u660e\u8bf7\u6c42\u5904\u7406\u7684\u5b8c\u6210(\u5f53\u8bf7\u6c42\u8fd4\u56de\u5ba2\u6237\u7aef)\uff0c\u5982\u679css\u51cf\u53bbsr\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u670d\u52a1\u7aef\u9700\u8981\u7684\u5904\u7406\u8bf7\u6c42\u65f6\u95f4  cr\uff1aClient Received - \u8868\u660espan\u7684\u7ed3\u675f\uff0c\u5ba2\u6237\u7aef\u6210\u529f\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u56de\u590d\uff0c\u5982\u679ccr\u51cf\u53bbcs\u65f6\u95f4\u6233\u4fbf\u53ef\u5f97\u5230\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u56de\u590d\u7684\u6240\u6709\u6240\u9700\u65f6\u95f4     \u5c06Span\u548cTrace\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u4f7f\u7528Zipkin\u6ce8\u89e3\u7684\u8fc7\u7a0b\u56fe\u5f62\u5316\uff1a   \u6bcf\u4e2a\u989c\u8272\u7684\u6ce8\u89e3\u8868\u660e\u4e00\u4e2aspan(\u603b\u8ba17\u4e2aspans\uff0c\u4ece A \u5230 G )\uff0c\u5982\u679c\u5728\u6ce8\u89e3\u4e2d\u6709\u8fd9\u6837\u7684\u4fe1\u606f\uff1a  Trace Id = X\nSpan Id = D\nClient Sent  \u8fd9\u5c31\u8868\u660e\u5f53\u524dspan\u5c06 Trace-Id \u8bbe\u7f6e\u4e3a X \uff0c\u5c06 Span-Id \u8bbe\u7f6e\u4e3a D \uff0c\u540c\u65f6\u5b83\u8fd8\u8868\u660e\u4e86 Client Sent \u4e8b\u4ef6\u3002  spans \u7684parent/child\u5173\u7cfb\u56fe\u5f62\u5316\uff1a",
            "title": "\u672f\u8bed"
        },
        {
            "location": "/user-guide/sleuth/#_2",
            "text": "\u4e0b\u9762\u7ae0\u8282\u7684\u4f8b\u5b50\u662f\u57fa\u4e8e\u4e0a\u56fe\u63cf\u8ff0\u7684\u573a\u666f",
            "title": "\u76ee\u7684"
        },
        {
            "location": "/user-guide/sleuth/#zipkin",
            "text": "\u603b\u8ba110\u4e2aspans\uff0c\u5982\u679c\u5728Zipkin\u4e2d\u67e5\u770btraces\u5c06\u770b\u5230\u5982\u4e0b\u56fe\uff1a   \u4f46\u5982\u679c\u4f60\u9009\u53d6\u4e00\u4e2a\u7279\u6b8a\u7684trace\u4f60\u5c06\u770b\u52307\u4e2aspans\uff1a    \u5f53\u9009\u53d6\u4e00\u4e2a\u7279\u6b8atrace\u65f6\u4f60\u4f1a\u770b\u5230\u5408\u5e76\u7684spans\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4e24\u4e2aspans\u4f7f\u7528\u5ba2\u6237\u7aef\u63a5\u6536\u53d1\u9001/\u670d\u52a1\u7aef\u63a5\u6536\u53d1\u9001\u6ce8\u89e3\u53d1\u9001\u81f3Zipkin\u65f6\uff0c\u4ed6\u4eec\u5c06\u8868\u73b0\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684span   \u5728\u5c55\u793aSpan\u548cTrace\u56fe\u5f62\u5316\u7684\u56fe\u7247\u4e2d\u670920\u4e2a\u989c\u8272\u6807\u7b7e\uff0cZipkin\u53c8\u662f\u5982\u4f55\u63a5\u653610\u4e2aspans\u7684\u5462\uff1f   2\u4e2aspan A\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin  4\u4e2aspan B\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 1\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 2\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76  2\u4e2aspan C\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin  4\u4e2aspan D\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 2\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 3\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76  2\u4e2aspan E\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin  4\u4e2aspan F\u6807\u7b7e\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u67094\u4e2a\u6ce8\u89e3\u7684\u5355\u72ecspan\uff0c\u7136\u800c\u8fd9\u4e2aspan\u662f\u7531\u4e24\u4e2a\u5206\u79bb\u7684\u5b9e\u4f8b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u7531 service 2\u53d1\u51fa\uff0c\u4e00\u4e2a\u7531service 4\u53d1\u51fa\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u4e24\u4e2aspan\u5b9e\u4f8b\u662f\u53d1\u9001\u5230Zipkin\u5e76\u5728\u90a3\u5408\u5e76  2\u4e2aspan G\u6807\u7b7e\u8868\u660espan\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u63a5\u8fd1\u7ed3\u675f\u65f6\u4e00\u4e2a\u5355\u72ec\u7684span\u53d1\u9001\u7ed9Zipkin   \u56e0\u6b641\u4e2aspan\u6765\u81eaA\uff0c2\u4e2aspan\u6765\u81eaB\uff0c1\u4e2aspan\u6765\u81eaC\uff0c2\u4e2aspan\u6765\u81eaD\uff0c1\u4e2aspan\u6765\u81eaE\uff0c2\u4e2aspan\u6765\u81eaF\uff0c1\u4e2a\u6765\u81eaG\uff0c\u603b\u8ba110\u4e2aspans\u3002  Zipkin\u4e2d\u7684\u4f9d\u8d56\u56fe\uff1a",
            "title": "\u57fa\u4e8eZipkin\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a"
        },
        {
            "location": "/user-guide/sleuth/#log",
            "text": "\u5f53\u4f7f\u7528trace id\u4e3a 2485ec27856c56f4 \u6293\u53d6\u8fd9\u56db\u4e2a\u5e94\u7528\u7684log\u65f6\uff0c\u4f1a\u83b7\u5f97\u5982\u4e0b\u8f93\u51fa\uff1a  service1.log:2016-02-26 11:15:47.561  INFO [service1,2485ec27856c56f4,2485ec27856c56f4,true] 68058 --- [nio-8081-exec-1] i.s.c.sleuth.docs.service1.Application   : Hello from service1. Calling service2\nservice2.log:2016-02-26 11:15:47.710  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Hello from service2. Calling service3 and then service4\nservice3.log:2016-02-26 11:15:47.895  INFO [service3,2485ec27856c56f4,1210be13194bfe5,true] 68060 --- [nio-8083-exec-1] i.s.c.sleuth.docs.service3.Application   : Hello from service3\nservice2.log:2016-02-26 11:15:47.924  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Got response from service3 [Hello from service3]\nservice4.log:2016-02-26 11:15:48.134  INFO [service4,2485ec27856c56f4,1b1845262ffba49d,true] 68061 --- [nio-8084-exec-1] i.s.c.sleuth.docs.service4.Application   : Hello from service4\nservice2.log:2016-02-26 11:15:48.156  INFO [service2,2485ec27856c56f4,9aa10ee6fbde75fa,true] 68059 --- [nio-8082-exec-1] i.s.c.sleuth.docs.service2.Application   : Got response from service4 [Hello from service4]\nservice1.log:2016-02-26 11:15:48.182  INFO [service1,2485ec27856c56f4,2485ec27856c56f4,true] 68058 --- [nio-8081-exec-1] i.s.c.sleuth.docs.service1.Application   : Got response from service2 [Hello from service2, response from service3 [Hello from service3] and from service4 [Hello from service4]]  \u5982\u679c\u4f60\u4f7f\u7528log\u96c6\u5408\u5de5\u5177\u4f8b\u5982Kibana\u3001Splunk\u7b49\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e8b\u4ef6\u7684\u53d1\u751f\u4fe1\u606f\uff0cKibana\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a   \u4ee5\u4e0b\u662fLogstash\u7684Grok\u6a21\u5f0f\uff1a  filter {\n       # pattern matching logback pattern\n       grok {\n              match => { \"message\" => \"%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span},%{DATA:exportable}\\]\\s+%{DATA:pid}---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\" }\n       }\n}",
            "title": "Log\u76f8\u5173"
        },
        {
            "location": "/user-guide/sleuth/#json-logback-with-logstash",
            "text": "\u4e3a\u4e86\u65b9\u4fbf\u83b7\u53d6Logstash\uff0c\u901a\u5e38\u4fdd\u5b58log\u5728JSON\u6587\u4ef6\u4e2d\u800c\u4e0d\u662ftext\u6587\u4ef6\u4e2d\uff0c\u914d\u7f6e\u65b9\u6cd5\u5982\u4e0b\uff1a  \u4f9d\u8d56\u5efa\u7acb   \u786e\u4fddLogback\u5728classpath\u4e2d(ch.qos.logback:logback-core)  \u589e\u52a0LogstashLogback\u7f16\u7801 - version 4.6\u7684\u4f8b\u5b50\uff1anet.logstash.logback:logstash-logback-encoder:4.6   Logback\u5efa\u7acb  \u4ee5\u4e0b\u662f\u4e00\u4e2aLogback\u914d\u7f6e\u7684\u4f8b\u5b50(\u6587\u4ef6\u540d\u79f0  logback-spring.xml ) \uff1a   \u4f7f\u7528JSON\u683c\u5f0f\u8bb0\u5f55\u5e94\u7528\u4fe1\u606f\u5230build/${spring.application.name}.json\u6587\u4ef6  \u6709\u4e24\u4e2a\u6dfb\u52a0\u6ce8\u91ca\u6e90- console\u548c\u6807\u51c6log\u6587\u4ef6  \u4e0e\u4e4b\u524d\u7ae0\u8282\u4f7f\u7528\u76f8\u540c\u7684log\u6a21\u5f0f   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n    <include resource=\"org/springframework/boot/logging/logback/defaults.xml\"/>\n    \u200b\n    <springProperty scope=\"context\" name=\"springAppName\" source=\"spring.application.name\"/>\n    <!-- Example for logging into the build folder of your project -->\n    <property name=\"LOG_FILE\" value=\"${BUILD_FOLDER:-build}/${springAppName}\"/>\u200b\n\n    <property name=\"CONSOLE_LOG_PATTERN\"\n              value=\"%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n\n    <!-- Appender to log to console -->\n    <appender name=\"console\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <filter class=\"ch.qos.logback.classic.filter.ThresholdFilter\">\n            <!-- Minimum logging level to be presented in the console logs-->\n            <level>INFO</level>\n        </filter>\n        <encoder>\n            <pattern>${CONSOLE_LOG_PATTERN}</pattern>\n            <charset>utf8</charset>\n        </encoder>\n    </appender>\n\n    <!-- Appender to log to file -->\u200b\n    <appender name=\"flatfile\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_FILE}</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <pattern>${CONSOLE_LOG_PATTERN}</pattern>\n            <charset>utf8</charset>\n        </encoder>\n    </appender>\n    \u200b\n    <!-- Appender to log to file in a JSON format -->\n    <appender name=\"logstash\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <file>${LOG_FILE}.json</file>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>\n            <maxHistory>7</maxHistory>\n        </rollingPolicy>\n        <encoder class=\"net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\">\n            <providers>\n                <timestamp>\n                    <timeZone>UTC</timeZone>\n                </timestamp>\n                <pattern>\n                    <pattern>\n                        {\n                        \"severity\": \"%level\",\n                        \"service\": \"${springAppName:-}\",\n                        \"trace\": \"%X{X-B3-TraceId:-}\",\n                        \"span\": \"%X{X-B3-SpanId:-}\",\n                        \"exportable\": \"%X{X-Span-Export:-}\",\n                        \"pid\": \"${PID:-}\",\n                        \"thread\": \"%thread\",\n                        \"class\": \"%logger{40}\",\n                        \"rest\": \"%message\"\n                        }\n                    </pattern>\n                </pattern>\n            </providers>\n        </encoder>\n    </appender>\n    \u200b\n    <root level=\"INFO\">\n        <!--<appender-ref ref=\"console\"/>-->\n        <appender-ref ref=\"logstash\"/>\n        <!--<appender-ref ref=\"flatfile\"/>-->\n    </root>\n</configuration>   \u4f7f\u7528  logback-spring.xml  \u9700\u8981\u5c06  spring.application.name  \u5728  bootstrap  \u4e2d\u914d\u7f6e\uff0c\u800c\u4e0d\u662f\u914d\u7f6e\u5728  application  \u4e2d\uff0c\u5426\u5219logback\u5ba2\u6237\u7aef\u5c06\u4e0d\u80fd\u8bfb\u53d6\u5230\u914d\u7f6e\u503c\u3002",
            "title": "JSON Logback with Logstash"
        },
        {
            "location": "/user-guide/sleuth/#_3",
            "text": "",
            "title": "\u6dfb\u52a0\u8fdb\u5de5\u7a0b"
        },
        {
            "location": "/user-guide/sleuth/#sleuthlog",
            "text": "\u5982\u679c\u4ec5\u9700\u8981Spring Cloud Sleuth\u800c\u4e0d\u9700\u8981Zipkin\u96c6\u6210\uff0c\u53ea\u9700\u8981\u589e\u52a0 spring-cloud-starter-sleuth \u6a21\u5757\u5230\u4f60\u5de5\u7a0b\u4e2d\uff0cmaven\u65b9\u5f0f\u5982\u4e0b  <dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>   \u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-starter-sleuth",
            "title": "\u4ec5Sleuth(log\u6536\u96c6)"
        },
        {
            "location": "/user-guide/sleuth/#httpzipkinsleuth",
            "text": "\u5982\u679c\u4f60\u9700\u8981Sleuth\u548cZipkin\uff0c\u53ea\u9700\u8981\u6dfb\u52a0 spring-cloud-starter-zipkin \u4f9d\u8d56  <dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-zipkin</artifactId>\n</dependency>   \u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-starter-zipkin",
            "title": "\u901a\u8fc7HTTP\u4f7f\u7528\u57fa\u4e8eZipkin\u7684Sleuth"
        },
        {
            "location": "/user-guide/sleuth/#springcloudstreamsleuthzipkin",
            "text": "<dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-sleuth-stream</artifactId>\n</dependency>\n<dependency> (3)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n<!-- EXAMPLE FOR RABBIT BINDING -->\n<dependency> (4)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-stream-binder-rabbit</artifactId>\n</dependency>   \u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-sleuth-stream  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-starter-sleuth  \u6dfb\u52a0\u4e00\u4e2abinder(e.g.Rabbit binder)\u6765\u544a\u8bc9Spring Cloud Stream\u5e94\u8be5\u7ed1\u5b9a\u4ec0\u4e48",
            "title": "\u901a\u8fc7SpringCloudStream\u4f7f\u7528Sleuth+Zipkin"
        },
        {
            "location": "/user-guide/sleuth/#spring-cloud-sleuth-stream-zipkin-collector",
            "text": "\u542f\u52a8\u4e00\u4e2aSpring Cloud Sleuth Stream Zipkin\u6536\u96c6\u5668\u53ea\u9700\u8981\u6dfb\u52a0 spring-cloud-sleuth-zipkin-stream \u4f9d\u8d56  <dependencyManagement> (1)\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Brixton.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependency> (2)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>\n</dependency>\n<dependency> (3)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-sleuth</artifactId>\n</dependency>\n<!-- EXAMPLE FOR RABBIT BINDING -->\n<dependency> (4)\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-stream-binder-rabbit</artifactId>\n</dependency>   \u4e3a\u4e86\u4e0d\u624b\u52a8\u6dfb\u52a0\u7248\u672c\u53f7\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f\u901a\u8fc7Spring BOM\u6dfb\u52a0dependencymanagement  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-sleuth-zipkin-stream  \u6dfb\u52a0\u4f9d\u8d56\u5230 spring-cloud-starter-sleuth  \u6dfb\u52a0\u4e00\u4e2abinder(e.g.Rabbit binder)\u6765\u544a\u8bc9Spring Cloud Stream\u5e94\u8be5\u7ed1\u5b9a\u4ec0\u4e48   \u4e4b\u540e\u53ea\u9700\u8981\u5728\u4f60\u7684\u4e3b\u7c7b\u4e2d\u6dfb\u52a0@EnableZipkinStreamServer\u6ce8\u89e3  package example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.sleuth.zipkin.stream.EnableZipkinStreamServer;\n\n@SpringBootApplication\n@EnableZipkinStreamServer\npublic class ZipkinStreamServerApplication {\n\n    public static void main(String[] args) throws Exception {\n        SpringApplication.run(ZipkinStreamServerApplication.class, args);\n    }\n\n}",
            "title": "Spring Cloud Sleuth Stream Zipkin Collector"
        },
        {
            "location": "/user-guide/sleuth/#_4",
            "text": "\u6dfb\u52a0trace\u548cspanid\u5230Slf4J MDC\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u7684trace\u6216span\u4e2d\u63d0\u53d6\u6240\u6709\u7684log\uff0c\u4f8b\u5982   2016-02-02 15:30:57.902  INFO [bar,6bfd228dc00d216b,6bfd228dc00d216b,false] 23030 --- [nio-8081-exec-3] ...\n2016-02-02 15:30:58.372 ERROR [bar,6bfd228dc00d216b,6bfd228dc00d216b,false] 23030 --- [nio-8081-exec-3] ...\n2016-02-02 15:31:01.936  INFO [bar,46ab0d418373cbc9,46ab0d418373cbc9,false] 23030 --- [nio-8081-exec-4] ...  \u6ce8\u610fMDC\u4e2d\u7684 [appname,traceId,spanId,exportable] \uff1a     spanId - the id of a specific operation that took place  appname - the name of the application that logged the span  traceId - the id of the latency graph that contains the span  exportable - whether the log should be exported to Zipkin or not. When would you like the span not to be exportable? In the case in which you want to wrap some operation in a Span and have it written to the logs only.     \u5728\u901a\u5e38\u7684\u5206\u5e03\u5f0f\u8ffd\u8e2a\u6570\u636e\u6a21\u578b\u4e0a\u63d0\u4f9b\u4e00\u79cd\u62bd\u8c61\u6a21\u578b\uff1atraces\u3001spans(\u751f\u6210\u4e00\u4e2aDAG)\u3001annotations\u3001key-value annotations\u3002\u57fa\u4e8eHTrace\u662f\u8f83\u4e3a\u5bbd\u677e\u7684\uff0c\u4f46Zipkin(Dapper)\u66f4\u5177\u517c\u5bb9\u6027   Sleuth\u8bb0\u5f55\u65f6\u95f4\u4fe1\u606f\u6765\u5e2e\u52a9\u5ef6\u8fdf\u5206\u6790\uff0c\u4f7f\u7528Sleuth\u53ef\u4ee5\u7cbe\u786e\u627e\u5230\u5e94\u7528\u4e2d\u5ef6\u8fdf\u7684\u539f\u56e0\uff0cSleuth\u4e0d\u4f1alog\u592a\u591a\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5bfc\u81f4\u4f60\u7684\u5e94\u7528\u6302\u6389  propagatesstructural data about your call-graph in-band, and the rest out-of-band  includesopinionated instrumentation of layers such as HTTP  includessampling policy to manage volume  canreport to a Zipkin system for query and visualization    \u4f7f\u7528Spring\u5e94\u7528\u88c5\u5907\u51fa\u5165\u53e3\u70b9(servletfilter\u3001async endpoints\u3001rest template\u3001scheduled actions\u3001messagechannels\u3001zuul filters\u3001feign client)  Sleuth\u5305\u542b\u9ed8\u8ba4\u903b\u8f91\u901a\u8fc7http\u6216messaging boundaries\u6765\u52a0\u5165\u4e00\u4e2atrace\uff0c\u4f8b\u5982\uff0chttp\u4f20\u64ad\u901a\u8fc7Zipkin-compatiblerequest headers\u5de5\u4f5c\uff0c\u8fd9\u4e2a\u4f20\u64ad\u903b\u8f91\u5b9a\u4e49\u548c\u5b9a\u5236\u662f\u901a\u8fc7SpanInjector\u548cSpanExtractor  \u5b9e\u73b0\u63d0\u4f9b\u7b80\u5355\u7684\u63a5\u53d7\u6216\u653e\u5f03span  If spring-cloud-sleuth-zipkin then the app will generate and collect Zipkin-compatible traces. By default it sends them via HTTP to a Zipkin server on localhost (port 9411). Configure the location of the service using spring.zipkin.baseUrl.  If spring-cloud-sleuth-stream then the app will generate and collect traces via Spring Cloud Stream. Your app automatically becomes a producer of tracer messages that are sent over your broker of choice (e.g. RabbitMQ, Apache Kafka, Redis).   IMPORTANT   If using Zipkin or Stream, configure the percentage of spans exported using spring.sleuth.sampler.percentage (default 0.1, i.e. 10%). Otherwise you might think that Sleuth is not working cause it\u2019s omitting some spans.   NOTE   the SLF4J MDC is always set and logback users will immediately see the trace and span ids in logs per the example above. Other logging systems have to configure their own formatter to get the same result. The default is logging.pattern.level set to %clr(%5p) %clr([${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} (this is a Spring Boot feature for logback users). This means that if you\u2019re not using SLF4J this pattern WILL NOT be automatically applied.",
            "title": "\u7279\u6027"
        },
        {
            "location": "/user-guide/sleuth/#_5",
            "text": "\u5728\u5206\u5e03\u5f0f\u8ffd\u8e2a\u65f6\uff0c\u6570\u636e\u91cf\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u56e0\u6b64\u62bd\u6837\u5c31\u53d8\u5f97\u975e\u5e38\u91cd\u8981(\u901a\u5e38\u4e0d\u9700\u8981\u5bfc\u51fa\u6240\u6709\u7684spans\u4ee5\u5f97\u5230\u4e8b\u4ef6\u53d1\u751f\u539f\u8c8c)\uff0cSpring Cloud Sleuth\u6709\u4e00\u4e2a Sampler \u6218\u7565\uff0c\u5373\u7528\u6237\u53ef\u4ee5\u63a7\u5236\u62bd\u6837\u7b97\u6cd5\uff0cSamplers\u4e0d\u4f1a\u505c\u6b62\u6b63\u5728\u751f\u6210\u7684span id(\u76f8\u5173\u7684)\uff0c\u4f46\u4ed6\u4eec\u4f1a\u963b\u6b62tags\u548cevents\u9644\u52a0\u548c\u8f93\u51fa\uff0c\u9ed8\u8ba4\u6218\u7565\u662f\u5f53\u4e00\u4e2aspan\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\u4f1a\u7ee7\u7eedtrace\uff0c\u4f46\u65b0\u7684span\u4f1a\u4e00\u76f4\u5904\u4e8e\u4e0d\u8f93\u51fa\u72b6\u6001\uff0c\u5982\u679c\u6240\u6709\u5e94\u7528\u90fd\u4f7f\u7528\u8fd9\u4e2asampler\uff0c\u4f60\u4f1a\u5728logs\u4e2d\u770b\u5230traces\uff0c\u4f46\u4e0d\u4f1a\u51fa\u73b0\u5728\u4efb\u4f55\u8fdc\u7a0b\u4ed3\u5e93\u3002\u6d4b\u8bd5\u72b6\u6001\u8d44\u6e90\u90fd\u662f\u5145\u8db3\u7684\uff0c\u5e76\u4e14\u4f60\u53ea\u4f7f\u7528logs\u7684\u8bdd\u4ed6\u5c31\u662f\u4f60\u9700\u8981\u7684\u5168\u90e8(e.g. \u4e00\u4e2aELK\u96c6\u5408)\uff0c\u5982\u679c\u8f93\u51faspan\u6570\u636e\u5230Zipkin\u6216Spring Cloud Stream\uff0c\u6709 AlwaysSampler \u8f93\u51fa\u6240\u6709\u6570\u636e\u548c PercentageBasedSampler \u91c7\u6837spans\u786e\u5b9a\u7684\u4e00\u90e8\u5206\u3002   \u5982\u679c\u4f7f\u7528spring-cloud-sleuth-zipkin\u6216spring-cloud-sleuth-stream\uff0cPercentageBasedSampler\u662f\u9ed8\u8ba4\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528spring.sleuth.sampler.percentage\u914d\u7f6e\u8f93\u51fa   \u901a\u8fc7\u521b\u5efa\u4e00\u4e2abean\u5b9a\u4e49\u5c31\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2asampler  @Bean\npublic Sampler defaultSampler() {\n    return new AlwaysSampler();\n}",
            "title": "\u62bd\u6837"
        },
        {
            "location": "/user-guide/sleuth/#instrumentation",
            "text": "Spring Cloud Sleuth\u81ea\u52a8\u88c5\u914d\u6240\u6709Spring\u5e94\u7528\uff0c\u56e0\u6b64\u4f60\u4e0d\u7528\u505a\u4efb\u4f55\u4e8b\u6765\u8ba9\u4ed6\u5de5\u4f5c\uff0c\u88c5\u914d\u662f\u4f7f\u7528\u4e00\u7cfb\u5217\u6280\u672f\u6dfb\u52a0\u7684\uff0c\u4f8b\u5982\u5bf9\u4e8e\u4e00\u4e2aservlet web\u5e94\u7528\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aFilter\uff0c\u5bf9\u4e8eSpringIntegration\u6211\u4eec\u4f7f\u7528 ChannelInterceptors \u3002  \u7528\u6237\u53ef\u4ee5\u4f7f\u7528span tags\u5b9a\u5236\u5173\u952e\u5b57\uff0c\u4e3a\u4e86\u9650\u5236span\u6570\u636e\u91cf\uff0c\u4e00\u822c\u4e00\u4e2aHTTP\u8bf7\u6c42\u53ea\u4f1a\u88ab\u5c11\u6570\u5143\u6570\u636e\u6807\u8bb0\uff0c\u4f8b\u5982status code\u3001host\u4ee5\u53caURL\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e spring.sleuth.keys.http.headers (\u4e00\u7cfb\u5217\u5934\u540d\u79f0)\u6dfb\u52a0request headers\u3002   tags\u4ec5\u5728Sampler\u5141\u8bb8\u5176\u88ab\u6536\u96c6\u548c\u8f93\u51fa\u65f6\u5de5\u4f5c(\u9ed8\u8ba4\u60c5\u51b5\u5176\u4e0d\u5de5\u4f5c\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6709\u5728\u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u6536\u96c6\u8fc7\u591a\u6570\u636e\u7684\u610f\u5916\u5371\u9669\u51fa\u73b0)  Currently the instrumentation in Spring Cloud Sleuth is eager - it means that we\u2019re actively trying to pass the tracing context between threads. Also timing events are captured even when sleuth isn\u2019t exporting data to a tracing system. This approach may change in the future towards being lazy on this matter.",
            "title": "Instrumentation"
        },
        {
            "location": "/user-guide/sleuth/#span",
            "text": "\u901a\u8fc7Trace\u63a5\u53e3\u7684\u65b9\u5f0f\u53ef\u4ee5\u5728Span\u4e0a\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a   start - \u5f53\u6253\u5f00\u4e00\u4e2aspan\u65f6\uff0c\u5176\u540d\u5b57\u88ab\u6307\u5b9a\u4e14\u5f00\u59cb\u65f6\u95f4\u6233\u88ab\u8bb0\u5f55  close - span\u5df2\u7ecf\u7ed3\u675f(span\u7684\u7ed3\u675f\u65f6\u95f4\u5df2\u88ab\u8bb0\u5f55)\u5e76\u4e14\u5982\u679cspan\u662f\u8f93\u51fa\u7684\uff0c\u4ed6\u5c06\u662fZipkin\u5408\u9002\u7684\u6536\u96c6\u9879\uff0cspan\u5728\u5f53\u524d\u7ebf\u7a0b\u4e5f\u5c06\u88ab\u79fb\u9664  continue - span\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u5c06\u88ab\u521b\u5efa\uff0c\u7136\u800c\u4ed6\u5c06\u662f\u6b63\u662f\u6b63\u5728\u8fd0\u884c\u7684span\u7684\u4e00\u4e2a\u590d\u5236\u4f53  detach - span\u4e0d\u4f1a\u505c\u6b62\u6216\u5173\u95ed\uff0c\u4ed6\u53ea\u4f1a\u88ab\u4ece\u5f53\u524d\u7ebf\u7a0b\u4e2d\u79fb\u9664  create with explicit parent - \u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u660e\u786e\u7684parent\u7ed9\u4ed6",
            "title": "Span\u751f\u547d\u5468\u671f"
        },
        {
            "location": "/user-guide/sleuth/#creating-and-closing-spans",
            "text": "\u4f7f\u7528Tracer\u63a5\u53e3\u53ef\u4ee5\u624b\u52a8\u65b0\u5efaspans  // Start a span. If there was a span present in this thread it will become\n// the `newSpan`'s parent.\nSpan newSpan = this.tracer.createSpan(\"calculateTax\");\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"taxValue\", taxValue);\n    // ...\n    // You can log an event on a span\n    newSpan.logEvent(\"taxCalculated\");\n} finally {\n    // Once done remember to close the span. This will allow collecting\n    // the span to send it to Zipkin\n    this.tracer.close(newSpan);\n}  \u5728\u4f8b\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5982\u4f55\u65b0\u5efa\u4e00\u4e2aspan\u5b9e\u4f8b\uff0c\u5047\u8bbe\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2aspan\uff0c\u90a3\u4e48\u65b0\u5efa\u7684\u7ebf\u7a0b\u5c06\u4f1a\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u7684parent\u3002  IMPORTANT   \u65b0\u5efaspan\u540e\u8981\u8bb0\u5f97\u6e05\u9664\u4ed6\uff01\u5982\u679c\u4f60\u60f3\u8981\u5c06\u4e00\u4e2aspan\u53d1\u9001\u7ed9Zipkin\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5173\u95ed\u4ed6\u3002",
            "title": "Creating and closing spans"
        },
        {
            "location": "/user-guide/sleuth/#continuing-spans",
            "text": "\u6709\u65f6\u4f60\u4e0d\u60f3\u8981\u65b0\u5efa\u4e00\u4e2aspan\u4f46\u4f60\u53c8\u60f3\u6301\u7eed\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u4f8b\u5b50\u53ef\u80fd\u5982\u4e0b(\u5f53\u7136\u5b9e\u9645\u4f9d\u8d56\u4e8e\u4f7f\u7528\u60c5\u51b5)\uff1a   AOP  - \u5982\u679c\u5728\u5b9e\u9645\u5e94\u7528\u524d\u5df2\u7ecf\u6709\u4e00\u4e2aspan\u65b0\u5efa\u53ef\u7528\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u65b0\u5efa\u4e00\u4e2aspan  Hystrix  - \u5bf9\u4e8e\u5f53\u524d\u5904\u7406\u6d41\u7a0b\u800c\u8a00\uff0c\u6267\u884cHystrix\u64cd\u4f5c\u662f\u6700\u4e3a\u5408\u7406\u7684\u4e00\u90e8\u5206\uff0c\u5b9e\u9645\u4e0a\u53ea\u6709\u6280\u672f\u5b9e\u73b0\u7ec6\u8282\u7684\u8bdd\uff0c\u4e0d\u5fc5\u5c06\u4ed6\u4f5c\u4e3a\u5206\u79bb\u7684\u90e8\u5206\u53cd\u6620\u5728tracing\u4e2d   span\u7684\u6301\u7eed\u5b9e\u4f8b\u7b49\u540c\u4e8e\u6b63\u5728\u8fd0\u884c\u7684\uff1a  Span continuedSpan = this.tracer.continueSpan(spanToContinue);\nassertThat(continuedSpan).isEqualTo(spanToContinue);  \u53ef\u4ee5\u4f7f\u7528Tracer\u63a5\u53e3\u5ef6\u7eed\u4e00\u4e2aspan  // let's assume that we're in a thread Y and we've received\n// the `initialSpan` from thread X\nSpan continuedSpan = this.tracer.continueSpan(initialSpan);\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"taxValue\", taxValue);\n    // ...\n    // You can log an event on a span\n    continuedSpan.logEvent(\"taxCalculated\");\n} finally {\n    // Once done remember to detach the span. That way you'll\n    // safely remove it from the current thread without closing it\n    this.tracer.detach(continuedSpan);\n}  IMPORTANT   \u65b0\u5efa\u4e00\u4e2aspan\u540e\u8bb0\u5f97\u6e05\u9664\u4ed6\uff01\u5982\u679c\u6709\u4e9b\u5de5\u4f5c\u5728\u4e00\u4e2a\u7ebf\u7a0b(e.g. thread X)\u4e2d\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14\u4ed6\u5728\u7b49\u5f85\u53e6\u5916\u7684\u7ebf\u7a0b(e.g. Y,Z)\u7ed3\u675f\u65f6\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5206\u79bbspan\uff0c\u5728\u7ebf\u7a0bY,Z\u4e2d\u7684spans\u5728\u4ed6\u4eec\u5de5\u4f5c\u7ed3\u675f\u65f6\u4e5f\u5e94\u88ab\u5206\u79bb\uff0c\u7ed3\u679c\u6536\u96c6\u5b8c\u6210\u65f6thread X\u4e2d\u7684span\u5e94\u8be5\u88ab\u5173\u95ed",
            "title": "Continuing spans"
        },
        {
            "location": "/user-guide/sleuth/#creating-spans-with-an-explicit-parent",
            "text": "\u5982\u679c\u4f60\u60f3\u65b0\u5efa\u4e00\u4e2aspan\u5e76\u4e14\u63d0\u4f9b\u4e00\u4e2a\u660e\u786e\u7684parent\u7ed9\u4ed6\uff0c\u5047\u8bbespan\u7684parent\u5728\u4e00\u4e2athread\u4e2d\uff0c\u800c\u4f60\u60f3\u5728\u53e6\u4e00\u4e2athread\u4e2d\u65b0\u5efaspan\uff0cTracer\u63a5\u53e3\u7684startSpan\u547d\u4ee4\u5c31\u662f\u4f60\u9700\u8981\u7684\u3002  // let's assume that we're in a thread Y and we've received\n// the `initialSpan` from thread X. `initialSpan` will be the parent\n// of the `newSpan`\nSpan newSpan = this.tracer.createSpan(\"calculateCommission\", initialSpan);\ntry {\n    // ...\n    // You can tag a span\n    this.tracer.addTag(\"commissionValue\", commissionValue);\n    // ...\n    // You can log an event on a span\n    newSpan.logEvent(\"commissionCalculated\");\n} finally {\n    // Once done remember to close the span. This will allow collecting\n    // the span to send it to Zipkin. The tags and events set on the\n    // newSpan will not be present on the parent\n    this.tracer.close(newSpan);\n}  IMPORTANT   \u8bb0\u5f97\u5728\u65b0\u5efa\u8fd9\u6837\u7684span\u540e\u5173\u95ed\u4ed6\uff0c\u5426\u5219\u4f60\u5728\u4f60\u7684log\u4e2d\u770b\u5230\u5927\u91cf\u7684\u76f8\u5173warning\uff0c\u66f4\u7cdf\u7cd5\u7684\u662f\u4f60\u7684span\u4e0d\u4f1a\u6b63\u5e38\u5173\u95ed\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u65e0\u6cd5\u88abZipkin\u6536\u96c6",
            "title": "Creating spans with an explicit parent"
        },
        {
            "location": "/user-guide/sleuth/#spans",
            "text": "\u4e3aspan\u547d\u540d\u662f\u5f88\u91cd\u8981\u7684\u5de5\u4f5c\uff0cspan\u540d\u79f0\u5fc5\u987b\u63cf\u8ff0\u4e86\u4e00\u4e2a\u64cd\u4f5c\u540d\u79f0\uff0c\u540d\u79f0\u5fc5\u987b\u8981\u7b80\u660e(e.g. \u4e0d\u5305\u62ec\u6807\u8bc6\u7b26)\u3002  Since there is a lot of instrumentation going on some of thespan names will be artificial like:   controller-method-name when received by a Controller with a methodname conrollerMethodName  async for asynchronous operations done via wrappedCallable and Runnable  @Scheduled annotated methods will return the simple nameof the class   Fortunately, for the asynchronous processing you can provideexplicit naming",
            "title": "\u547d\u540dspans"
        },
        {
            "location": "/user-guide/sleuth/#spanname",
            "text": "\u53ef\u4ee5\u4f7f\u7528@SpanName\u6ce8\u89e3\u660e\u786e\u547d\u540dspan  @SpanName(\"calculateTax\")\nclass TaxCountingRunnable implements Runnable {\n\n    @Override public void run() {\n        // perform logic\n    }\n}  \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u4fbf\u547d\u540d\u4e00\u4e2aspan\u4e3acalculateTax  Runnable runnable = new TraceRunnable(tracer, spanNamer, new TaxCountingRunnable());\nFuture<?> future = executorService.submit(runnable);\n// ... some additional logic ...\nfuture.get();",
            "title": "@SpanName\u6ce8\u89e3"
        },
        {
            "location": "/user-guide/sleuth/#tostring",
            "text": "\u4e3aRunnable\u6216Callable\u5efa\u7acb\u5206\u79bb\u7684classes\u662f\u975e\u5e38\u5c11\u89c1\u7684\uff0c\u4e00\u822c\u5efa\u7acb\u8fd9\u4e9bclasses\u7684\u533f\u540d\u5b9e\u4f8b\uff0c\u4f60\u4e0d\u80fd\u6ce8\u89e3\u8fd9\u4e9bclasses\u9664\u975eoverride\uff0c\u5982\u679c\u6ca1\u6709@SpanName\u6ce8\u89e3\uff0c\u6211\u4eec\u5c06\u4f1a\u68c0\u67e5class\u662f\u5426\u4f7f\u7528\u4f20\u7edf\u7684toString()\u65b9\u6cd5\u5b9e\u73b0  \u6267\u884c\u8fd9\u4e9b\u4ee3\u7801\u5c06\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3acalculateTax\u7684span\uff1a  Runnable runnable = new TraceRunnable(tracer, spanNamer, new Runnable() {\n    @Override public void run() {\n        // perform logic\n    }\n\n    @Override public String toString() {\n        return \"calculateTax\";\n    }\n});\nFuture<?> future = executorService.submit(runnable);\n// ... some additional logic ...\nfuture.get();",
            "title": "toString()\u65b9\u6cd5"
        },
        {
            "location": "/user-guide/sleuth/#_6",
            "text": "\u4f7f\u7528 SpanInjector \u548c SpanExtractor \u4f60\u53ef\u4ee5\u5b9a\u5236\u5316span\u7684\u65b0\u5efa\u548c\u4f20\u64ad\u3002  \u5f53\u524d\u6709\u4e24\u79cdbuilt-in\u65b9\u6cd5\u6765\u5728\u8fdb\u7a0b\u95f4\u4f20\u9012tracing\u4fe1\u606f\uff1a   \u901a\u8fc7SpringIntegration  \u901a\u8fc7HTTP   span id\u662f\u4eceZipkin-compatible(B3)\u5934\u4e2d\u63d0\u53d6\u7684(\u4e0d\u8bbaMessage\u6216HTTP\u5934)\uff0c\u4ee5\u6b64\u6765\u5f00\u59cb\u6216\u52a0\u5165\u4e00\u4e2a\u5b58\u5728\u7684trace\uff0ctrace\u4fe1\u606f\u88ab\u6ce8\u5165\u5230\u8f93\u51fa\u8bf7\u6c42\u4e2d\uff0c\u8fd9\u6837\u540e\u9762\u7684\u6b65\u9aa4\u5c31\u53ef\u4ee5\u63d0\u53d6\u4ed6\u3002",
            "title": "\u5b9a\u5236\u5316"
        },
        {
            "location": "/user-guide/sleuth/#spring-integration",
            "text": "\u5bf9\u4e8eSpring Integration\uff0c\u5b58\u5728beans\u8d1f\u8d23span\u4eceMessage\u7684\u521b\u5efa\u548c\u4f7f\u7528tracing\u4fe1\u606f\u88c5\u914dMessageBuilder  @Bean\npublic SpanExtractor<Message> messagingSpanExtractor() {\n    ...\n}\n\n@Bean\npublic SpanInjector<MessageBuilder> messagingSpanInjector() {\n    ...\n}  \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5b9e\u73b0\u6765override\u4ed6\uff0c\u6216\u8005\u6dfb\u52a0 @Primary \u6ce8\u89e3\u5230\u4f60\u7684bean\u5b9a\u4e49",
            "title": "Spring Integration"
        },
        {
            "location": "/user-guide/sleuth/#http",
            "text": "\u5bf9\u4e8eHTTP\uff0c\u5b58\u5728beans\u8d1f\u8d23span\u4eceHttpServletRequest\u7684\u521b\u5efa\u548c\u4f7f\u7528tracing\u4fe1\u606f\u88c5\u914dHttpServletResponse\u3002  @Bean\npublic SpanExtractor<HttpServletRequest> httpServletRequestSpanExtractor() {\n    ...\n}\n\n@Bean\npublic SpanInjector<HttpServletResponse> httpServletResponseSpanInjector() {\n    ...\n}  \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5b9e\u73b0\u6765override\u4ed6\uff0c\u6216\u8005\u6dfb\u52a0 @Primary \u6ce8\u89e3\u5230\u4f60\u7684bean\u5b9a\u4e49",
            "title": "HTTP"
        },
        {
            "location": "/user-guide/sleuth/#example",
            "text": "\u5bf9\u6bd4\u4f20\u7edf\u7684\u517c\u5bb9Zipkin\uff0ctracingHTTP\u5934\u540d\u6709\u4ee5\u4e0b\u683c\u5f0f   traceid - correlationId  spanid - mySpanId   \u4ee5\u4e0b\u662f\u4e00\u4e2a SpanExtractor \u7684\u4f8b\u5b50  static class CustomHttpServletRequestSpanExtractor\n        implements SpanExtractor<HttpServletRequest> {\n\n    @Override\n    public Span joinTrace(HttpServletRequest carrier) {\n        long traceId = Span.hexToId(carrier.getHeader(\"correlationId\"));\n        long spanId = Span.hexToId(carrier.getHeader(\"mySpanId\"));\n        // extract all necessary headers\n        Span.SpanBuilder builder = Span.builder().traceId(traceId).spanId(spanId);\n        // build rest of the Span\n        return builder.build();\n    }\n}  \u4ee5\u4e0b SpanInjector \u5c06\u88ab\u5efa\u7acb  static class CustomHttpServletResponseSpanInjector\n        implements SpanInjector<HttpServletResponse> {\n\n    @Override\n    public void inject(Span span, HttpServletResponse carrier) {\n        carrier.addHeader(\"correlationId\", Span.idToHex(span.getTraceId()));\n        carrier.addHeader(\"mySpanId\", Span.idToHex(span.getSpanId()));\n        // inject the rest of Span values to the header\n    }\n}  \u5e76\u4e14\u4f60\u53ef\u4ee5\u8fd9\u6837\u6ce8\u518c\u4ed6\u4eec  @Bean\n@Primary\nSpanExtractor<HttpServletRequest> customHttpServletRequestSpanExtractor() {\n    return new CustomHttpServletRequestSpanExtractor();\n}\n\n@Bean\n@Primary\nSpanInjector<HttpServletResponse> customHttpServletResponseSpanInjector() {\n    return new CustomHttpServletResponseSpanInjector();\n}",
            "title": "Example"
        },
        {
            "location": "/user-guide/sleuth/#custom-sa-tag-in-zipkin",
            "text": "Sometimes you want to create a manual Span that will wrap a call to an external service which is not instrumented. What you can do is to create a span with the peer.service tag that will contain a value of the service that you want to call. Below you can see an example of a call to Redis that is wrapped in such a span.  org.springframework.cloud.sleuth.Span newSpan = tracer.createSpan(\"redis\");\ntry {\n    newSpan.tag(\"redis.op\", \"get\");\n    newSpan.tag(\"lc\", \"redis\");\n    newSpan.logEvent(org.springframework.cloud.sleuth.Span.CLIENT_SEND);\n    // call redis service e.g\n    // return (SomeObj) redisTemplate.opsForHash().get(\"MYHASH\", someObjKey);\n} finally {\n    newSpan.tag(\"peer.service\", \"redisService\");\n    newSpan.tag(\"peer.ipv4\", \"1.2.3.4\");\n    newSpan.tag(\"peer.port\", \"1234\");\n    newSpan.logEvent(org.springframework.cloud.sleuth.Span.CLIENT_RECV);\n    tracer.close(newSpan);\n}   Remember not to add both peer.service tag and the SA tag! You have to add only peer.service.",
            "title": "Custom SA tag in Zipkin"
        },
        {
            "location": "/user-guide/sleuth/#spring-data-as-messages",
            "text": "\u53ef\u4ee5\u901a\u8fc7Spring Cloud Stream\u6765\u79ef\u7d2f\u548c\u53d1\u9001span\u6570\u636e\uff0c\u914d\u7f6e\u65f6\u9700\u8981\u5305\u542bspring-cloud-sleuth-streamjar\u4e3a\u4f9d\u8d56\u4e14\u589e\u52a0\u4e00\u4e2aChannel Binder\u5b9e\u73b0\u65b9\u5f0f(e.g. spring-cloud-starter-stream-rabbit\u5bf9\u5e94RabbitMQ\u6216spring-cloud-starter-stream-kafka\u5bf9\u5e94Kafka)\uff0c\u4f7f\u7528payload\u683c\u5f0fSpans\u5c06\u81ea\u52a8\u628a\u4f60\u7684app\u53d8\u4e3a\u4e00\u4e2a\u4fe1\u606f\u751f\u4ea7\u8005",
            "title": "Spring Data as Messages"
        },
        {
            "location": "/user-guide/sleuth/#zipkin-consumer",
            "text": "\u6709\u4e00\u79cd\u7279\u6b8a\u800c\u53c8\u4fbf\u5229\u7684\u6ce8\u89e3\u65b9\u5f0f\uff0c\u5373\u4e3aspan\u6570\u636e\u5efa\u7acb\u4e00\u4e2a\u4fe1\u606f\u6d88\u8d39\u8005\uff0c\u5e76\u5c06\u4ed6\u63a8\u5230\u4e00\u4e2aZipkin SpanStrore\u4e2d  @SpringBootApplication\n@EnableZipkinStreamServer\npublic class Consumer {\n    public static void main(String[] args) {\n        SpringApplication.run(Consumer.class, args);\n    }\n}  \u8fd9\u79cd\u5e94\u7528\u5c06\u901a\u8fc7Spring Cloud Stream Binder\u76d1\u542c\u4e0d\u8bba\u4f55\u79cd\u65b9\u5f0f\u4f20\u8f93\u7684span\u6570\u636e(e.g.\u5305\u62ecspring-cloud-starter-stream-rabbit\u5bf9\u5e94RabbitMQ\uff0c\u548c\u5bf9\u5e94Redis\u548cKafka\u7684\u7c7b\u4f3cstarter\u5b58\u5728)\uff0c\u5982\u679c\u6dfb\u52a0\u4ee5\u4e0bUI\u4f9d\u8d56  <groupId>io.zipkin.java</groupId>\n<artifactId>zipkin-autoconfigure-ui</artifactId>  \u4f60\u5c06\u542f\u52a8\u4e00\u4e2aZipkin server\u5e94\u7528\uff0c\u4ed6\u5c06\u901a\u8fc7\u7aef\u53e39411\u8bbf\u95eeUI\u548capi\u3002  \u9ed8\u8ba4SpanStore\u662fin-memory\u7684(\u9002\u5408\u4e8edemos\u4e14\u542f\u52a8\u8fc5\u901f)\uff0c\u4f60\u53ef\u4ee5\u6dfb\u52a0MySQL\u548cspring-boot-starter-jdbc\u5230\u4f60\u7684\u7cfb\u7edf\u73af\u5883\u5e76\u901a\u8fc7\u914d\u7f6e\u6fc0\u6d3bJDBC SpanStore\u3002\u4f8b\u5982\uff1a  spring:\n  rabbitmq:\n    host: ${RABBIT_HOST:localhost}\n  datasource:\n    schema: classpath:/mysql.sql\n    url: jdbc:mysql://${MYSQL_HOST:localhost}/test\n    username: root\n    password: root\n# Switch this on to create the schema on startup:\n    initialize: true\n    continueOnError: true\n  sleuth:\n    enabled: false\nzipkin:\n  storage:\n    type: mysql   @EnableZipkinStreamServer\u4e5f\u4f7f\u7528@EnableZipkinServer\u6ce8\u89e3\uff0c\u56e0\u6b64\u8fdb\u7a0b\u4e5f\u4f1a\u663e\u793a\u6807\u51c6Zipkin\u670d\u52a1\u7ec8\u7aef\u4ee5\u901a\u8fc7HTTP\u6536\u96c6span\uff0c\u4e14\u53ef\u4ee5\u901a\u8fc7Zipkin Web UI\u67e5\u8be2",
            "title": "Zipkin Consumer"
        },
        {
            "location": "/user-guide/sleuth/#custom-consumer",
            "text": "\u4f7f\u7528spring-cloud-sleuth-stream\u4e14\u7ed1\u5b9aSleuthSink\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0\u5b9a\u5236\u6d88\u8d39\u8005\u3002\u4f8b\u5b50\uff1a  @EnableBinding(SleuthSink.class)\n@SpringBootApplication(exclude = SleuthStreamAutoConfiguration.class)\n@MessageEndpoint\npublic class Consumer {\n\n    @ServiceActivator(inputChannel = SleuthSink.INPUT)\n    public void sink(Spans input) throws Exception {\n        // ... process spans\n    }\n}   \u4e0a\u8ff0\u7684\u6d88\u8d39\u8005\u5e94\u7528\u660e\u786e\u6392\u9664SleuthStreamAutoConfiguration\uff0c\u56e0\u6b64\u4ed6\u4e0d\u4f1a\u7ed9\u81ea\u5df1\u53d1\u6d88\u606f\uff0c\u4f46\u8fd9\u662f\u53ef\u9009\u7684(\u4f60\u53ef\u80fd\u60f3\u8981trace\u8bf7\u6c42\u5230\u6d88\u8d39\u8005app)",
            "title": "Custom Consumer"
        },
        {
            "location": "/user-guide/sleuth/#_7",
            "text": "\u5f53\u524dSpring Cloud Sleuth\u8bb0\u5f55\u975e\u5e38\u7b80\u5355\u7684spans metrics\uff0c\u4f7f\u7528Spring Boot\u7684metrics support\u6765\u8ba1\u7b97\u63a5\u6536\u4e22\u5f03\u7684span\u6570\u91cf\uff0c\u5f53\u6709span\u53d1\u9001\u7ed9Zipkin\u65f6\uff0c\u63a5\u6536span\u7684\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\uff0c\u5982\u679c\u6709\u9519\u8bef\u53d1\u751f\uff0c\u4e22\u5f03span\u6570\u91cf\u5c31\u4f1a\u589e\u52a0\u3002",
            "title": "\u5ea6\u91cf"
        },
        {
            "location": "/user-guide/sleuth/#integrations",
            "text": "",
            "title": "Integrations"
        },
        {
            "location": "/user-guide/sleuth/#runnable-and-callable",
            "text": "\u5982\u679c\u4f60\u8981\u5c06\u4f60\u7684\u903b\u8f91\u5305\u88f9\u5728Runable\u6216Callable\u4e2d\uff0c\u8db3\u591f\u5c06\u8fd9\u4e9bclasses\u653e\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868\u4e2d\u3002  Example for Runnable:  Runnable runnable = new Runnable() {\n    @Override\n    public void run() {\n        // do some work\n    }\n\n    @Override\n    public String toString() {\n        return \"spanNameFromToStringMethod\";\n    }\n};\n// Manual `TraceRunnable` creation with explicit \"calculateTax\" Span name\nRunnable traceRunnable = new TraceRunnable(tracer, spanNamer, runnable, \"calculateTax\");\n// Wrapping `Runnable` with `Tracer`. The Span name will be taken either from the\n// `@SpanName` annotation or from `toString` method\nRunnable traceRunnableFromTracer = tracer.wrap(runnable);  Example for Callable:  Callable<String> callable = new Callable<String>() {\n    @Override\n    public String call() throws Exception {\n        return someLogic();\n    }\n\n    @Override\n    public String toString() {\n        return \"spanNameFromToStringMethod\";\n    }\n};\n// Manual `TraceCallable` creation with explicit \"calculateTax\" Span name\nCallable<String> traceCallable = new TraceCallable<>(tracer, spanNamer, callable, \"calculateTax\");\n// Wrapping `Callable` with `Tracer`. The Span name will be taken either from the\n// `@SpanName` annotation or from `toString` method\nCallable<String> traceCallableFromTracer = tracer.wrap(callable);  \u8fd9\u79cd\u65b9\u5f0f\u4f60\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u65b0\u7684Span\u5728\u6bcf\u6b21\u6267\u884c\u65f6\u65b0\u5efa\u548c\u5173\u95ed\u3002",
            "title": "Runnable and Callable"
        },
        {
            "location": "/user-guide/sleuth/#hystrix",
            "text": "\u4f20\u7edf\u5e76\u53d1\u7b56\u7565  \u6211\u4eec\u4ee5\u5c06\u6240\u6709\u7684 Callable \u5b9e\u4f8b\u7f6e\u5165\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868- TraceCallable \u7684\u65b9\u5f0f\u6765\u8bb0\u5f55\u4e00\u4e2a\u4f20\u7edf\u7684 HystrixConcurrencyStrategy \uff0c\u7b56\u7565\u7684\u6253\u5f00\u6216\u5ef6\u7eed\u4e00\u4e2aspan\u53d6\u51b3\u4e8e\u5728Hystrix\u64cd\u4f5c\u88ab\u8c03\u7528\u524dtracing\u662f\u5426\u5728\u5de5\u4f5c\uff0c\u4e3a\u4e86\u4f7f\u4f20\u7edfHystrix\u5e76\u53d1\u7b56\u7565\u65e0\u6548\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.hystrix.strategy.enable \u4e3afalse\u3002  \u624b\u52a8\u64cd\u4f5c\u8bbe\u7f6e  \u5047\u8bbe\u4f60\u6709\u4ee5\u4e0bHystrixCommand\uff1a  HystrixCommand<String> hystrixCommand = new HystrixCommand<String>(setter) {\n    @Override\n    protected String run() throws Exception {\n        return someLogic();\n    }\n};  \u4e3a\u4e86\u4f20\u9012tracing\u4fe1\u606f\u4f60\u5fc5\u987b\u5c06\u540c\u6837\u7684\u903b\u8f91\u7f6e\u4e8e HystrixCommand \u7684Sleuth\u7248\u672c\u4e2d\uff0c\u4e5f\u5c31\u662f TraceCommand \uff1a  TraceCommand<String> traceCommand = new TraceCommand<String>(tracer, traceKeys, setter) {\n    @Override\n    public String doRun() throws Exception {\n        return someLogic();\n    }\n};",
            "title": "Hystrix"
        },
        {
            "location": "/user-guide/sleuth/#rxjava",
            "text": "\u6211\u4eec\u8bb0\u5f55\u4e86\u4e00\u4e2a\u5178\u578b\u7684RxJavaSchedulersHook\uff0c\u4ed6\u5c06\u6240\u6709Action0\u5b9e\u4f8b\u7f6e\u5165\u5230\u4ed6\u4eec\u7684Sleuth\u4ee3\u8868-TraceAction\u4e2d\uff0chook\u6253\u5f00\u6216\u5ef6\u7eed\u4e00\u4e2aspan\u53d6\u51b3\u4e8eAction\u88ab\u5b89\u6392\u524dtracing\u662f\u5426\u5df2\u7ecf\u5728\u5de5\u4f5c\uff0c\u4e3a\u4e86\u4f7fRxJavaSchedulersHook\u65e0\u6548\u53ef\u8bbe\u7f6e spring.sleuth.rxjava.schedulers.hook.enabled \u4e3afalse\u3002  You can define a list of regular expressions for thread names, for which you don\u2019t want a Span to be created. Just provide a comma separated list of regular expressions in the spring.sleuth.rxjava.schedulers.ignoredthreads property.",
            "title": "RxJava"
        },
        {
            "location": "/user-guide/sleuth/#http-integration",
            "text": "\u5c06 spring.sleuth.web.enabled \u914d\u7f6e\u503c\u8bbe\u7f6e\u4e3afalse\u53ef\u4ee5\u4f7f\u8fd9\u7ae0\u4e2d\u7684\u7279\u5f81\u65b9\u6cd5\u65e0\u6548  HTTP Filter  \u901a\u8fc7TraceFilter\uff0c\u6240\u6709\u62bd\u6837\u8f93\u5165\u7684\u8bf7\u6c42\u90fd\u4f1a\u5f52\u7ed3\u5230span\u7684\u521b\u5efa\uff0cspan\u7684\u540d\u79f0\u4e3a\"http+\u8bf7\u6c42\u53d1\u9001\u7684\u8def\u5f84\"\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u8bf7\u6c42\u53d1\u9001\u5230/foo/bar\uff0c\u540d\u79f0\u5373\u4e3ahttp:/foo/bar\uff0c\u4f60\u53ef\u4ee5\u914d\u7f6e\u901a\u8fc7 spring.sleuth.web.skipPattern \uff0c\u90a3\u4e9bURIs\u5c06\u88ab\u8fc7\u6ee4\u6389\uff0c\u5982\u679c\u4f60\u5728\u73af\u5883\u4e2d\u6dfb\u52a0\u4e86ManagementServerProperties\uff0c\u4f60\u7684contextPath\u503c\u4f1a\u9644\u52a0\u5230\u8fc7\u6ee4\u914d\u7f6e\u4e0a\u3002  HandlerIntercepter  \u7531\u4e8e\u9700\u8981span\u540d\u79f0\u7684\u7cbe\u786e\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aTraceHandlerInterceptor\u6765\u7f6e\u5165\u4e00\u4e2a\u5b58\u5728\u7684HandlerInterceptor\u6216\u76f4\u63a5\u6dfb\u52a0\u5230\u5b58\u5728\u7684HandlerInterceptors\u5217\u8868\u4e2d\uff0cTraceHandlerInterceptor\u6dfb\u52a0\u4e00\u4e2a\u7279\u6b8a\u7684\u8bf7\u6c42\u5c5e\u6027\u7ed9HttpServletRequest\uff0c\u5982\u679cTraceFilter\u6ca1\u6709\u770b\u5230\u5c5e\u6027\uff0c\u4ed6\u4f1a\u5efa\u7acb\u4e00\u4e2a\"fallback\"span\uff0c\u8fd9\u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u670d\u52a1\u7aef\u7684\u9644\u52a0\u7684span\uff0c\u6b64\u65f6trace\u5728UI\u4e2d\u53ef\u4ee5\u6b63\u786e\u7684\u663e\u793a\u3002  Async Servlet support  If your controller returns a Callable or a WebAsyncTask Spring Cloud Sleuth will continue the existing span instead of creating a new one.",
            "title": "HTTP integration"
        },
        {
            "location": "/user-guide/sleuth/#http-client-integration",
            "text": "\u540c\u6b65RestTemplate  \u6211\u4eec\u6ce8\u5165\u4e00\u4e2aRestTemplate\u62e6\u622a\u5668\u6765\u4fdd\u8bc1\u6240\u6709\u7684tracing\u4fe1\u606f\u88ab\u53d1\u9001\u5230\u8bf7\u6c42\u7aef\uff0c\u6bcf\u5f53\u4e00\u4e2a\u8bf7\u6c42\u88ab\u751f\u6210\uff0c\u4e00\u4e2a\u65b0\u7684span\u5c06\u88ab\u521b\u5efa\uff0c\u4ed6\u4f1a\u5728\u63a5\u6536\u5e94\u7b54\u540e\u5173\u95ed\uff0c\u4e3a\u4e86\u9650\u5236\u540c\u6b65RestTemplate\u53ea\u9700\u8981\u8bbe\u7f6e spring.sleuth.web.client.enabled \u4e3afalse\u3002   \u4f60\u5fc5\u987b\u6ce8\u518c\u4e00\u4e2aRestTemplate\u4e3abean\u4ee5\u4f7f\u5f97\u62e6\u622a\u5668\u53ef\u4ee5\u6ce8\u5165\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\u5efa\u7acb\u4e00\u4e2aRestTemplate\u5b9e\u4f8b\uff0cinstrumentation\u5c06\u65e0\u6cd5\u5de5\u4f5c   \u5f02\u6b65RestTemplate  \u4f20\u7edf\u7684instrumentation\u662f\u901a\u8fc7\u53d1\u9001\u63a5\u6536\u8bf7\u6c42\u6765\u5efa\u7acb\u5173\u95edspan\u7684\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4f60\u7684bean\u6765\u5b9a\u5236ClientHttpRequestFactory\u548cAsyncClientHttpRequestFactory\uff0c\u8bb0\u5f97\u4f7f\u7528tracing compatible\u5b9e\u73b0\u65b9\u5f0f(e.g. \u4e0d\u8981\u5fd8\u8bb0\u5c06ThreadPoolTaskScheduler\u7f6e\u5165\u4e00\u4e2aTraceAsyncListenableTaskExecutor)\uff0c\u4f20\u7edf\u8bf7\u6c42\u5de5\u5382\u4f8b\u5b50\u5982\u4e0b\uff1a  @EnableAutoConfiguration\n@Configuration\npublic static class TestConfiguration {\n\n    @Bean\n    ClientHttpRequestFactory mySyncClientFactory() {\n        return new MySyncClientHttpRequestFactory();\n    }\n\n    @Bean\n    AsyncClientHttpRequestFactory myAsyncClientFactory() {\n        return new MyAsyncClientHttpRequestFactory();\n    }\n}  \u901a\u8fc7\u8bbe\u7f6e spring.sleuth.web.async.client.enabled \u4e3afalse\u53ef\u4ee5\u9650\u5236 AsyncRestTemplate \uff0c\u4f7f\u9ed8\u8ba4\u7684 TraceAsyncClientHttpRequestFactoryWrapper \u65e0\u6548\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.web.async.client.factory.enabled \u4e3afalse\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u521b\u5efa AsyncRestClient \uff0c\u8bbe\u7f6e spring.sleuth.web.async.client.template.enabled \u4e3afalse\u3002",
            "title": "HTTP client integration"
        },
        {
            "location": "/user-guide/sleuth/#feign",
            "text": "\u9ed8\u8ba4Spring Cloud Sleuth\u901a\u8fc7 TraceFeignClientAutoConfiguration \u63d0\u4f9bfeign\u7684\u96c6\u6210\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.feign.enabled \u4e3afalse\u6765\u4f7f\u4ed6\u65e0\u6548\uff0c\u5982\u679c\u8fd9\u6837\u8bbe\u7f6e\u90a3\u4e48\u6240\u6709feign\u76f8\u5173\u7684\u88c5\u914d\u90fd\u65e0\u6cd5\u53d1\u751f\u3002  \u901a\u8fc7FeignBeanPostProcessor feign\u88c5\u914d\u7684\u90e8\u5206\u7ed3\u675f\uff0c\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.feign.processor.enabled \u4e3afalse\u6765\u662f\u4ed6\u65e0\u6548\u5316\uff0c\u5982\u679c\u4f60\u8fd9\u6837\u8bbe\u7f6e\uff0cSpring Cloud Sleuth\u5c06\u4e0d\u4f1a\u88c5\u914d\u4efb\u4f55\u4f60\u7684\u4f20\u7edffeign\u7ec4\u4ef6\uff0c\u6240\u6709\u9ed8\u8ba4\u88c5\u914d\u4fdd\u6301\u539f\u6709\u72b6\u6001\u3002",
            "title": "Feign"
        },
        {
            "location": "/user-guide/sleuth/#_8",
            "text": "@Async\u6ce8\u89e3\u65b9\u6cd5  \u5728Spring Cloud Sleuth\u4e2d\uff0c\u6211\u4eec\u88c5\u914d\u5f02\u6b65\u5173\u8054\u7ec4\u4ef6\u4ee5\u4f7f\u5f97tracing\u4fe1\u606f\u53ef\u4ee5\u5728threads\u95f4\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e spring.sleuth.async.enabled \u503c\u4e3afalse\u6765\u4f7f\u5176\u65e0\u6548\u5316\u3002\n\u5982\u679c\u4f60\u4f7f\u7528@Async\u6765\u6ce8\u89e3\u4f60\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u81ea\u52a8\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\uff1a   span\u540d\u79f0\u5c06\u662f\u6ce8\u89e3\u65b9\u6cd5\u540d  span\u5c06\u88ab\u6807\u6ce8\u4e3a\u65b9\u6cd5\u7c7b\u540d\u548c\u65b9\u6cd5\u540d   @Scheduled\u6ce8\u89e3\u65b9\u6cd5  \u5728Spring Cloud Sleuth\u4e2d\uff0c\u6211\u4eec\u88c5\u914dscheduled\u6267\u884c\u65b9\u6cd5\u4ee5\u4f7f\u5f97tracing\u4fe1\u606f\u53ef\u4ee5\u5728threads\u95f4\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e spring.sleuth.scheduled.enabled \u503c\u4e3afalse\u6765\u4f7f\u5176\u65e0\u6548\u5316\u3002\n\u5982\u679c\u4f60\u4f7f\u7528 @Scheduled \u6765\u6ce8\u89e3\u4f60\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u81ea\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684span\uff1a   span\u540d\u79f0\u5c06\u662f\u6ce8\u89e3\u65b9\u6cd5\u540d  span\u5c06\u88ab\u6807\u6ce8\u4e3a\u65b9\u6cd5\u7c7b\u540d\u548c\u65b9\u6cd5\u540d   \u5982\u679c\u5728\u4e00\u4e9b@Scheduled\u6ce8\u89e3\u7c7b\u4e2d\u4f60\u60f3\u8df3\u8fc7span\u65b0\u5efa\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.scheduled.skipPattern \u4e3a\u4e00\u4e2a\u6307\u5b9a\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5c06\u5339\u914d @Scheduled \u6ce8\u89e3\u7c7b\u7684\u5b8c\u6574\u63cf\u8ff0\u540d\u79f0\u3002  Executor, ExecutorServiceand ScheduledExecutorService  \u6211\u4eec\u63d0\u4f9b\u4e86LazyTraceExecutor\uff0cTraceableExecutorService\u548cTraceableScheduledExecutorService\u3002\u6bcf\u5f53\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\u88ab\u63d0\u4ea4\u3001\u8c03\u7528\u6216scheduled\u65f6\uff0c\u8fd9\u4e9b\u5b9e\u73b0\u4f1a\u5efa\n\u7acb\u65b0\u7684spans\u3002  \u4ee5\u4e0b\u662f\u5f53\u4f7f\u7528CompletableFuture\u65f6\u5982\u4f55\u7528TraceableExecutorService\u4f20\u9012tracing\u4fe1\u606f\uff1a  CompletableFuture<Long> completableFuture = CompletableFuture.supplyAsync(() -> {\n    // perform some logic\n    return 1_000_000L;\n}, new TraceableExecutorService(executorService,\n        // 'calculateTax' explicitly names the span - this param is optional\n        tracer, traceKeys, spanNamer, \"calculateTax\"));",
            "title": "\u5f02\u6b65\u901a\u4fe1"
        },
        {
            "location": "/user-guide/sleuth/#messaging",
            "text": "Spring Cloud Sleuth\u96c6\u6210\u4e86Spring Integration\u3002\u4ed6\u4f1a\u5efa\u7acbspan\u6765\u53d1\u5e03\u6216\u8ba2\u9605\u4e8b\u4ef6\uff0c\u8bbe\u7f6e spring.sleuth.integration.enabled \u4e3afalse\u53ef\u4ee5\u4f7fSpring Integration\u65e0\u6548\u3002  Spring Cloud Sleuth\u52301.0.4\u7248\u672c\u524d\u90fd\u662f\u4f7f\u7528\u6d88\u606f\u4f20\u9012\u65f6\u53d1\u9001\u65e0\u6548tracing\u5934\uff0c\u8fd9\u4e9b\u5934\u548c\u5728HTTP(\u5305\u542b - )\u53d1\u9001\u7684\u540d\u79f0\u65f6\u4e00\u6837\u7684\uff0c\u4e3a\u4e86\u57281.0.4\u7248\u672c\u7684\u5411\u540e\u517c\u5bb9\u76ee\u7684\uff0c\u6211\u4eec\u5f00\u59cb\u53d1\u9001\u6240\u6709\u6709\u6548\u548c\u65e0\u6548\u7684\u5934\uff0c\u8bf7\u66f4\u65b0\u52301.0.4\uff0c\u56e0\u4e3a\u5728Spring Cloud Sleuth 1.1\u4e2d\u6211\u4eec\u5c06\u4f1a\u79fb\u9664\u5bf9\u5206\u79bb\u5934\u7684\u652f\u6301\u3002  \u4ece1.0.4\u540e\u53ef\u4ee5\u660e\u786e\u8bbe\u7f6e spring.sleuth.integration.patterns \u6a21\u5f0f\u6765\u63d0\u4f9b\u4f60\u60f3\u8981\u5305\u542b\u7684tracing\u4fe1\u9053\u540d\u79f0\uff0c\u9ed8\u8ba4\u6240\u6709\u7684\u4fe1\u9053\u5df2\u88ab\u5305\u542b\u5728\u5185\u3002",
            "title": "Messaging"
        },
        {
            "location": "/user-guide/sleuth/#zuul",
            "text": "\u6211\u4eec\u6ce8\u518cZuul\u8fc7\u6ee4\u5668\u6765\u4f20\u64adtracing\u4fe1\u606f(\u8bf7\u6c42\u5934\u4f7f\u7528tracing\u6570\u636e\u586b\u6ee1)\uff0c\u53ef\u4ee5\u8bbe\u7f6e spring.sleuth.zuul.enabled \u4e3afalse\u6765\u5173\u95edZuul\u670d\u52a1\u3002",
            "title": "Zuul"
        },
        {
            "location": "/user-guide/stream/",
            "text": "Spring Cloud Stream\n#\n\n\n\u8fd9\u4e00\u8282\u5c06\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528SpringCloudStream\u5de5\u4f5c\uff0c\u5b83\u6db5\u76d6\u4e3b\u9898\u4e86\u521b\u5efa\u548c\u8fd0\u884cStream\u5e94\u7528\u3002\n\n\n\u7b80\u4ecb\n#\n\n\nSpringCloudStream\u662f\u4e00\u4e2a\u6784\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u6846\u67b6\u3002SpringCloudStream\u6784\u5efa\u5728SpringBoot\u4e4b\u4e0a\u7528\u4ee5\u521b\u5efa\u5de5\u4e1a\u7ea7\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14Spring Integration\u63d0\u4f9b\u4e86\u548c\u6d88\u606f\u4ee3\u7406\u7684\u8fde\u63a5\u3002SpringCloudStream\u63d0\u4f9b\u51e0\u4e2a\u5382\u5546\u6d88\u606f\u4e2d\u95f4\u4ef6\u4e2a\u6027\u5316\u914d\u7f6e\uff0c\u5f15\u5165\u53d1\u5e03\u8ba2\u9605\u3001\u6d88\u8d39\u7ec4\u548c\u5206\u533a\u7684\u8bed\u4e49\u6982\u5ff5\u3002\n\n\n\u6dfb\u52a0@EnableBinding\u6ce8\u89e3\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u88ab@StreamListener\u4fee\u9970\u7684\u65b9\u6cd5\u53ef\u4ee5\u7acb\u5373\u8fde\u63a5\u5230\u6d88\u606f\u4ee3\u7406\u63a5\u6536\u6d41\u5904\u7406\u4e8b\u4ef6\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u6536\u5916\u90e8\u6d88\u606f\u7684\u63a5\u6536\u5668\u5e94\u7528\u7a0b\u5e8f\n\n\n@SpringBootApplication\npublic class StreamApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(StreamApplication.class, args);\n  }\n}\n\n@EnableBinding(Sink.class)\npublic class TimerSource {\n\n  ...\n\n  @StreamListener(Sink.INPUT)\n  public void processVote(Vote vote) {\n      votingService.recordVote(vote);\n  }\n}\n\n\n\n\n@EnableBinding\u6ce8\u89e3\u4f7f\u7528\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u63a5\u53e3\u4f5c\u4e3a\u53c2\u6570\uff08\u672c\u4f8b\u5b50\u4e2d\uff0c\u53c2\u6570\u662f\u5355\u72ec\u7684Sink\u63a5\u53e3\uff09\uff0c\u63a5\u53e3\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u8f93\u5165\u6216\u8f93\u51fa\u7684channels\uff0cSpringCloudStream\u5b9a\u4e49\u4e86\u4e09\u4e2a\u63a5\u53e3\nSource\n\uff0c\nSink\n\uff0c\nProcessor\n\uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u63a5\u53e3\u3002\n\n\n\u4e0b\u9762\u662fSink\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a\n\n\npublic interface Sink {\n  String INPUT = \"input\";\n\n  @Input(Sink.INPUT)\n  SubscribableChannel input();\n}\n\n\n\n\n@Input\n\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u6536\u6d88\u606f\u7684\u8f93\u5165channel\uff0c\n@Output\n\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d1\u5e03\u6d88\u606f\u7684\u8f93\u51fachannel\uff0c\u8fd9\u4e24\u4e2a\u6ce8\u89e3\u652f\u6301\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3achannel\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u53c2\u6570\u5219\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u540d\u5c06\u88ab\u8bbe\u7f6e\u4e3achannel\u540d\u79f0\u3002\n\n\nSpringCloudStream\u4f1a\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u88c5\u914d\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\u5b83\uff0c\u5982\u4e0b\u4f8b\uff1a\n\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringApplicationConfiguration(classes = StreamApplication.class)\n@WebAppConfiguration\n@DirtiesContext\npublic class StreamApplicationTests {\n\n  @Autowired\n  private Sink sink;\n\n  @Test\n  public void contextLoads() {\n    assertNotNull(this.sink.input());\n  }\n}\n\n\n\n\n\u4e3b\u8981\u6982\u5ff5\n#\n\n\nSpringCloudStream\u63d0\u4f9b\u4e86\u5f88\u591a\u62bd\u8c61\u548c\u57fa\u7840\u7ec4\u4ef6\u6765\u7b80\u5316\u6d88\u606f\u9a71\u52a8\u578b\u5fae\u670d\u52a1\u5e94\u7528\u3002\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\n\n\n\nSpring Cloud Stream\u7684\u5e94\u7528\u6a21\u578b\n\n\n\u7ed1\u5b9a\u62bd\u8c61\n\n\n\u6301\u4e45\u5316\u53d1\u5e03\uff0f\u8ba2\u9605\u652f\u6301\n\n\n\u6d88\u8d39\u8005\u7ec4\u652f\u6301\n\n\n\u5206\u7247\u652f\u6301\uff08Partitioning Support\uff09\n\n\n\u53ef\u63d2\u62d4API\n\n\n\n\n\u5e94\u7528\u6a21\u578b\n#\n\n\nSpringCloudStream\u7531\u4e00\u4e2a\u4e2d\u7acb\u7684\u4e2d\u95f4\u4ef6\u5185\u6838\u7ec4\u6210\u3002SpringCloudStream\u4f1a\u6ce8\u5165\u8f93\u5165\u548c\u8f93\u51fa\u7684channels\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u8fd9\u4e9bchannels\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u800cchannels\u5219\u662f\u901a\u8fc7\u4e00\u4e2a\u660e\u786e\u7684\u4e2d\u95f4\u4ef6Binder\u4e0e\u5916\u90e8brokers\u8fde\u63a5\u3002\n\n\n \n\n\nFat JAR\n#\n\n\nSpringCloudStream\u53ef\u4ee5\u5728ide\u4e2d\u8fd0\u884c\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u4f8b\u7528\u6765\u6d4b\u8bd5\uff0c\u5982\u679c\u8981\u90e8\u7f72\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5219\u53ef\u4ee5\u901a\u8fc7Maven\u6216\u8005Gradle\u63d0\u4f9b\u7684Spring Boot\u5de5\u5177\u521b\u5efa\u53ef\u6267\u884cJAR\uff08\u80d6JAR\uff09\n\n\n\u7ed1\u5b9a\u62bd\u8c61\n#\n\n\nSpringCloudStream\u63d0\u4f9b\u5bf9Kafka\uff0cRabbit MQ\uff0cRedis\uff0c\u548cGemfire\u7684Binder\u5b9e\u73b0\u3002Spring Cloud Stream\u8fd8\u5305\u62ec\u4e86\u4e00\u4e2aTestSupportBinder\uff0cTestSupportBinder\u9884\u7559\u4e00\u4e2a\u672a\u66f4\u6539\u7684channel\u4ee5\u4fbf\u4e8e\u76f4\u63a5\u5730\u3001\u53ef\u9760\u5730\u548cchannels\u901a\u4fe1\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ef\u6269\u5c55\u7684API\u6765\u7f16\u5199\u81ea\u5df1\u7684Binder\u3002\n\n\nSpringCloudStream\u4f7f\u7528SpringBoot\u505a\u914d\u7f6e\uff0c\u7ed1\u5b9a\u62bd\u8c61\u4f7f\u5f97SpringCloudStream\u5e94\u7528\u53ef\u4ee5\u7075\u6d3b\u7684\u8fde\u63a5\u5230\u4e2d\u95f4\u4ef6\u3002\u6bd4\u5982\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7684\u9009\u62e9channels\u8fde\u63a5\u7684\u76ee\u6807\uff08\u53ef\u4ee5\u662fkafka topics\u6216RabbitMQ exchanges\uff09\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u914d\u7f6e\u6216\u4efb\u4f55SpringBoot\u652f\u6301\u7684\u5f62\u5f0f\uff08\u5305\u62ec\u5e94\u7528\u53c2\u6570\uff0c\u73af\u5883\u53d8\u91cf\u548capplication.yml\u6216application.properties\u6587\u4ef6\uff09\u3002\u7b80\u4ecb\u4e00\u8282\u63d0\u5230\u7684sink\u4f8b\u5b50\u4e2d\uff0c\u5c06\nspring.cloud.stream.bindings.input.destination\n\u8bbe\u7f6e\u6210\nraw-sensor-data\n\u7a0b\u5e8f\u4f1a\u4ece\u547d\u540d\u4e3a\nraw-sensor-data\n\u7684kafka\u4e3b\u9898\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6216\u8005\u4ece\u4e00\u4e2a\u7ed1\u5b9a\u5230\nraw-sensor-data\n\u7684rabbitmq\u4ea4\u6362\u673a\u7684\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\n\n\nSpringCloudStream\u80fd\u81ea\u52a8\u53d1\u73b0\u5e76\u4f7f\u7528\u7c7b\u8def\u5f84\u4e2d\u7684binder\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ee5\u76f8\u540c\u7684\u4ee3\u7801\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e2d\u95f4\u4ef6\uff1a\u53ea\u9700\u8981\u5728build\u7684\u65f6\u5019\u5f15\u5165\u4e0d\u540c\u7684binder\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u5f15\u5165\u591a\u4e2abinders\u5e76\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u4e0d\u540c\u7684channels\u9009\u62e9\u4e0d\u540c\u7684binder\u3002\n\n\n\u6301\u4e45\u5316\u53d1\u5e03\uff0f\u8ba2\u9605\u652f\u6301\n#\n\n\n\u5e94\u7528\u95f4\u901a\u4fe1\u9075\u7167\u53d1\u5e03-\u8ba2\u9605\u6a21\u578b\uff0c\u6570\u636e\u901a\u8fc7\u5171\u4eab\u7684topics\u8fdb\u884c\u5e7f\u64ad\uff0c\u4e0b\u56fe\u663e\u793a\u4e86SpringCloudStream\u5e94\u7528\u4ea4\u4e92\u7684\u5178\u578b\u90e8\u7f72.\n\n\n\n\n\u6570\u636e\u88ab\u53d1\u9001\u5230\u4e00\u4e2a\u516c\u5171\u7684\u76ee\u6807\nraw-sensor-data\n\uff0c\u5728\u76ee\u6807\u4e2d\uff0c\u6570\u636e\u5206\u522b\u88ab\u4e24\u4e2a\u72ec\u7acb\u7684\u5fae\u670d\u52a1\u52a0\u5de5\uff0c\u4e00\u4e2a\u5fae\u670d\u52a1\u8ba1\u7b97\u5e73\u5747\u7a97\u53e3\u65f6\u95f4\uff0c\u53e6\u4e00\u4e2a\u5c06\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5230HDFS\u3002\u4e3a\u4e86\u5904\u7406\u6570\u636e\uff0c\u4e24\u4e2a\u5fae\u670d\u52a1\u5728\u8fd0\u884c\u65f6\u58f0\u660e\u8fd9\u4e2atopic\u4f5c\u4e3a\u4ed6\u4eec\u7684\u8f93\u5165\u6e90\u3002\n\n\n\u53d1\u5e03-\u8ba2\u9605\u901a\u4fe1\u6a21\u578b\u964d\u4f4e\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u590d\u6742\u6027\uff0c\u5e76\u5141\u8bb8\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u88ab\u6dfb\u52a0\u5230\u62d3\u6251\u7ed3\u6784\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u73b0\u6709\u7684\u6d41\u7a0b\u3002\u4f8b\u5982\uff0c\u4e0b\u6e38\u7684\u5e73\u5747\u8ba1\u7b97\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u8ba1\u7b97\u6700\u9ad8\u6e29\u5ea6\u7528\u6765\u663e\u793a\u548c\u76d1\u63a7\u3002\u7136\u540e\u60a8\u53ef\u4ee5\u518d\u6dfb\u52a0\u4e00\u4e2a\u57fa\u4e8e\u76f8\u540c\u6570\u636e\u6d41\u7684\uff0c\u89e3\u91ca\u6545\u969c\u68c0\u6d4b\u7684\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u901a\u8fc7\u5171\u540c\u7684topics\u505a\u6c9f\u901a\u76f8\u6bd4\u70b9\u5bf9\u70b9\u7684\u961f\u5217\u66f4\u80fd\u51cf\u5c11\u5fae\u670d\u52a1\u95f4\u7684\u8026\u5408\u3002\n\n\n\u53d1\u5e03\u8ba2\u9605\u4e0d\u662f\u4e00\u4e2a\u65b0\u6982\u5ff5\uff0cSpringCloudStream\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684\u624b\u6bb5\u4f9b\u4f60\u9009\u62e9\u3002\u901a\u8fc7\u4f7f\u7528\u672c\u5730\u4e2d\u95f4\u4ef6\u652f\u6301\uff0cSpringCloudStream\u7b80\u5316\u4e86\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u53d1\u5e03\u8ba2\u9605\u6a21\u578b\u3002\n\n\n\u6d88\u8d39\u8005\u7ec4\n#\n\n\n\u867d\u7136\u53d1\u5e03-\u8ba2\u9605\u6a21\u578b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u5171\u4eabtopics\u8fde\u63a5\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u591a\u5b9e\u4f8b\u7684\u7684\u6269\u5f20\u80fd\u529b\u540c\u7b49\u91cd\u8981\u3002\u5f53\u8fd9\u6837\u505a\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u5b9e\u4f8b\u88ab\u653e\u7f6e\u5728\u4e00\u4e2a\u7ade\u4e89\u7684\u6d88\u8d39\u8005\u5173\u7cfb\u4e2d\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u5904\u7406\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6d88\u606f\u3002\n\n\nSpringCloudStream\u5229\u7528\u6d88\u8d39\u8005\u7ec4\u5b9a\u4e49\u8fd9\u79cd\u884c\u4e3a\uff08\u8fd9\u79cd\u5206\u7ec4\u7c7b\u4f3c\u4e8eKafka consumer groups\uff0c\u7075\u611f\u4e5f\u6765\u6e90\u4e8e\u6b64\uff09\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u901a\u8fc7\nspring.cloud.stream.bindings.input.group\n\u6307\u5b9a\u4e00\u4e2a\u7ec4\u540d\u79f0\uff0c\u4ee5\u4e0b\u56fe\u6240\u793a\u7684\u6d88\u8d39\u8005\u4e3a\u4f8b\uff0c\u5e94\u5206\u522b\u8bbe\u7f6e\nspring.cloud.stream.bindings.input.group=hdfsWrite\n\u548c\nspring.cloud.stream.bindings.input.group=average\n\u3002\n\n\n\n\n\u6240\u6709\u8ba2\u9605\u6307\u5b9atopics\u7684\u7ec4\u90fd\u4f1a\u6536\u5230\u53d1\u5e03\u6570\u636e\u7684\u4e00\u4efd\u526f\u672c\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u7ec4\u5185\u53ea\u6709\u4e00\u4e2a\u6210\u5458\u4f1a\u6536\u5230\u8be5\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u4e00\u4e2a\u7ec4\u6ca1\u6709\u6307\u5b9a\u65f6\uff0cSpringCloudStream\u5c06\u5206\u914d\u7ed9\u4e00\u4e2a\u533f\u540d\u7684\u3001\u72ec\u7acb\u7684\u53ea\u6709\u4e00\u4e2a\u6210\u5458\u7684\u6d88\u8d39\u7ec4\uff0c\u8be5\u7ec4\u4e0e\u6240\u6709\u5176\u4ed6\u7ec4\u90fd\u5904\u4e8e\u4e00\u4e2a\u53d1\u5e03\uff0d\u8ba2\u9605\u5173\u7cfb\u4e2d\u3002\n\n\n\u6301\u4e45\u6027\n#\n\n\nSpringCloudStream\u4e00\u81f4\u6027\u6a21\u578b\u4e2d\uff0c\u6d88\u8d39\u8005\u7ec4\u8ba2\u9605\u662f\u6301\u4e45\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u7ed1\u5b9a\u7684\u5b9e\u73b0\u786e\u4fdd\u7ec4\u7684\u8ba2\u9605\u8005\u662f\u6301\u4e45\u7684\u3002\u4e00\u65e6\u7ec4\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u5458\u521b\u5efa\u4e86\u8ba2\u9605\uff0c\u8fd9\u4e2a\u7ec4\u5c31\u4f1a\u6536\u5230\u6d88\u606f\uff0c\u5373\u4f7f\u7ec4\u4e2d\u6240\u6709\u7684\u5e94\u7528\u90fd\u88ab\u505c\u6b62\u4e86\uff0c\u7ec4\u4ecd\u7136\u4f1a\u6536\u5230\u6d88\u606f\u3002 \n\n\n\n\n\u533f\u540d\u8ba2\u9605\u662f\u975e\u6301\u4e45\u7684\uff0c\u4e00\u4e9bbinder\u7684\u5b9e\u73b0\uff08\u5982\uff1aRabbitMQ\uff09\uff0c\u53ef\u4ee5\u521b\u5efa\u975e\u6301\u4e45\u5316\uff08non\uff0ddurable\uff09\u7ec4\u8ba2\u9605\n\n\n\n\n\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5c06\u5e94\u7528\u7ed1\u5b9a\u5230\u7ed9\u5b9a\u76ee\u6807\u7684\u65f6\u5019\uff0c\u6700\u597d\u6307\u5b9a\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\uff0c\u5f53\u6269\u5c55\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u65f6\uff0c\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8f93\u5165bindings\u6307\u5b9a\u4e00\u4e2a\u6d88\u8d39\u7ec4\uff0c\u8fd9\u9632\u6b62\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u4f8b\u63a5\u6536\u91cd\u590d\u7684\u6d88\u606f\uff08\u9664\u975e\u8be5\u884c\u4e3a\u662f\u9700\u8981\u7684\uff0c\u8fd9\u662f\u4e0d\u5bfb\u5e38\u7684\uff09\u3002\n\n\n\u5206\u533a\u652f\u6301\n#\n\n\nSpringCloudStream\u652f\u6301\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u6570\u636e\u5206\u533a\uff0c\u5728\u5206\u533a\u7684\u60c5\u51b5\u4e0b\uff0c\u7269\u7406\u901a\u4fe1\u4ecb\u8d28\uff08\u4f8b\u5982\uff0ctopic\u4ee3\u7406\uff09\u88ab\u89c6\u4e3a\u591a\u5206\u533a\u7ed3\u6784\u3002\u4e00\u4e2a\u6216\u591a\u4e2a\u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\u5c06\u6570\u636e\u53d1\u9001\u7ed9\u591a\u4e2a\u6d88\u8d39\u5e94\u7528\u5b9e\u4f8b\uff0c\u5e76\u4fdd\u8bc1\u5171\u540c\u7684\u7279\u6027\u7684\u6570\u636e\u7531\u76f8\u540c\u7684\u6d88\u8d39\u8005\u5b9e\u4f8b\u5904\u7406\u3002\n\n\nSpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u62bd\u8c61\uff0c\u7528\u4e8e\u7edf\u4e00\u65b9\u5f0f\u8fdb\u884c\u5206\u533a\u5904\u7406\uff0c\u56e0\u6b64\u5206\u533a\u53ef\u4ee5\u7528\u4e8e\u81ea\u5e26\u5206\u533a\u7684\u4ee3\u7406\uff08\u5982kafka\uff09\u6216\u8005\u4e0d\u5e26\u5206\u533a\u7684\u4ee3\u7406\uff08\u5982rabbiemq\uff09\n\n\n\n\n\u5206\u533a\u5728\u6709\u72b6\u6001\u5904\u7406\u4e2d\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5176\u91cd\u8981\u6027\u4f53\u73b0\u5728\u6027\u80fd\u548c\u4e00\u81f4\u6027\u4e0a\uff0c\u8981\u786e\u4fdd\u6240\u6709\u76f8\u5173\u6570\u636e\u88ab\u4e00\u5e76\u5904\u7406\uff0c\u4f8b\u5982\uff0c\u5728\u65f6\u95f4\u7a97\u5e73\u5747\u8ba1\u7b97\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ed9\u5b9a\u4f20\u611f\u5668\u6d4b\u91cf\u7ed3\u679c\u5e94\u8be5\u90fd\u7531\u540c\u4e00\u5e94\u7528\u5b9e\u4f8b\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\n\n\n\u5982\u679c\u8981\u8bbe\u7f6e\u5206\u533a\u5904\u7406\u65b9\u6848\uff0c\u9700\u8981\u914d\u7f6e\u6570\u636e\u751f\u4ea7\u7aef\u70b9\u548c\u6570\u636e\u6d88\u8d39\u7aef\u70b9\n\n\n\n\n\u7f16\u7a0b\u6a21\u578b\n#\n\n\n\u672c\u8282\u4ecb\u7ecdSpringCloudStream\u7684\u7f16\u7a0b\u6a21\u578b\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u7ed1\u5b9a\u8f93\u5165\u548c\u8f93\u51fachannels\uff0c\u4ee5\u53ca\u5982\u4f55\u76d1\u542cchannels\u3002\n\n\n\u58f0\u660e\u548c\u7ed1\u5b9a\u901a\u9053\n#\n\n\n\u901a\u8fc7\n@EnableBinding\n\u89e6\u53d1\u7ed1\u5b9a\n#\n\n\n\u5c06@EnableBinding\u6ce8\u89e3\u6dfb\u52a0\u5230\u5e94\u7528\u7684\u914d\u7f6e\u7c7b\uff0c\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2aspring\u5e94\u7528\u8f6c\u6362\u6210SpringCloudStream\u5e94\u7528\uff0c@EnableBinding\u6ce8\u89e3\u672c\u8eab\u5c31\u5305\u542b@Configuration\u6ce8\u89e3\uff0c\u4f1a\u89e6\u53d1SpringCloudStream \u57fa\u672c\u914d\u7f6e\u3002 \n\n\n...\n@Import(...)\n@Configuration\n@EnableIntegration\npublic @interface EnableBinding {\n    ...\n    Class<?>[] value() default {};\n}\n\n\n\n\n@EnableBinding\u6ce8\u89e3\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u6216\u591a\u4e2a\u63a5\u53e3\u7c7b\u4f5c\u4e3a\u53c2\u6570\uff0c\u540e\u8005\u5305\u542b\u4ee3\u8868\u4e86\u53ef\u7ed1\u5b9a\u6784\u4ef6\uff08\u4e00\u822c\u6765\u8bf4\u662f\u6d88\u606f\u901a\u9053\uff09\u7684\u65b9\u6cd5\n\n\n\n\n\u5728SpringCloudStream1.0\u4e2d\uff0c\u4ec5\u6709\u7684\u53ef\u7ed1\u5b9a\u6784\u4ef6\u662fSpring Messaging \nMessageChannel\n\u4ee5\u53ca\u5b83\u7684\u6269\u5c55\nSubscribableChannel\n\u548c\nPollableChannel\n. \u672a\u6765\u7248\u672c\u4f1a\u4f7f\u7528\u76f8\u540c\u7684\u673a\u5236\u6269\u5c55\u5bf9\u5176\u4ed6\u7c7b\u578b\u6784\u4ef6\u7684\u652f\u6301\u3002\u5728\u672c\u6587\u6863\u4e2d\uff0c\u4f1a\u7ee7\u7eed\u5f15\u7528channels\u3002\n\n\n\n\n@Input\n \u4e0e \n@Output\n#\n\n\n\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u76ee\u7684input\u548coutput\u901a\u9053\uff0c\u540e\u8005\u901a\u8fc7\n@Input\n\u548c\n@Output\n\u6ce8\u89e3\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u3002\n\n\npublic interface Barista {\n\n    @Input\n    SubscribableChannel orders();\n\n    @Output\n    MessageChannel hotDrinks();\n\n    @Output\n    MessageChannel coldDrinks();\n}\n\n\n\n\n\u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\u4f5c\u4e3a@EnableBinding\u7684\u53c2\u6570\uff0c\u5c06\u89e6\u53d1\u4e09\u4e2abound channels\u7684\u521b\u5efa\uff0c\u540e\u8005\u7684\u5206\u522b\u88ab\u547d\u540d\u4e3a\norders\n\uff0c\nhotDrinks\n\uff0c\ncoldDrinks\n\n\n@EnableBinding(Barista.class)\npublic class CafeConfiguration {\n\n   ...\n}\n\n\n\n\n\u5b9a\u5236\u901a\u9053\u540d\u5b57\n\n\n\u4f7f\u7528\n@Input\n\u548c\n@Output\n\u6ce8\u89e3\uff0c\u60a8\u53ef\u4ee5\u4e3a\u8be5channel\u6307\u5b9a\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684channel\u540d\u79f0\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\uff1a\n\n\npublic interface Barista {\n    ...\n    @Input(\"inboundOrders\")\n    SubscribableChannel orders();\n}\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u521b\u5efa\u7684\u7ed1\u5b9achannel\u5c06\u88ab\u547d\u540d\u4e3ainboundorders\u3002\n\n\nSource\n\uff0c\nSink\n\uff0c\nProcessor\n\n\n\u6700\u5e38\u89c1\u7684\u573a\u666f\u4e2d\uff0c\u5305\u542b\u4e00\u4e2a\u8f93\u5165\u901a\u9053\u6216\u8005\u5305\u542b\u4e00\u4e2a\u8f93\u51fa\u901a\u9053\u6216\u8005\u4e8c\u8005\u90fd\u5305\u542b\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u4e09\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u9884\u5b9a\u4e49\u63a5\u53e3\u3002\n\n\nSource\n\u7528\u4e8e\u6709\u5355\u4e2a\u8f93\u51fa\uff08outbound\uff09\u901a\u9053\u7684\u5e94\u7528\u3002\n\n\npublic interface Source {\n\n  String OUTPUT = \"output\";\n\n  @Output(Source.OUTPUT)\n  MessageChannel output();\n\n}\n\n\n\n\nSink\n\u7528\u4e8e\u6709\u5355\u4e2a\u8f93\u5165\uff08inbound\uff09\u901a\u9053\u7684\u5e94\u7528\u3002\n\n\npublic interface Sink {\n\n  String INPUT = \"input\";\n\n  @Input(Sink.INPUT)\n  SubscribableChannel input();\n\n}\n\n\n\n\nProcessor\n\u7528\u4e8e\u5355\u4e2a\u5e94\u7528\u540c\u65f6\u5305\u542b\u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\u7684\u60c5\u51b5\u3002\n\n\npublic interface Processor extends Source, Sink {\n}\n\n\n\n\nSpringCloudStream\u5bf9\u8fd9\u4e9b\u63a5\u53e3\u4e0d\u63d0\u4f9b\u7279\u6b8a\u7684\u5904\u7406\uff0c\u4ec5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u7279\u6027\u3002\n\n\n\u8bbf\u95ee\u7ed1\u5b9a\u901a\u9053\n#\n\n\n \u6ce8\u5165\u5df2\u7ed1\u5b9a\u63a5\u53e3 \n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed1\u5b9a\u7684\u63a5\u53e3\uff0cSpringCloudStream\u5c06\u4ea7\u751f\u4e00\u4e2a\u5b9e\u73b0\u63a5\u53e3\u7684bean\uff0c\u8c03\u7528\u8fd9\u4e2a\u751f\u6210\u7c7b\u7684\n@Input\n\u6216\n@Output\n\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76f8\u5e94\u7684channel\u3002\n\n\n\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53hello\u88ab\u8c03\u7528\u65f6\u8f93\u51fachannel\u4f1a\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff0c\u5728\u6ce8\u5165\u7684Sourc\u4e0a\u63d0\u4f9b\u5524\u9192output()\u6765\u68c0\u7d22\u5230\u76ee\u6807\u901a\u9053\n\n\n@Component\npublic class SendingBean {\n\n    private Source source;\n\n    @Autowired\n    public SendingBean(Source source) {\n        this.source = source;\n    }\n\n    public void sayHello(String name) {\n         source.output().send(MessageBuilder.withPayload(body).build());\n    }\n}\n\n\n\n\n \u76f4\u63a5\u6ce8\u5165\u5230\u901a\u9053 \n \n\n\n\u7ed1\u5b9a\u7684\u901a\u9053\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\n\n\n@Component\npublic class SendingBean {\n\n    private MessageChannel output;\n\n    @Autowired\n    public SendingBean(MessageChannel output) {\n        this.output = output;\n    }\n\n    public void sayHello(String name) {\n         output.send(MessageBuilder.withPayload(body).build());\n    }\n}\n\n\n\n\n\u5982\u679cchannel\u7684\u540d\u5b57\u662f\u5728\u6ce8\u89e3\u4e2d\u6307\u5b9a\u7684\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u65b9\u6cd5\u540d\u3002\u5982\u4e0b\uff1a\n\n\npublic interface CustomSource {\n    ...\n    @Output(\"customOutput\")\n    MessageChannel output();\n}\n\n\n\n\n\u8be5\u901a\u9053\u5c06\u88ab\u6ce8\u5165\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\uff1a\n\n\n@Component\npublic class SendingBean {\n\n    @Autowired\n    private MessageChannel output;\n\n    @Autowired @Qualifier(\"customOutput\")\n    public SendingBean(MessageChannel output) {\n        this.output = output;\n    }\n\n    public void sayHello(String name) {\n         customOutput.send(MessageBuilder.withPayload(body).build());\n    }\n}\n\n\n\n\n\u751f\u4ea7\u548c\u6d88\u8d39\u6d88\u606f\n#\n\n\n\u53ef\u4ee5\u4f7f\u7528Spring Integration\u7684\u6ce8\u89e3\u6216\u8005SpringCloudStream\u7684\n@StreamListener\n\u6ce8\u89e3\u6765\u5b9e\u73b0\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u3002\n@StreamListener\n\u6ce8\u89e3\u6a21\u4eff\u5176\u4ed6spring\u6d88\u606f\u6ce8\u89e3\uff08\u4f8b\u5982\n@MessageMapping\n, \n@JmsListener\n, \n@RabbitListener\n\u7b49\uff09\uff0c\u4f46\u662f\u5b83\u589e\u52a0\u4e86\u5185\u5bb9\u7c7b\u578b\u7ba1\u7406\u548c\u7c7b\u578b\u5f3a\u5236\u7279\u6027\u3002\n\n\n \u539f\u751fSpring Integration\u652f\u6301 \n\n\nSpringCloudStream\u662f\u57fa\u4e8eSpring Integration\u7684\uff0c\u6240\u4ee5\u5b8c\u5168\u7684\u7ee7\u627f\u4e86\u540e\u8005\u7684\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6784\u4ef6\u672c\u8eab\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\nSource\n\u7684output\u901a\u9053\u8fde\u63a5\u5230\u4e00\u4e2a\nMessageSource\n\n\n@EnableBinding(Source.class)\npublic class TimerSource {\n\n  @Value(\"${format}\")\n  private String format;\n\n  @Bean\n  @InboundChannelAdapter(value = Source.OUTPUT, poller = @Poller(fixedDelay = \"${fixedDelay}\", maxMessagesPerPoll = \"1\"))\n  public MessageSource<String> timerMessageSource() {\n    return () -> new GenericMessage<>(new SimpleDateFormat(format).format(new Date()));\n  }\n}\n\n\n\n\n\u6216\u8005\u4f60\u53ef\u4ee5\u5728transformer\u4e2d\u4f7f\u7528\u5904\u7406\u5668\u7684channels\uff1a\n\n\n@EnableBinding(Processor.class)\npublic class TransformProcessor {\n  @Transformer(inputChannel = Processor.INPUT, outputChannel = Processor.OUTPUT)\n  public Object transform(String message) {\n    return message.toUpper();\n  }\n}\n\n\n\n\n \u4f7f\u7528\n@StreamListener\n\u8fdb\u884c\u81ea\u52a8\u5185\u5bb9\u7c7b\u578b\u5904\u7406 \n\n\n\u4f5c\u4e3a\u539f\u751fSpring Integration\u7684\u8865\u5145\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\n@StreamListener\n\u6ce8\u89e3\uff0c\u8be5\u6ce8\u89e3\u6a21\u4effspring\u7684\u5176\u5b83\u6d88\u606f\u6ce8\u89e3\uff08\u5982\n@MessageMapping\n, \n@JmsListener\n, \n@RabbitListener\n\u7b49\uff09\u3002\n@StreamListener\n\u6ce8\u89e3\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u6a21\u578b\u6765\u5904\u7406\u8f93\u5165\u6d88\u606f,\u5c24\u5176\u662f\u5904\u7406\u5305\u542b\u5185\u5bb9\u7c7b\u578b\u7ba1\u7406\u548c\u7c7b\u578b\u5f3a\u5236\u7684\u7528\u4f8b\u7684\u60c5\u51b5\u3002 \n\n\nSpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u7684\nMessageConverter\n\u673a\u5236\uff0c\u8be5\u673a\u5236\u63d0\u4f9b\u7ed1\u5b9a\u901a\u9053\u5b9e\u73b0\u6570\u636e\u5904\u7406\uff0c\u672c\u4f8b\u5b50\u4e2d\uff0c\u6570\u636e\u4f1a\u5206\u53d1\u7ed9\u5e26\n@StreamListener\n\u6ce8\u89e3\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u4f8b\u5b50\u5c55\u793a\u4e86\u5904\u7406\u5916\u90e8\nVote\n\u4e8b\u4ef6\u7684\u5e94\u7528\uff1a\n\n\n@EnableBinding(Sink.class)\npublic class VoteHandler {\n\n  @Autowired\n  VotingService votingService;\n\n  @StreamListener(Sink.INPUT)\n  public void handle(Vote vote) {\n    votingService.record(vote);\n  }\n}\n\n\n\n\n@StreamListener\n\u548cSpring Integration\u7684\n@ServiceActivator\n\u662f\u6709\u533a\u522b\u7684\uff0c\u533a\u522b\u4f53\u73b0\u5728\u5f53\u8f93\u5165\u6d88\u606f\u5185\u5bb9\u5934\u4e3aapplication/json\u7684\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c@StreamListener\u7684MessageConverter\u673a\u5236\u4f1a\u4f7f\u7528contentType\u5934\u5c06string\u89e3\u6790\u4e3aVote\u5bf9\u8c61\u3002\n\n\n\u548c\u5176\u4ed6Spring Messaging\u65b9\u6cd5\u4e00\u6837\uff0c\u65b9\u6cd5\u53c2\u6570\u53ef\u4ee5\u88ab\u5982\u4e0b\u6ce8\u89e3\u4fee\u9970\uff0c@Payload\uff0c@Headers\u548c@Header\n\n\n\n\n\u5bf9\u4e8e\u90a3\u4e9b\u6709\u8fd4\u56de\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u4f7f\u7528@SendTo\u6ce8\u89e3\u6765\u6307\u5b9a\u8fd4\u56de\u6570\u636e\u7684\u8f93\u51fa\u7ed1\u5b9a\u76ee\u6807\u3002\n\n\n\n\n @EnableBinding(Processor.class)\n public class TransformProcessor {\n\n   @Autowired\n   VotingService votingService;\n\n   @StreamListener(Processor.INPUT)\n   @SendTo(Processor.OUTPUT)\n   public VoteResult handle(Vote vote) {\n     return votingService.record(vote);\n   }\n }\n\n\n\n\n\n\n\u5728RabbitMQ\u4e2d\uff0c\u5185\u5bb9\u7c7b\u578b\u5934\u53ef\u4ee5\u7531\u5916\u90e8\u5e94\u7528\u8bbe\u5b9a\u3002SpringCloudStream\u652f\u6301\u4ed6\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u6269\u5c55\u7684\u5185\u90e8\u534f\u8bae\uff0c\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u8fd0\u8f93\uff08\u5305\u62ec\u8fd0\u8f93\uff0c\u5982Kafka\uff0c\u4e0d\u80fd\u6b63\u5e38\u652f\u6301headers\uff09\n\n\n\n\n\u805a\u5408\n#\n\n\nSpringCloudStream\u53ef\u4ee5\u652f\u6301\u591a\u79cd\u5e94\u7528\u805a\u5408\uff0c\u76f4\u63a5\u8fde\u63a5\u4ed6\u4eec\u7684\u8f93\u5165\u548c\u8f93\u51fachannel\uff0c\u5e76\u907f\u514d\u901a\u8fc7\u4ee3\u7406\u4ea4\u6362\u6d88\u606f\u7684\u989d\u5916\u6210\u672c\uff0c\u622a\u6b621.0\u7248\u672c\uff0c\u805a\u5408\u53ea\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\n\n\n\n\n\n\nsources\uff1a\u5e26\u6709\u540d\u4e3aoutput\u7684\u5355\u4e00\u8f93\u51fachannel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a \n\norg.springframework.cloud.stream.messaging.Source\n\n\n\n\n\n\nsinks\uff1a\u5e26\u6709\u540d\u4e3ainput\u7684\u5355\u4e00\u8f93\u5165channel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a \n\norg.springframework.cloud.stream.messaging.Sink\n\n\n\n\n\n\nprocessors\uff1a\u5e26\u6709\u540d\u4e3ainput\u7684\u5355\u4e00\u8f93\u5165channel\u548c\u5e26\u6709\u540d\u4e3aoutput\u7684\u5355\u4e00\u8f93\u51fachannel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a\norg.springframework.cloud.stream.messaging.Processor\n\n\n\n\n\n\n\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u5e94\u7528\u7684\u5e8f\u5217\u5c06\u4ed6\u4eec\u805a\u5408\u5728\u4e00\u8d77\uff0c\u5176\u4e2d\u4e00\u4e2a\u5e8f\u5217\u5143\u7d20\u7684\u8f93\u51fa\u901a\u9053\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u8f93\u51fa\u901a\u9053\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8f93\u5165\u901a\u9053\u5143\u7d20\u7684\u8f93\u5165\u901a\u9053\uff0c\u5e8f\u5217\u53ef\u4ee5\u7531\u4e00\u4e2asource\u6216\u8005\u4e00\u4e2aprocessor\u5f00\u59cb\uff0c\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u76ee\u7684processors\uff0c\u4e14\u5fc5\u987b\u7531processors\u6216\u8005sink\u7ed3\u675f\u3002\n\n\n\u6839\u636e\u5f00\u59cb\u548c\u7ed3\u675f\u5143\u7d20\u7684\u7279\u6027\uff0c\u5e8f\u5217\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u53ef\u7ed1\u5b9a\u7684channels\uff0c\u5982\u4e0b\uff1a\n\n\n\n\n\u5982\u679c\u5e8f\u5217\u7531source\u5f00\u59cb\uff0csink\u7ed3\u675f\uff0c\u5e94\u7528\u4e4b\u95f4\u76f4\u63a5\u901a\u4fe1\u5e76\u4e14\u4e0d\u4f1a\u7ed1\u5b9a\u901a\u9053\n\n\n\u5982\u679c\u5e8f\u5217\u7531processor\u5f00\u59cb\uff0c\u5b83\u7684\u8f93\u5165\u901a\u9053\u4f1a\u53d8\u6210\u805a\u5408\u7684input\u901a\u9053\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u7ed1\u5b9a\n\n\n\u5982\u679c\u5e8f\u5217\u7531processor\u7ed3\u675f\uff0c\u5b83\u7684\u8f93\u51fa\u901a\u9053\u4f1a\u53d8\u6210\u805a\u5408\u7684output\u901a\u9053\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u7ed1\u5b9a\n\n\n\n\n\u4f7f\u7528AggregateApplicationBuilder\u529f\u80fd\u7c7b\u6765\u5b9e\u73b0\u805a\u5408\uff0c\u5982\u4e0b\u4f8b\u5b50\u6240\u793a\u3002\u8003\u8651\u4e00\u4e2a\u5305\u542bsource,processor\u548csink\u7684\u5de5\u7a0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u793a\u5305\u542b\u5728\u5de5\u7a0b\u4e2d\uff0c\u6216\u8005\u5305\u542b\u5728\u5de5\u7a0b\u7684\u4f9d\u8d56\u4e2d\u3002\n\n\n@SpringBootApplication\n@EnableBinding(Sink.class)\npublic class SinkApplication {\n\n    private static Logger logger = LoggerFactory.getLogger(SinkModuleDefinition.class);\n\n    @ServiceActivator(inputChannel=Sink.INPUT)\n    public void loggerSink(Object payload) {\n        logger.info(\"Received: \" + payload);\n    }\n}\n\n\n\n\n@SpringBootApplication\n@EnableBinding(Processor.class)\npublic class ProcessorApplication {\n\n    @Transformer\n    public String loggerSink(String payload) {\n        return payload.toUpperCase();\n    }\n}\n\n\n\n\n@SpringBootApplication\n@EnableBinding(Source.class)\npublic class SourceApplication {\n\n    @Bean\n    @InboundChannelAdapter(value = Source.OUTPUT)\n    public String timerMessageSource() {\n        return new SimpleDateFormat().format(new Date());\n    }\n}\n\n\n\n\n\u6bcf\u4e00\u4e2a\u914d\u7f6e\u53ef\u7528\u4e8e\u8fd0\u884c\u4e00\u4e2a\u72ec\u7acb\u7684\u7ec4\u4ef6\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u805a\u5408\uff1a\n\n\n@SpringBootApplication\npublic class SampleAggregateApplication {\n\n    public static void main(String[] args) {\n        new AggregateApplicationBuilder()\n            .from(SourceApplication.class).args(\"--fixedDelay=5000\")\n            .via(ProcessorApplication.class)\n            .to(SinkApplication.class).args(\"--debug=true\").run(args);\n    }\n}\n\n\n\n\n\u5e8f\u5217\u7684\u5f00\u59cb\u7ec4\u4ef6\u4f5c\u4e3afrom()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5e8f\u5217\u7684\u7ed3\u675f\u7ec4\u4ef6\u4f5c\u4e3ato()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u4e2d\u95f4\u5904\u7406\u5668\u4f5c\u4e3avia()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u540c\u4e00\u7c7b\u578b\u7684\u5904\u7406\u5668\u53ef\u4ee5\u94fe\u5728\u4e00\u8d77\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u914d\u7f6e\u7684\u7ba1\u9053\u4f20\u8f93\u65b9\u5f0f\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4e3aSpring Boot\u63d0\u4f9b\u8fd0\u884c\u65f6\u53c2\u6570\u3002\n\n\nRxJava \u652f\u6301\n#\n\n\nRxJava \u662f\u4e00\u4e2a\u54cd\u5e94\u5f0f\u7f16\u7a0b\u6846\u67b6\uff0cSpringCloudStream\u901a\u8fc7\nRxJavaProcessor\n\u53ef\u4ee5\u652f\u6301RxJava\u7684processor\uff0c\u53c2\u89c1\nspring-cloud-stream-rxjava\n\n\npublic interface RxJavaProcessor<I, O> {\n    Observable<O> process(Observable<I> input);\n}\n\n\n\n\nRxJavaProcessor\uff08\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\uff09\u6536\u5230\u89c2\u5bdf\u5f97\u5230\u7684\u5bf9\u8c61Observable\u4f5c\u4e3a\u8f93\u5165\uff0c\u76f8\u5f53\u4e8e\u6570\u636e\u6d41\u7684\u8f93\u5165\u88c5\u8f7d\u5668\u3002\u5728\u542f\u52a8\u65f6\u8c03\u7528process\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6570\u636e\u6d41\u3002\n\n\n\u7528@EnableRxJavaProcessor\u4fee\u9970\u5728\u4f60\u7684\u5904\u7406\u65b9\u6cd5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u542f\u7528\u57fa\u4e8eRxJava\u7684\u5904\u7406\u5668\u3002@EnableRxJavaProcessor\u5305\u542b\u4e86@EnableBinding(Processor.class)\u6ce8\u89e3\u5e76\u53ef\u4ee5\u521b\u5efaProcessor\uff0c\u5982\u4e0b\uff1a\n\n\n@EnableRxJavaProcessor\npublic class RxJavaTransformer {\n\n    private static Logger logger = LoggerFactory.getLogger(RxJavaTransformer.class);\n\n    @Bean\n    public RxJavaProcessor<String,String> processor() {\n        return inputStream -> inputStream.map(data -> {\n            logger.info(\"Got data = \" + data);\n            return data;\n        })\n        .buffer(5)\n        .map(data -> String.valueOf(avg(data)));\n    }\n\n    private static Double avg(List<String> data) {\n        double sum = 0;\n        double count = 0;\n        for(String d : data) {\n            count++;\n            sum += Double.valueOf(d);\n        }\n        return sum/count;\n    }\n}\n\n\n\n\n\n\n\u5b9e\u65bdRxJava\u5904\u7406\u5668\uff0c\u5904\u7406\u6d41\u7a0b\u4e2d\u7684\u5f02\u5e38\u7279\u522b\u91cd\u8981\uff0c\u672a\u6355\u83b7\u7684\u5f02\u5e38\u5c06\u88ab\u89c6\u4e3aerrors\uff0c\u5e76\u4f1a\u7ed3\u675fObservable\uff0c\u4e2d\u65ad\u4e86\u5904\u7406\u6d41\u7a0b\u3002\n\n\n\n\n\u7ed1\u5b9a\u5668\n#\n\n\nSpringCloudStream\u63d0\u4f9b\u7ed1\u5b9a\u62bd\u8c61\u7528\u4e8e\u4e0e\u5916\u90e8\u4e2d\u95f4\u4ef6\u4e2d\u7684\u7269\u7406\u76ee\u6807\u8fdb\u884c\u8fde\u63a5\u3002\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecdBinder SPI\u80cc\u540e\u7684\u4e3b\u8981\u6982\u5ff5\uff0c\u4e3b\u8981\u7ec4\u4ef6\u4ee5\u53ca\u5b9e\u73b0\u7ec6\u8282\u3002\n\n\n\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\n#\n\n\n\n\n\u4efb\u4f55\u5f80\u901a\u9053\u4e2d\u53d1\u5e03\u6d88\u606f\u7684\u7ec4\u4ef6\u90fd\u53ef\u79f0\u4f5c\u751f\u4ea7\u8005\u3002\u901a\u9053\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7406\u7684Binder\u5b9e\u73b0\u4e0e\u5916\u90e8\u6d88\u606f\u4ee3\u7406\u8fdb\u884c\u7ed1\u5b9a\u3002\u8c03\u7528bindProducer()\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4ee3\u7406\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u672c\u5730\u901a\u9053\u76ee\u6807\u540d\u79f0\uff08\u751f\u4ea7\u8005\u5411\u672c\u5730\u901a\u9053\u53d1\u9001\u6d88\u606f\uff09\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u5305\u542b\u901a\u9053\u521b\u5efa\u7684\u9002\u914d\u5668\u7684\u5c5e\u6027\u4fe1\u606f\uff08\u6bd4\u5982\uff1a\u5206\u7247key\u8868\u8fbe\u5f0f\uff09\u3002 \n\n\n\u4efb\u4f55\u4ece\u901a\u9053\u4e2d\u63a5\u6536\u6d88\u606f\u7684\u7ec4\u4ef6\u90fd\u53ef\u79f0\u4f5c\u6d88\u8d39\u8005\u3002\u4e0e\u751f\u4ea7\u8005\u4e00\u6837\uff0c\u6d88\u8d39\u8005\u901a\u9053\u53ef\u4ee5\u4e0e\u5916\u90e8\u6d88\u606f\u4ee3\u7406\u8fdb\u884c\u7ed1\u5b9a\u3002\u8c03\u7528bindConsumer()\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63d0\u4f9b\u4e86\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u79f0\u3002\u6bcf\u4e2a\u7ec4\u90fd\u4f1a\u6536\u5230\u751f\u4ea7\u4e2d\u53d1\u51fa\u6d88\u606f\u7684\u526f\u672c\uff08\u5373\uff0c\u53d1\u5e03-\u8ba2\u9605\u8bed\u4e49\uff09\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6d88\u8d39\u8005\u7ed1\u5b9a\u76f8\u540c\u7684\u7ec4\u540d\u79f0\uff0c\u6d88\u606f\u53ea\u4f1a\u7531\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff08\u5373\uff0c\u961f\u5217\u8bed\u4e49\uff09\n\n\nBinder SPI\n#\n\n\nBinder Detection\n#\n\n\nClasspath Detection\n#\n\n\nMultiple Binders on the Classpath\n#\n\n\nConnecting to Multiple Systems\n#\n\n\nBinder configuration properties\n#\n\n\nImplementation strategies\n#\n\n\nKafka Binder\n#\n\n\nRabbitMQ Binder\n#\n\n\n\u914d\u7f6e\u7ba1\u7406\n#\n\n\nSpringCloudStream \u652f\u6301\u901a\u7528\u7684\u914d\u7f6e\u4ee5\u53cabindings\u548cbinders\u7684\u914d\u7f6e\uff0c\u4e00\u4e9bbinders\u5141\u8bb8binding\u5c5e\u6027\u7528\u6765\u652f\u6301\u4e2d\u95f4\u4ef6\u7684\u7279\u5b9a\u529f\u80fd\u3002\n\n\nSpringCloudStream\u914d\u7f6e\u9879\n#\n\n\nspring.cloud.stream.instanceCount\n\n\n\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5b9e\u4f8b\u7684\u6570\u91cf\u3002\u5982\u679c\u4f7f\u7528\u5361\u592b\u5361\u5219\u4f1a\u8bbe\u7f6e\u5206\u533a\u3002\n\n\nDefault: 1 \n\n\nspring.cloud.stream.instanceIndex\n\n\n\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5b9e\u4f8b\u7684\u6570\u91cf\uff0c\u5927\u5c0f\u4ecb\u4e8e0 ~ \uff08instanceCount-1\uff09\uff0c\u7528\u4e8ekafka\u5bfb\u627e\u5206\u533a\u3002\u5728Cloud Foundry\u4e2d\u4f1a\u81ea\u52a8\u8bbe\u7f6e\n\n\nDefault: 1 \n\n\nspring.cloud.stream.dynamicDestinations\n\n\nA list of destinations that can be bound dynamically (for example, in a dynamic routing scenario). If set, only listed destinations can be bound.\n\n\nDefault: empty \n\n\nspring.cloud.stream.defaultBinder\n\n\nThe default binder to use, if multiple binders are configured\n\n\nDefault: empty\n\n\nspring.cloud.stream.overrideCloudConnectors\n\n\nThis property is only applicable when the cloud profile is active and Spring Cloud Connectors are provided with the application. If the property is false (the default), the binder will detect a suitable bound service (e.g. a RabbitMQ service bound in Cloud Foundry for the RabbitMQ binder) and will use it for creating connections (usually via Spring Cloud Connectors). When set to true, this property instructs binders to completely ignore the bound services and rely on Spring Boot properties (e.g. relying on the spring.rabbitmq.* properties provided in the environment for the RabbitMQ binder). The typical usage of this property is to be nested in a customized environment when connecting to multiple systems.\n\n\nDefault: false\n\n\nBinding\u914d\u7f6e\u9879\n#\n\n\n\u914d\u7f6e\u683c\u5f0f\u4e3a\nspring.cloud.stream.bindings.<channelName>.<property>=<value>\n\uff0c\n<channelName>\n\u662f\u914d\u7f6e\u7684\u9891\u9053\u540d\u79f0 (e.g., output for a Source)\uff0c\u4e0b\u9762\u7684\u4ecb\u7ecd\u4e2d\u7701\u7565\nspring.cloud.stream.bindings.<channelName>.\n\u524d\u7f00\uff0c\u53ea\u5173\u6ce8\u5c5e\u6027\u53c2\u6570\n\n\nSpringCloudStream\u7684bindings\u914d\u7f6e\n#\n\n\n\u4e0b\u9762\u7684\u914d\u7f6e\u5bf9\u4e8einput bindings\u548coutput bindings\u90fd\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f\nspring.cloud.stream.bindings.<channelName>.\n\n\ndestination\n\n\n\u7ed1\u5b9a\u4e2d\u95f4\u4ef6\u7684\u76ee\u7684 (e.g., the RabbitMQ exchange or Kafka topic)\u3002\u5982\u679cchannel\u7ed1\u5b9a\u7684\u662f\u6d88\u8d39\u8005\uff0c\u90a3\u4e48\u53ef\u4ee5\u7ed1\u5b9a\u591a\u4e2a\u76ee\u7684\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u5219channel\u540d\u79f0\u4f1a\u66ff\u4ee3\u8fd9\u4e2a\u503c\u3002\n\n\ngroup\n\n\nchannel\u7684\u6d88\u8d39\u8005\u7ec4\uff0c\u4ec5\u5bf9inbound bindings\u6709\u6548\u3002\n\n\nDefault: null \uff08\u6697\u793a\u4e00\u4e2a\u533f\u540d\u6d88\u8d39\u8005\uff09\n\n\ncontentType\n\n\nThe content type of the channel.\n\n\nDefault: null (so that no type coercion is performed).\n\n\nbinder\n\n\nThe binder used by this binding. See Multiple Binders on the Classpath for details.\n\n\nDefault: null (the default binder will be used, if one exists).\n\n\nConsumer properties\n#\n\n\n\u4e0b\u9762\u7684\u914d\u7f6e\u4ec5\u5bf9input bindings\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f\nspring.cloud.stream.bindings.<channelName>.consumer.\n\n\nconcurrency\n\n\nThe concurrency of the inbound consumer.\n\n\nDefault: 1\n\n\npartitioned\n\n\nWhether the consumer receives data from a partitioned producer.\n\n\nDefault: false\n\n\nheaderMode\n\n\nWhen set to raw, disables header parsing on input. Effective only for messaging middleware that does not support message headers natively and requires header embedding. Useful when inbound data is coming from outside Spring Cloud Stream applications.\n\n\nDefault: embeddedHeaders.\n\n\nmaxAttempts\n\n\nThe number of attempts of re-processing an inbound message.\n\n\nDefault: 3.\n\n\nbackOffInitialInterval\n\n\nThe backoff initial interval on retry.\n\n\nDefault: 1000.\n\n\nbackOffMaxInterval\n\n\nThe maximum backoff interval.\n\n\nDefault: 10000.\n\n\nbackOffMultiplier\n\n\nThe backoff multiplier.\n\n\nDefault: 2.0.\n\n\nProducer Properties\n#\n\n\n\u4e0b\u9762\u7684\u914d\u7f6e\u4ec5\u5bf9output bindings\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f\nspring.cloud.stream.bindings.<channelName>.producer.\n\n\npartitionKeyExpression\n\n\nA SpEL expression that determines how to partition outbound data. If set, or if partitionKeyExtractorClass is set, outbound data on this channel will be partitioned, and partitionCount must be set to a value greater than 1 to be effective. The two options are mutually exclusive. See Partitioning Support.\n\n\nDefault: null.\n\n\npartitionKeyExtractorClass\n\n\nA PartitionKeyExtractorStrategy implementation. If set, or if partitionKeyExpression is set, outbound data on this channel will be partitioned, and partitionCount must be set to a value greater than 1 to be effective. The two options are mutually exclusive. See Partitioning Support.\n\n\nDefault: null.\n\n\npartitionSelectorClass\n\n\nA PartitionSelectorStrategy implementation. Mutually exclusive with partitionSelectorExpression. If neither is set, the partition will be selected as the hashCode(key) % partitionCount, where key is computed via either partitionKeyExpression or partitionKeyExtractorClass.\n\n\nDefault: null.\n\n\npartitionSelectorExpression\n\n\nA SpEL expression for customizing partition selection. Mutually exclusive with partitionSelectorClass. If neither is set, the partition will be selected as the hashCode(key) % partitionCount, where key is computed via either partitionKeyExpression or partitionKeyExtractorClass.\n\n\nDefault: null.\n\n\npartitionCount\n\n\nThe number of target partitions for the data, if partitioning is enabled. Must be set to a value greater than 1 if the producer is partitioned. On Kafka, interpreted as a hint; the larger of this and the partition count of the target topic is used instead.\n\n\nDefault: 1.\n\n\nrequiredGroups\n\n\nA comma-separated list of groups to which the producer must ensure message delivery even if they start after it has been created (e.g., by pre-creating durable queues in RabbitMQ).\n\n\nheaderMode\n\n\nWhen set to raw, disables header embedding on output. Effective only for messaging middleware that does not support message headers natively and requires header embedding. Useful when producing data for non-Spring Cloud Stream applications.\n\n\nDefault: embeddedHeaders.\n\n\nBinder-Specific Configuration\n#\n\n\nRabbit-Specific Settings\n#\n\n\nRabbitMQ Binder Properties\n#\n\n\nRabbitMQ Consumer Properties\n#\n\n\nRabbit Producer Properties\n#\n\n\nKafka-Specific Settings\n#\n\n\nKafka Binder Properties\n#\n\n\nKafka Consumer Properties\n#\n\n\nKafka Producer Properties\n#\n\n\nContent Type and Transformation\n#\n\n\nMIME types\n#\n\n\nMIME types and Java types\n#\n\n\n@StreamListener and Message Conversion\n#\n\n\n\u5e94\u7528\u7a0b\u5e8f\u95f4\u901a\u4fe1\n#\n\n\n\u8fde\u63a5\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\n#\n\n\nSpringCloudStream\u4f7fSpringBoot\u5e94\u7528\u8fde\u63a5\u6d88\u606f\u7cfb\u7edf\u53d8\u5f97\u5bb9\u6613\uff0c\u5178\u578b\u60c5\u51b5\u662f\u591a\u5e94\u7528\u7ba1\u9053\u7684\u521b\u4f5c\uff0c\u5fae\u670d\u52a1\u901a\u8fc7\u8fd9\u4e2a\u7ba1\u9053\u5f7c\u6b64\u53d1\u9001\u6570\u636e\u3002\n\n\n\u4e3a\u4e86\u5b9e\u73b0TimeSource\u5e94\u7528\u7684\u6570\u636e\u53d1\u9001\u7ed9LogSink\u5e94\u7528\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u76f8\u540c\u7684\u76ee\u7684\u5730\u540d\u5b57\u6765\u7ed1\u5b9a\u4ed6\u4eec\u3002\n\n\nTimeSource\u7684\u914d\u7f6e\u5982\u4e0b\n\n\nspring.cloud.stream.bindings.output.destination=ticktock\n\n\nLogSink\u7684\u914d\u7f6e\u5982\u4e0b\n\n\nspring.cloud.stream.bindings.input.destination=ticktock\n\n\n\u5b9e\u4f8b\u7d22\u5f15\u548c\u5b9e\u4f8b\u6570\n#\n\n\n\u5f53\u6c34\u5e73\u6269\u5c55SpringCloudStream\u5e94\u7528\u65f6\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u6536\u5230\u6d88\u606f\uff0c\u8fd9\u4e2a\u6d88\u606f\u662f\u5173\u4e8e\u672c\u5e94\u7528\u8fd0\u884c\u7684\u5b9e\u4f8b\u6570\u91cf\u548c\u6bcf\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684\u7d22\u5f15\u503c\u3002\u5229\u7528\nspring.cloud.stream.instanceCount\n\u548c\nspring.cloud.stream.instanceIndex\n\u5c31\u80fd\u505a\u5230\u4e0a\u9762\u7684\u6240\u8ff0\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff1a\u5982\u679c\u6709\u4e09\u4e2aHDFS\u7684sink application\uff0c\u8fd9\u4e09\u4e2a\u5b9e\u4f8b\u90fd\u8bbe\u7f6e\u4e86\nspring.cloud.stream.instanceCount=3\n\uff0c\u5e76\u4e14\u53c8\u5206\u522b\u8bbe\u7f6e\u4e86\nspring.cloud.stream.instanceIndex\n\u7684\u503c\u4e3a0\uff0c1\uff0c2\u3002\n\n\n\u5f53SpringCloudStream\u5e94\u7528\u901a\u8fc7SpringCloudDataFlow\u90e8\u7f72\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u81ea\u52a8\u914d\u7f6e\u3002\u5982\u679c\u662f\u72ec\u7acb\u90e8\u7f72\uff0c\u90a3\u8fd9\u4e9b\u53c2\u6570\u5fc5\u987b\u88ab\u6b63\u786e\u914d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\nspring.cloud.stream.instanceCount=1\n\uff0c\nspring.cloud.stream.instanceIndex=0\n\n\n\u6c34\u5e73\u6269\u5c55\u6269\u5c55\u7684\u6848\u4f8b\u4e2d\uff0c\u6b63\u786e\u7684\u914d\u7f6e\u8fd9\u4e24\u4e2a\u53c2\u6570\u5bf9\u4e8e\u8bbf\u95ee\u5206\u533a\u7684\u884c\u4e3a\u5341\u5206\u91cd\u8981\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u786e\u5b9a\u7684binders(e.g., the Kafka binder) \uff0c\u4e0a\u8ff0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u80fd\u88ab\u6b63\u786e\u5206\u914d\u5728\u591a\u4e2a\u6d88\u8d39\u7aef\u5b9e\u4f8b\u3002\n\n\n\u5206\u533a\n#\n\n\n\u914d\u7f6eOutput Bindings\n#\n\n\noutput binding\u7684\u914d\u7f6e\u662f\u7528\u4e8e\u53d1\u9001\u5206\u533a\u6570\u636e\uff0c\u914d\u7f6e\npartitionKeyExpression\n\u6216\npartitionKeyExtractorClass\n\u4ee5\u53ca\npartitionCount\n\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u6548\u7684\u548c\u5178\u578b\u7684\u914d\u7f6e\uff1a\n\n\nspring.cloud.stream.bindings.output.producer.partitionKeyExpression=payload.id\nspring.cloud.stream.bindings.output.producer.partitionCount=5\n\n\n\n\n\u57fa\u4e8e\u4e0a\u8ff0\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5c06\u88ab\u7528\u4e0b\u8ff0\u903b\u8f91\u53d1\u9001\u5230\u76ee\u6807\u5206\u533a\u3002\n\n\n\u5206\u533akey\u7684\u503c\u662f\u57fa\u4e8epartitionKeyExpression\u8ba1\u7b97\u5f97\u51fa\u7684\uff0c\u7528\u4e8e\u6bcf\u4e2a\u6d88\u606f\u88ab\u53d1\u9001\u81f3\u5206\u533a\u7684\u8f93\u51fachannel\uff0cpartitionKeyExpression\u662fspirng EL\u8868\u8fbe\u5f0f\u7528\u4ee5\u63d0\u53d6\u5206\u533a\u952e\u3002\n\n\n\n\n\u5982\u679cSpEL\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\npartitionKeyExtractorClass\n\u8bbe\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7c7b\u53bb\u8ba1\u7b97\u5206\u533a\u7684key\u503c\uff0c\u8fd9\u4e2a\u7c7b\u9700\u8981\u5b9e\u73b0\norg.springframework.cloud.stream.binder.PartitionKeyExtractorStrategy\n\u63a5\u53e3\uff0c\u901a\u5e38\u60c5\u51b5\u4e0bSpEL\u662f\u591f\u7528\u7684\uff0c\u66f4\u590d\u6742\u7684\u60c5\u51b5\u624d\u4f1a\u7528\u5230\u81ea\u5b9a\u4e49\u7684\u7b56\u7565\u3002\n\n\n\n\n\u4e00\u65e6\u6d88\u606f\u7684key\u88ab\u7b97\u51fa\uff0c\u5206\u533a\u9009\u62e9\u5668\u5c06\u4f1a\u786e\u5b9a\u76ee\u6807\u5206\u533a\u503c\uff0c\u8fd9\u4e2a\u503c\u4ecb\u4e8e0 \u548c partitionCount - 1\u4e4b\u95f4\uff0c\u9ed8\u8ba4\u7684\u7b97\u6cd5\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9002\u7528\uff0c\u662f\u57fa\u4e8e\u516c\u5f0f\u7684\nkey.hashcode() % partitioncount\n\u3002\n\n\n\u989d\u5916\u7684\u5c5e\u6027\u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u66f4\u9ad8\u7ea7\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u9762\u7684\u7ae0\u8282\u6240\u8ff0\u3002\n\n\n\n\nKafka binder\u4f7f\u7528\npartitionCount\n\u505a\u521b\u5efatopic\u7684\u7ebf\u7d22\u5229\u7528\u7ed9\u5b9a\u7684\u5206\u533a\u6570\uff08\u8fd9\u4e2a\u6570\u662f\npartitionCount\n\u4e0e\nminPartitionCount\n\u7684\u6700\u5927\u503c\uff09\u3002\u5f53\u4e3abinder\u914d\u7f6e\nminPartitionCount\n\uff0c\u4e3a\u5e94\u7528\u914d\u7f6e\npartitionCount\n\u7684\u65f6\u5019\u4f60\u8981\u5c0f\u5fc3\uff0c\u4e24\u8005\u8f83\u5927\u7684\u503c\u5c06\u4f1a\u88ab\u4f7f\u7528\u3002\u5982\u679c\u4e00\u4e2atopic\u5df2\u7ecf\u5b58\u5728\u4e0e\u5c0f\u5206\u533a\u6570\u7684kafka\u4e2d\uff0c\u5e76\u4e14\nautoAddPartitions\n\u662f\u88ab\u7981\u7528\u7684\uff08\u9ed8\u8ba4\u5982\u6b64\uff09\uff0c\u90a3\u4e48binder\u5c06\u542f\u52a8\u5931\u8d25\uff0c\u5982\u679c\nautoAddPartitions\n\u662f\u542f\u7528\u7684\u5219\u4f1a\u81ea\u52a8\u6dfb\u52a0\u65b0\u5206\u533a\u3002\u5982\u679ctopic\u5df2\u7ecf\u5b58\u4e8e\u5927\u5206\u533a\u6570\u7684kafka\uff08\u6bd4\nminPartitionCount\n \u548c \npartitionCount\n\u7684\u503c\u90fd\u5927\uff09\uff0c\u8fd9\u4e2a\u5b58\u5728\u7684\u5206\u533a\u5c06\u4f1a\u88ab\u4f7f\u7528\u3002\n\n\n\n\n\u914d\u7f6eInput Bindings\n#\n\n\n\u901a\u8fc7\u914d\u7f6e\u5206\u533a\u5c5e\u6027\u6765\u63a5\u6536\u5206\u533a\u4e2d\u7684\u6570\u636e\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\uff1a\n\n\nspring.cloud.stream.bindings.input.consumer.partitioned=true\nspring.cloud.stream.instanceIndex=3\nspring.cloud.stream.instanceCount=5\n\n\n\n\ninstanceCount\n\u8868\u793a\u5e94\u7528\u5b9e\u4f8b\u7684\u603b\u6570\uff0c\ninstanceIndex\n\u5728\u591a\u4e2a\u5b9e\u4f8b\u4e2d\u5fc5\u987b\u552f\u4e00\uff0c\u5e76\u4ecb\u4e8e0~\uff08instanceCount-1\uff09\u4e4b\u95f4\u3002\u5b9e\u4f8b\u7684\u7d22\u5f15\u53ef\u4ee5\u5e2e\u52a9\u6bcf\u4e2a\u5b9e\u4f8b\u786e\u5b9a\u552f\u4e00\u7684\u63a5\u6536\u6570\u636e\u7684\u5206\u533a\uff0c\u6b63\u786e\u7684\u8bbe\u7f6e\u8fd9\u4e24\u4e2a\u503c\u5341\u5206\u91cd\u8981\uff0c\u7528\u6765\u786e\u4fdd\u6240\u6709\u7684\u6570\u636e\u88ab\u6d88\u8017\uff0c\u4ee5\u53ca\u5e94\u7528\u5b9e\u4f8b\u63a5\u6536\u76f8\u4e92\u6392\u65a5\u7684\u6570\u636e\u96c6\u3002\n\n\n\u4f7f\u7528\u591a\u5b9e\u4f8b\u8fdb\u884c\u5206\u533a\u6570\u636e\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u8bbe\u7f6e\uff0cSpringCloudDataFlow\u53ef\u4ee5\u663e\u8457\u7684\u7b80\u5316\u8fc7\u7a0b\uff0c\u901a\u8fc7\u6b63\u786e\u7684\u586b\u5199\u8f93\u5165\u548c\u8f93\u51fa\u503c\uff0c\u4ee5\u53ca\u4fe1\u4efb\u8fd0\u884c\u65f6\u63d0\u4f9b\u7684instance\u7d22\u5f15\u548cinstance\u6570\u91cf\u4fe1\u606f\n\n\nTesting\n#\n\n\n\u5065\u5eb7\u6307\u793a\u5668\n#\n\n\nSpringCloudStream\u63d0\u4f9bbinders\u5065\u5eb7\u6307\u793a\u5668\uff0c\u4ed6\u4ee5binders\u540d\u5b57\u6ce8\u518c\uff0c\u53ef\u4ee5\u7531\nmanagement.health.binders.enabled\n\u5f00\u63a7\u5236\u542f\u52a8\u6216\u505c\u6b62\n\n\n\u4f8b\u5b50\n#\n\n\nspring-cloud-stream-samples\n\n\nGetting Started\n#",
            "title": "Spring Cloud stream"
        },
        {
            "location": "/user-guide/stream/#spring-cloud-stream",
            "text": "\u8fd9\u4e00\u8282\u5c06\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528SpringCloudStream\u5de5\u4f5c\uff0c\u5b83\u6db5\u76d6\u4e3b\u9898\u4e86\u521b\u5efa\u548c\u8fd0\u884cStream\u5e94\u7528\u3002",
            "title": "Spring Cloud Stream"
        },
        {
            "location": "/user-guide/stream/#_1",
            "text": "SpringCloudStream\u662f\u4e00\u4e2a\u6784\u5efa\u6d88\u606f\u9a71\u52a8\u7684\u5fae\u670d\u52a1\u6846\u67b6\u3002SpringCloudStream\u6784\u5efa\u5728SpringBoot\u4e4b\u4e0a\u7528\u4ee5\u521b\u5efa\u5de5\u4e1a\u7ea7\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14Spring Integration\u63d0\u4f9b\u4e86\u548c\u6d88\u606f\u4ee3\u7406\u7684\u8fde\u63a5\u3002SpringCloudStream\u63d0\u4f9b\u51e0\u4e2a\u5382\u5546\u6d88\u606f\u4e2d\u95f4\u4ef6\u4e2a\u6027\u5316\u914d\u7f6e\uff0c\u5f15\u5165\u53d1\u5e03\u8ba2\u9605\u3001\u6d88\u8d39\u7ec4\u548c\u5206\u533a\u7684\u8bed\u4e49\u6982\u5ff5\u3002  \u6dfb\u52a0@EnableBinding\u6ce8\u89e3\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u88ab@StreamListener\u4fee\u9970\u7684\u65b9\u6cd5\u53ef\u4ee5\u7acb\u5373\u8fde\u63a5\u5230\u6d88\u606f\u4ee3\u7406\u63a5\u6536\u6d41\u5904\u7406\u4e8b\u4ef6\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u6536\u5916\u90e8\u6d88\u606f\u7684\u63a5\u6536\u5668\u5e94\u7528\u7a0b\u5e8f  @SpringBootApplication\npublic class StreamApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(StreamApplication.class, args);\n  }\n}\n\n@EnableBinding(Sink.class)\npublic class TimerSource {\n\n  ...\n\n  @StreamListener(Sink.INPUT)\n  public void processVote(Vote vote) {\n      votingService.recordVote(vote);\n  }\n}  @EnableBinding\u6ce8\u89e3\u4f7f\u7528\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u63a5\u53e3\u4f5c\u4e3a\u53c2\u6570\uff08\u672c\u4f8b\u5b50\u4e2d\uff0c\u53c2\u6570\u662f\u5355\u72ec\u7684Sink\u63a5\u53e3\uff09\uff0c\u63a5\u53e3\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u8f93\u5165\u6216\u8f93\u51fa\u7684channels\uff0cSpringCloudStream\u5b9a\u4e49\u4e86\u4e09\u4e2a\u63a5\u53e3 Source \uff0c Sink \uff0c Processor \uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u63a5\u53e3\u3002  \u4e0b\u9762\u662fSink\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a  public interface Sink {\n  String INPUT = \"input\";\n\n  @Input(Sink.INPUT)\n  SubscribableChannel input();\n}  @Input \u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u6536\u6d88\u606f\u7684\u8f93\u5165channel\uff0c @Output \u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d1\u5e03\u6d88\u606f\u7684\u8f93\u51fachannel\uff0c\u8fd9\u4e24\u4e2a\u6ce8\u89e3\u652f\u6301\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3achannel\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u53c2\u6570\u5219\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u540d\u5c06\u88ab\u8bbe\u7f6e\u4e3achannel\u540d\u79f0\u3002  SpringCloudStream\u4f1a\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u88c5\u914d\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\u5b83\uff0c\u5982\u4e0b\u4f8b\uff1a  @RunWith(SpringJUnit4ClassRunner.class)\n@SpringApplicationConfiguration(classes = StreamApplication.class)\n@WebAppConfiguration\n@DirtiesContext\npublic class StreamApplicationTests {\n\n  @Autowired\n  private Sink sink;\n\n  @Test\n  public void contextLoads() {\n    assertNotNull(this.sink.input());\n  }\n}",
            "title": "\u7b80\u4ecb"
        },
        {
            "location": "/user-guide/stream/#_2",
            "text": "SpringCloudStream\u63d0\u4f9b\u4e86\u5f88\u591a\u62bd\u8c61\u548c\u57fa\u7840\u7ec4\u4ef6\u6765\u7b80\u5316\u6d88\u606f\u9a71\u52a8\u578b\u5fae\u670d\u52a1\u5e94\u7528\u3002\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a   Spring Cloud Stream\u7684\u5e94\u7528\u6a21\u578b  \u7ed1\u5b9a\u62bd\u8c61  \u6301\u4e45\u5316\u53d1\u5e03\uff0f\u8ba2\u9605\u652f\u6301  \u6d88\u8d39\u8005\u7ec4\u652f\u6301  \u5206\u7247\u652f\u6301\uff08Partitioning Support\uff09  \u53ef\u63d2\u62d4API",
            "title": "\u4e3b\u8981\u6982\u5ff5"
        },
        {
            "location": "/user-guide/stream/#_3",
            "text": "SpringCloudStream\u7531\u4e00\u4e2a\u4e2d\u7acb\u7684\u4e2d\u95f4\u4ef6\u5185\u6838\u7ec4\u6210\u3002SpringCloudStream\u4f1a\u6ce8\u5165\u8f93\u5165\u548c\u8f93\u51fa\u7684channels\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u8fd9\u4e9bchannels\u4e0e\u5916\u754c\u901a\u4fe1\uff0c\u800cchannels\u5219\u662f\u901a\u8fc7\u4e00\u4e2a\u660e\u786e\u7684\u4e2d\u95f4\u4ef6Binder\u4e0e\u5916\u90e8brokers\u8fde\u63a5\u3002",
            "title": "\u5e94\u7528\u6a21\u578b"
        },
        {
            "location": "/user-guide/stream/#fat-jar",
            "text": "SpringCloudStream\u53ef\u4ee5\u5728ide\u4e2d\u8fd0\u884c\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u4f8b\u7528\u6765\u6d4b\u8bd5\uff0c\u5982\u679c\u8981\u90e8\u7f72\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5219\u53ef\u4ee5\u901a\u8fc7Maven\u6216\u8005Gradle\u63d0\u4f9b\u7684Spring Boot\u5de5\u5177\u521b\u5efa\u53ef\u6267\u884cJAR\uff08\u80d6JAR\uff09",
            "title": "Fat JAR"
        },
        {
            "location": "/user-guide/stream/#_4",
            "text": "SpringCloudStream\u63d0\u4f9b\u5bf9Kafka\uff0cRabbit MQ\uff0cRedis\uff0c\u548cGemfire\u7684Binder\u5b9e\u73b0\u3002Spring Cloud Stream\u8fd8\u5305\u62ec\u4e86\u4e00\u4e2aTestSupportBinder\uff0cTestSupportBinder\u9884\u7559\u4e00\u4e2a\u672a\u66f4\u6539\u7684channel\u4ee5\u4fbf\u4e8e\u76f4\u63a5\u5730\u3001\u53ef\u9760\u5730\u548cchannels\u901a\u4fe1\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u53ef\u6269\u5c55\u7684API\u6765\u7f16\u5199\u81ea\u5df1\u7684Binder\u3002  SpringCloudStream\u4f7f\u7528SpringBoot\u505a\u914d\u7f6e\uff0c\u7ed1\u5b9a\u62bd\u8c61\u4f7f\u5f97SpringCloudStream\u5e94\u7528\u53ef\u4ee5\u7075\u6d3b\u7684\u8fde\u63a5\u5230\u4e2d\u95f4\u4ef6\u3002\u6bd4\u5982\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u7684\u9009\u62e9channels\u8fde\u63a5\u7684\u76ee\u6807\uff08\u53ef\u4ee5\u662fkafka topics\u6216RabbitMQ exchanges\uff09\u3002\u8fd9\u6837\u7684\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u5916\u90e8\u914d\u7f6e\u6216\u4efb\u4f55SpringBoot\u652f\u6301\u7684\u5f62\u5f0f\uff08\u5305\u62ec\u5e94\u7528\u53c2\u6570\uff0c\u73af\u5883\u53d8\u91cf\u548capplication.yml\u6216application.properties\u6587\u4ef6\uff09\u3002\u7b80\u4ecb\u4e00\u8282\u63d0\u5230\u7684sink\u4f8b\u5b50\u4e2d\uff0c\u5c06 spring.cloud.stream.bindings.input.destination \u8bbe\u7f6e\u6210 raw-sensor-data \u7a0b\u5e8f\u4f1a\u4ece\u547d\u540d\u4e3a raw-sensor-data \u7684kafka\u4e3b\u9898\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6216\u8005\u4ece\u4e00\u4e2a\u7ed1\u5b9a\u5230 raw-sensor-data \u7684rabbitmq\u4ea4\u6362\u673a\u7684\u961f\u5217\u4e2d\u8bfb\u53d6\u6570\u636e\u3002  SpringCloudStream\u80fd\u81ea\u52a8\u53d1\u73b0\u5e76\u4f7f\u7528\u7c7b\u8def\u5f84\u4e2d\u7684binder\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ee5\u76f8\u540c\u7684\u4ee3\u7801\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u4e2d\u95f4\u4ef6\uff1a\u53ea\u9700\u8981\u5728build\u7684\u65f6\u5019\u5f15\u5165\u4e0d\u540c\u7684binder\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u5f15\u5165\u591a\u4e2abinders\u5e76\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u4e0d\u540c\u7684channels\u9009\u62e9\u4e0d\u540c\u7684binder\u3002",
            "title": "\u7ed1\u5b9a\u62bd\u8c61"
        },
        {
            "location": "/user-guide/stream/#_5",
            "text": "\u5e94\u7528\u95f4\u901a\u4fe1\u9075\u7167\u53d1\u5e03-\u8ba2\u9605\u6a21\u578b\uff0c\u6570\u636e\u901a\u8fc7\u5171\u4eab\u7684topics\u8fdb\u884c\u5e7f\u64ad\uff0c\u4e0b\u56fe\u663e\u793a\u4e86SpringCloudStream\u5e94\u7528\u4ea4\u4e92\u7684\u5178\u578b\u90e8\u7f72.   \u6570\u636e\u88ab\u53d1\u9001\u5230\u4e00\u4e2a\u516c\u5171\u7684\u76ee\u6807 raw-sensor-data \uff0c\u5728\u76ee\u6807\u4e2d\uff0c\u6570\u636e\u5206\u522b\u88ab\u4e24\u4e2a\u72ec\u7acb\u7684\u5fae\u670d\u52a1\u52a0\u5de5\uff0c\u4e00\u4e2a\u5fae\u670d\u52a1\u8ba1\u7b97\u5e73\u5747\u7a97\u53e3\u65f6\u95f4\uff0c\u53e6\u4e00\u4e2a\u5c06\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5230HDFS\u3002\u4e3a\u4e86\u5904\u7406\u6570\u636e\uff0c\u4e24\u4e2a\u5fae\u670d\u52a1\u5728\u8fd0\u884c\u65f6\u58f0\u660e\u8fd9\u4e2atopic\u4f5c\u4e3a\u4ed6\u4eec\u7684\u8f93\u5165\u6e90\u3002  \u53d1\u5e03-\u8ba2\u9605\u901a\u4fe1\u6a21\u578b\u964d\u4f4e\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u590d\u6742\u6027\uff0c\u5e76\u5141\u8bb8\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u88ab\u6dfb\u52a0\u5230\u62d3\u6251\u7ed3\u6784\uff0c\u800c\u4e0d\u4f1a\u7834\u574f\u73b0\u6709\u7684\u6d41\u7a0b\u3002\u4f8b\u5982\uff0c\u4e0b\u6e38\u7684\u5e73\u5747\u8ba1\u7b97\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u8ba1\u7b97\u6700\u9ad8\u6e29\u5ea6\u7528\u6765\u663e\u793a\u548c\u76d1\u63a7\u3002\u7136\u540e\u60a8\u53ef\u4ee5\u518d\u6dfb\u52a0\u4e00\u4e2a\u57fa\u4e8e\u76f8\u540c\u6570\u636e\u6d41\u7684\uff0c\u89e3\u91ca\u6545\u969c\u68c0\u6d4b\u7684\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u901a\u8fc7\u5171\u540c\u7684topics\u505a\u6c9f\u901a\u76f8\u6bd4\u70b9\u5bf9\u70b9\u7684\u961f\u5217\u66f4\u80fd\u51cf\u5c11\u5fae\u670d\u52a1\u95f4\u7684\u8026\u5408\u3002  \u53d1\u5e03\u8ba2\u9605\u4e0d\u662f\u4e00\u4e2a\u65b0\u6982\u5ff5\uff0cSpringCloudStream\u5728\u4f60\u7684\u5e94\u7528\u4e2d\u63d0\u4f9b\u4e00\u4e2a\u989d\u5916\u7684\u624b\u6bb5\u4f9b\u4f60\u9009\u62e9\u3002\u901a\u8fc7\u4f7f\u7528\u672c\u5730\u4e2d\u95f4\u4ef6\u652f\u6301\uff0cSpringCloudStream\u7b80\u5316\u4e86\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u53d1\u5e03\u8ba2\u9605\u6a21\u578b\u3002",
            "title": "\u6301\u4e45\u5316\u53d1\u5e03\uff0f\u8ba2\u9605\u652f\u6301"
        },
        {
            "location": "/user-guide/stream/#_6",
            "text": "\u867d\u7136\u53d1\u5e03-\u8ba2\u9605\u6a21\u578b\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u901a\u8fc7\u5171\u4eabtopics\u8fde\u63a5\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u591a\u5b9e\u4f8b\u7684\u7684\u6269\u5f20\u80fd\u529b\u540c\u7b49\u91cd\u8981\u3002\u5f53\u8fd9\u6837\u505a\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u4e0d\u540c\u5b9e\u4f8b\u88ab\u653e\u7f6e\u5728\u4e00\u4e2a\u7ade\u4e89\u7684\u6d88\u8d39\u8005\u5173\u7cfb\u4e2d\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u5904\u7406\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6d88\u606f\u3002  SpringCloudStream\u5229\u7528\u6d88\u8d39\u8005\u7ec4\u5b9a\u4e49\u8fd9\u79cd\u884c\u4e3a\uff08\u8fd9\u79cd\u5206\u7ec4\u7c7b\u4f3c\u4e8eKafka consumer groups\uff0c\u7075\u611f\u4e5f\u6765\u6e90\u4e8e\u6b64\uff09\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u901a\u8fc7 spring.cloud.stream.bindings.input.group \u6307\u5b9a\u4e00\u4e2a\u7ec4\u540d\u79f0\uff0c\u4ee5\u4e0b\u56fe\u6240\u793a\u7684\u6d88\u8d39\u8005\u4e3a\u4f8b\uff0c\u5e94\u5206\u522b\u8bbe\u7f6e spring.cloud.stream.bindings.input.group=hdfsWrite \u548c spring.cloud.stream.bindings.input.group=average \u3002   \u6240\u6709\u8ba2\u9605\u6307\u5b9atopics\u7684\u7ec4\u90fd\u4f1a\u6536\u5230\u53d1\u5e03\u6570\u636e\u7684\u4e00\u4efd\u526f\u672c\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u7ec4\u5185\u53ea\u6709\u4e00\u4e2a\u6210\u5458\u4f1a\u6536\u5230\u8be5\u6d88\u606f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u4e00\u4e2a\u7ec4\u6ca1\u6709\u6307\u5b9a\u65f6\uff0cSpringCloudStream\u5c06\u5206\u914d\u7ed9\u4e00\u4e2a\u533f\u540d\u7684\u3001\u72ec\u7acb\u7684\u53ea\u6709\u4e00\u4e2a\u6210\u5458\u7684\u6d88\u8d39\u7ec4\uff0c\u8be5\u7ec4\u4e0e\u6240\u6709\u5176\u4ed6\u7ec4\u90fd\u5904\u4e8e\u4e00\u4e2a\u53d1\u5e03\uff0d\u8ba2\u9605\u5173\u7cfb\u4e2d\u3002",
            "title": "\u6d88\u8d39\u8005\u7ec4"
        },
        {
            "location": "/user-guide/stream/#_7",
            "text": "SpringCloudStream\u4e00\u81f4\u6027\u6a21\u578b\u4e2d\uff0c\u6d88\u8d39\u8005\u7ec4\u8ba2\u9605\u662f\u6301\u4e45\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u7ed1\u5b9a\u7684\u5b9e\u73b0\u786e\u4fdd\u7ec4\u7684\u8ba2\u9605\u8005\u662f\u6301\u4e45\u7684\u3002\u4e00\u65e6\u7ec4\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u5458\u521b\u5efa\u4e86\u8ba2\u9605\uff0c\u8fd9\u4e2a\u7ec4\u5c31\u4f1a\u6536\u5230\u6d88\u606f\uff0c\u5373\u4f7f\u7ec4\u4e2d\u6240\u6709\u7684\u5e94\u7528\u90fd\u88ab\u505c\u6b62\u4e86\uff0c\u7ec4\u4ecd\u7136\u4f1a\u6536\u5230\u6d88\u606f\u3002    \u533f\u540d\u8ba2\u9605\u662f\u975e\u6301\u4e45\u7684\uff0c\u4e00\u4e9bbinder\u7684\u5b9e\u73b0\uff08\u5982\uff1aRabbitMQ\uff09\uff0c\u53ef\u4ee5\u521b\u5efa\u975e\u6301\u4e45\u5316\uff08non\uff0ddurable\uff09\u7ec4\u8ba2\u9605   \u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5c06\u5e94\u7528\u7ed1\u5b9a\u5230\u7ed9\u5b9a\u76ee\u6807\u7684\u65f6\u5019\uff0c\u6700\u597d\u6307\u5b9a\u4e00\u4e2a\u6d88\u8d39\u8005\u7ec4\uff0c\u5f53\u6269\u5c55\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u65f6\uff0c\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8f93\u5165bindings\u6307\u5b9a\u4e00\u4e2a\u6d88\u8d39\u7ec4\uff0c\u8fd9\u9632\u6b62\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u4f8b\u63a5\u6536\u91cd\u590d\u7684\u6d88\u606f\uff08\u9664\u975e\u8be5\u884c\u4e3a\u662f\u9700\u8981\u7684\uff0c\u8fd9\u662f\u4e0d\u5bfb\u5e38\u7684\uff09\u3002",
            "title": "\u6301\u4e45\u6027"
        },
        {
            "location": "/user-guide/stream/#_8",
            "text": "SpringCloudStream\u652f\u6301\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u6570\u636e\u5206\u533a\uff0c\u5728\u5206\u533a\u7684\u60c5\u51b5\u4e0b\uff0c\u7269\u7406\u901a\u4fe1\u4ecb\u8d28\uff08\u4f8b\u5982\uff0ctopic\u4ee3\u7406\uff09\u88ab\u89c6\u4e3a\u591a\u5206\u533a\u7ed3\u6784\u3002\u4e00\u4e2a\u6216\u591a\u4e2a\u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\u5c06\u6570\u636e\u53d1\u9001\u7ed9\u591a\u4e2a\u6d88\u8d39\u5e94\u7528\u5b9e\u4f8b\uff0c\u5e76\u4fdd\u8bc1\u5171\u540c\u7684\u7279\u6027\u7684\u6570\u636e\u7531\u76f8\u540c\u7684\u6d88\u8d39\u8005\u5b9e\u4f8b\u5904\u7406\u3002  SpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u62bd\u8c61\uff0c\u7528\u4e8e\u7edf\u4e00\u65b9\u5f0f\u8fdb\u884c\u5206\u533a\u5904\u7406\uff0c\u56e0\u6b64\u5206\u533a\u53ef\u4ee5\u7528\u4e8e\u81ea\u5e26\u5206\u533a\u7684\u4ee3\u7406\uff08\u5982kafka\uff09\u6216\u8005\u4e0d\u5e26\u5206\u533a\u7684\u4ee3\u7406\uff08\u5982rabbiemq\uff09   \u5206\u533a\u5728\u6709\u72b6\u6001\u5904\u7406\u4e2d\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5176\u91cd\u8981\u6027\u4f53\u73b0\u5728\u6027\u80fd\u548c\u4e00\u81f4\u6027\u4e0a\uff0c\u8981\u786e\u4fdd\u6240\u6709\u76f8\u5173\u6570\u636e\u88ab\u4e00\u5e76\u5904\u7406\uff0c\u4f8b\u5982\uff0c\u5728\u65f6\u95f4\u7a97\u5e73\u5747\u8ba1\u7b97\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ed9\u5b9a\u4f20\u611f\u5668\u6d4b\u91cf\u7ed3\u679c\u5e94\u8be5\u90fd\u7531\u540c\u4e00\u5e94\u7528\u5b9e\u4f8b\u8fdb\u884c\u8ba1\u7b97\u3002   \u5982\u679c\u8981\u8bbe\u7f6e\u5206\u533a\u5904\u7406\u65b9\u6848\uff0c\u9700\u8981\u914d\u7f6e\u6570\u636e\u751f\u4ea7\u7aef\u70b9\u548c\u6570\u636e\u6d88\u8d39\u7aef\u70b9",
            "title": "\u5206\u533a\u652f\u6301"
        },
        {
            "location": "/user-guide/stream/#_9",
            "text": "\u672c\u8282\u4ecb\u7ecdSpringCloudStream\u7684\u7f16\u7a0b\u6a21\u578b\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u7ed1\u5b9a\u8f93\u5165\u548c\u8f93\u51fachannels\uff0c\u4ee5\u53ca\u5982\u4f55\u76d1\u542cchannels\u3002",
            "title": "\u7f16\u7a0b\u6a21\u578b"
        },
        {
            "location": "/user-guide/stream/#_10",
            "text": "",
            "title": "\u58f0\u660e\u548c\u7ed1\u5b9a\u901a\u9053"
        },
        {
            "location": "/user-guide/stream/#enablebinding",
            "text": "\u5c06@EnableBinding\u6ce8\u89e3\u6dfb\u52a0\u5230\u5e94\u7528\u7684\u914d\u7f6e\u7c7b\uff0c\u5c31\u53ef\u4ee5\u628a\u4e00\u4e2aspring\u5e94\u7528\u8f6c\u6362\u6210SpringCloudStream\u5e94\u7528\uff0c@EnableBinding\u6ce8\u89e3\u672c\u8eab\u5c31\u5305\u542b@Configuration\u6ce8\u89e3\uff0c\u4f1a\u89e6\u53d1SpringCloudStream \u57fa\u672c\u914d\u7f6e\u3002   ...\n@Import(...)\n@Configuration\n@EnableIntegration\npublic @interface EnableBinding {\n    ...\n    Class<?>[] value() default {};\n}  @EnableBinding\u6ce8\u89e3\u53ef\u4ee5\u63a5\u6536\u4e00\u4e2a\u6216\u591a\u4e2a\u63a5\u53e3\u7c7b\u4f5c\u4e3a\u53c2\u6570\uff0c\u540e\u8005\u5305\u542b\u4ee3\u8868\u4e86\u53ef\u7ed1\u5b9a\u6784\u4ef6\uff08\u4e00\u822c\u6765\u8bf4\u662f\u6d88\u606f\u901a\u9053\uff09\u7684\u65b9\u6cd5   \u5728SpringCloudStream1.0\u4e2d\uff0c\u4ec5\u6709\u7684\u53ef\u7ed1\u5b9a\u6784\u4ef6\u662fSpring Messaging  MessageChannel \u4ee5\u53ca\u5b83\u7684\u6269\u5c55 SubscribableChannel \u548c PollableChannel . \u672a\u6765\u7248\u672c\u4f1a\u4f7f\u7528\u76f8\u540c\u7684\u673a\u5236\u6269\u5c55\u5bf9\u5176\u4ed6\u7c7b\u578b\u6784\u4ef6\u7684\u652f\u6301\u3002\u5728\u672c\u6587\u6863\u4e2d\uff0c\u4f1a\u7ee7\u7eed\u5f15\u7528channels\u3002",
            "title": "\u901a\u8fc7@EnableBinding\u89e6\u53d1\u7ed1\u5b9a"
        },
        {
            "location": "/user-guide/stream/#input-output",
            "text": "\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u76ee\u7684input\u548coutput\u901a\u9053\uff0c\u540e\u8005\u901a\u8fc7 @Input \u548c @Output \u6ce8\u89e3\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u3002  public interface Barista {\n\n    @Input\n    SubscribableChannel orders();\n\n    @Output\n    MessageChannel hotDrinks();\n\n    @Output\n    MessageChannel coldDrinks();\n}  \u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\u4f5c\u4e3a@EnableBinding\u7684\u53c2\u6570\uff0c\u5c06\u89e6\u53d1\u4e09\u4e2abound channels\u7684\u521b\u5efa\uff0c\u540e\u8005\u7684\u5206\u522b\u88ab\u547d\u540d\u4e3a orders \uff0c hotDrinks \uff0c coldDrinks  @EnableBinding(Barista.class)\npublic class CafeConfiguration {\n\n   ...\n}  \u5b9a\u5236\u901a\u9053\u540d\u5b57  \u4f7f\u7528 @Input \u548c @Output \u6ce8\u89e3\uff0c\u60a8\u53ef\u4ee5\u4e3a\u8be5channel\u6307\u5b9a\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684channel\u540d\u79f0\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\uff1a  public interface Barista {\n    ...\n    @Input(\"inboundOrders\")\n    SubscribableChannel orders();\n}  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u521b\u5efa\u7684\u7ed1\u5b9achannel\u5c06\u88ab\u547d\u540d\u4e3ainboundorders\u3002  Source \uff0c Sink \uff0c Processor  \u6700\u5e38\u89c1\u7684\u573a\u666f\u4e2d\uff0c\u5305\u542b\u4e00\u4e2a\u8f93\u5165\u901a\u9053\u6216\u8005\u5305\u542b\u4e00\u4e2a\u8f93\u51fa\u901a\u9053\u6216\u8005\u4e8c\u8005\u90fd\u5305\u542b\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u4e09\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u9884\u5b9a\u4e49\u63a5\u53e3\u3002  Source \u7528\u4e8e\u6709\u5355\u4e2a\u8f93\u51fa\uff08outbound\uff09\u901a\u9053\u7684\u5e94\u7528\u3002  public interface Source {\n\n  String OUTPUT = \"output\";\n\n  @Output(Source.OUTPUT)\n  MessageChannel output();\n\n}  Sink \u7528\u4e8e\u6709\u5355\u4e2a\u8f93\u5165\uff08inbound\uff09\u901a\u9053\u7684\u5e94\u7528\u3002  public interface Sink {\n\n  String INPUT = \"input\";\n\n  @Input(Sink.INPUT)\n  SubscribableChannel input();\n\n}  Processor \u7528\u4e8e\u5355\u4e2a\u5e94\u7528\u540c\u65f6\u5305\u542b\u8f93\u5165\u548c\u8f93\u51fa\u901a\u9053\u7684\u60c5\u51b5\u3002  public interface Processor extends Source, Sink {\n}  SpringCloudStream\u5bf9\u8fd9\u4e9b\u63a5\u53e3\u4e0d\u63d0\u4f9b\u7279\u6b8a\u7684\u5904\u7406\uff0c\u4ec5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u7279\u6027\u3002",
            "title": "@Input \u4e0e @Output"
        },
        {
            "location": "/user-guide/stream/#_11",
            "text": "\u6ce8\u5165\u5df2\u7ed1\u5b9a\u63a5\u53e3   \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed1\u5b9a\u7684\u63a5\u53e3\uff0cSpringCloudStream\u5c06\u4ea7\u751f\u4e00\u4e2a\u5b9e\u73b0\u63a5\u53e3\u7684bean\uff0c\u8c03\u7528\u8fd9\u4e2a\u751f\u6210\u7c7b\u7684 @Input \u6216 @Output \u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76f8\u5e94\u7684channel\u3002  \u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53hello\u88ab\u8c03\u7528\u65f6\u8f93\u51fachannel\u4f1a\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\uff0c\u5728\u6ce8\u5165\u7684Sourc\u4e0a\u63d0\u4f9b\u5524\u9192output()\u6765\u68c0\u7d22\u5230\u76ee\u6807\u901a\u9053  @Component\npublic class SendingBean {\n\n    private Source source;\n\n    @Autowired\n    public SendingBean(Source source) {\n        this.source = source;\n    }\n\n    public void sayHello(String name) {\n         source.output().send(MessageBuilder.withPayload(body).build());\n    }\n}   \u76f4\u63a5\u6ce8\u5165\u5230\u901a\u9053     \u7ed1\u5b9a\u7684\u901a\u9053\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165  @Component\npublic class SendingBean {\n\n    private MessageChannel output;\n\n    @Autowired\n    public SendingBean(MessageChannel output) {\n        this.output = output;\n    }\n\n    public void sayHello(String name) {\n         output.send(MessageBuilder.withPayload(body).build());\n    }\n}  \u5982\u679cchannel\u7684\u540d\u5b57\u662f\u5728\u6ce8\u89e3\u4e2d\u6307\u5b9a\u7684\uff0c\u90a3\u4e48\u8bf7\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u65b9\u6cd5\u540d\u3002\u5982\u4e0b\uff1a  public interface CustomSource {\n    ...\n    @Output(\"customOutput\")\n    MessageChannel output();\n}  \u8be5\u901a\u9053\u5c06\u88ab\u6ce8\u5165\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a\uff1a  @Component\npublic class SendingBean {\n\n    @Autowired\n    private MessageChannel output;\n\n    @Autowired @Qualifier(\"customOutput\")\n    public SendingBean(MessageChannel output) {\n        this.output = output;\n    }\n\n    public void sayHello(String name) {\n         customOutput.send(MessageBuilder.withPayload(body).build());\n    }\n}",
            "title": "\u8bbf\u95ee\u7ed1\u5b9a\u901a\u9053"
        },
        {
            "location": "/user-guide/stream/#_12",
            "text": "\u53ef\u4ee5\u4f7f\u7528Spring Integration\u7684\u6ce8\u89e3\u6216\u8005SpringCloudStream\u7684 @StreamListener \u6ce8\u89e3\u6765\u5b9e\u73b0\u4e00\u4e2aSpringCloudStream\u5e94\u7528\u3002 @StreamListener \u6ce8\u89e3\u6a21\u4eff\u5176\u4ed6spring\u6d88\u606f\u6ce8\u89e3\uff08\u4f8b\u5982 @MessageMapping ,  @JmsListener ,  @RabbitListener \u7b49\uff09\uff0c\u4f46\u662f\u5b83\u589e\u52a0\u4e86\u5185\u5bb9\u7c7b\u578b\u7ba1\u7406\u548c\u7c7b\u578b\u5f3a\u5236\u7279\u6027\u3002   \u539f\u751fSpring Integration\u652f\u6301   SpringCloudStream\u662f\u57fa\u4e8eSpring Integration\u7684\uff0c\u6240\u4ee5\u5b8c\u5168\u7684\u7ee7\u627f\u4e86\u540e\u8005\u7684\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6784\u4ef6\u672c\u8eab\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06 Source \u7684output\u901a\u9053\u8fde\u63a5\u5230\u4e00\u4e2a MessageSource  @EnableBinding(Source.class)\npublic class TimerSource {\n\n  @Value(\"${format}\")\n  private String format;\n\n  @Bean\n  @InboundChannelAdapter(value = Source.OUTPUT, poller = @Poller(fixedDelay = \"${fixedDelay}\", maxMessagesPerPoll = \"1\"))\n  public MessageSource<String> timerMessageSource() {\n    return () -> new GenericMessage<>(new SimpleDateFormat(format).format(new Date()));\n  }\n}  \u6216\u8005\u4f60\u53ef\u4ee5\u5728transformer\u4e2d\u4f7f\u7528\u5904\u7406\u5668\u7684channels\uff1a  @EnableBinding(Processor.class)\npublic class TransformProcessor {\n  @Transformer(inputChannel = Processor.INPUT, outputChannel = Processor.OUTPUT)\n  public Object transform(String message) {\n    return message.toUpper();\n  }\n}   \u4f7f\u7528 @StreamListener \u8fdb\u884c\u81ea\u52a8\u5185\u5bb9\u7c7b\u578b\u5904\u7406   \u4f5c\u4e3a\u539f\u751fSpring Integration\u7684\u8865\u5145\uff0cSpringCloudStream\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 @StreamListener \u6ce8\u89e3\uff0c\u8be5\u6ce8\u89e3\u6a21\u4effspring\u7684\u5176\u5b83\u6d88\u606f\u6ce8\u89e3\uff08\u5982 @MessageMapping ,  @JmsListener ,  @RabbitListener \u7b49\uff09\u3002 @StreamListener \u6ce8\u89e3\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u6a21\u578b\u6765\u5904\u7406\u8f93\u5165\u6d88\u606f,\u5c24\u5176\u662f\u5904\u7406\u5305\u542b\u5185\u5bb9\u7c7b\u578b\u7ba1\u7406\u548c\u7c7b\u578b\u5f3a\u5236\u7684\u7528\u4f8b\u7684\u60c5\u51b5\u3002   SpringCloudStream\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6269\u5c55\u7684 MessageConverter \u673a\u5236\uff0c\u8be5\u673a\u5236\u63d0\u4f9b\u7ed1\u5b9a\u901a\u9053\u5b9e\u73b0\u6570\u636e\u5904\u7406\uff0c\u672c\u4f8b\u5b50\u4e2d\uff0c\u6570\u636e\u4f1a\u5206\u53d1\u7ed9\u5e26 @StreamListener \u6ce8\u89e3\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u4f8b\u5b50\u5c55\u793a\u4e86\u5904\u7406\u5916\u90e8 Vote \u4e8b\u4ef6\u7684\u5e94\u7528\uff1a  @EnableBinding(Sink.class)\npublic class VoteHandler {\n\n  @Autowired\n  VotingService votingService;\n\n  @StreamListener(Sink.INPUT)\n  public void handle(Vote vote) {\n    votingService.record(vote);\n  }\n}  @StreamListener \u548cSpring Integration\u7684 @ServiceActivator \u662f\u6709\u533a\u522b\u7684\uff0c\u533a\u522b\u4f53\u73b0\u5728\u5f53\u8f93\u5165\u6d88\u606f\u5185\u5bb9\u5934\u4e3aapplication/json\u7684\u5b57\u7b26\u4e32\u7684\u65f6\u5019\uff0c@StreamListener\u7684MessageConverter\u673a\u5236\u4f1a\u4f7f\u7528contentType\u5934\u5c06string\u89e3\u6790\u4e3aVote\u5bf9\u8c61\u3002  \u548c\u5176\u4ed6Spring Messaging\u65b9\u6cd5\u4e00\u6837\uff0c\u65b9\u6cd5\u53c2\u6570\u53ef\u4ee5\u88ab\u5982\u4e0b\u6ce8\u89e3\u4fee\u9970\uff0c@Payload\uff0c@Headers\u548c@Header   \u5bf9\u4e8e\u90a3\u4e9b\u6709\u8fd4\u56de\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u4f7f\u7528@SendTo\u6ce8\u89e3\u6765\u6307\u5b9a\u8fd4\u56de\u6570\u636e\u7684\u8f93\u51fa\u7ed1\u5b9a\u76ee\u6807\u3002    @EnableBinding(Processor.class)\n public class TransformProcessor {\n\n   @Autowired\n   VotingService votingService;\n\n   @StreamListener(Processor.INPUT)\n   @SendTo(Processor.OUTPUT)\n   public VoteResult handle(Vote vote) {\n     return votingService.record(vote);\n   }\n }   \u5728RabbitMQ\u4e2d\uff0c\u5185\u5bb9\u7c7b\u578b\u5934\u53ef\u4ee5\u7531\u5916\u90e8\u5e94\u7528\u8bbe\u5b9a\u3002SpringCloudStream\u652f\u6301\u4ed6\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u6269\u5c55\u7684\u5185\u90e8\u534f\u8bae\uff0c\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u8fd0\u8f93\uff08\u5305\u62ec\u8fd0\u8f93\uff0c\u5982Kafka\uff0c\u4e0d\u80fd\u6b63\u5e38\u652f\u6301headers\uff09",
            "title": "\u751f\u4ea7\u548c\u6d88\u8d39\u6d88\u606f"
        },
        {
            "location": "/user-guide/stream/#_13",
            "text": "SpringCloudStream\u53ef\u4ee5\u652f\u6301\u591a\u79cd\u5e94\u7528\u805a\u5408\uff0c\u76f4\u63a5\u8fde\u63a5\u4ed6\u4eec\u7684\u8f93\u5165\u548c\u8f93\u51fachannel\uff0c\u5e76\u907f\u514d\u901a\u8fc7\u4ee3\u7406\u4ea4\u6362\u6d88\u606f\u7684\u989d\u5916\u6210\u672c\uff0c\u622a\u6b621.0\u7248\u672c\uff0c\u805a\u5408\u53ea\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a    sources\uff1a\u5e26\u6709\u540d\u4e3aoutput\u7684\u5355\u4e00\u8f93\u51fachannel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a  org.springframework.cloud.stream.messaging.Source    sinks\uff1a\u5e26\u6709\u540d\u4e3ainput\u7684\u5355\u4e00\u8f93\u5165channel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a  org.springframework.cloud.stream.messaging.Sink    processors\uff1a\u5e26\u6709\u540d\u4e3ainput\u7684\u5355\u4e00\u8f93\u5165channel\u548c\u5e26\u6709\u540d\u4e3aoutput\u7684\u5355\u4e00\u8f93\u51fachannel\u7684\u5e94\u7528\u3002\u5178\u578b\u60c5\u51b5\u4e0b\uff0c\u8be5\u5e94\u7528\u5e26\u6709\u5305\u542b\u4e00\u4e2a\u4ee5\u4e0b\u7c7b\u578b\u7684\u7ed1\u5b9a org.springframework.cloud.stream.messaging.Processor    \u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u5e94\u7528\u7684\u5e8f\u5217\u5c06\u4ed6\u4eec\u805a\u5408\u5728\u4e00\u8d77\uff0c\u5176\u4e2d\u4e00\u4e2a\u5e8f\u5217\u5143\u7d20\u7684\u8f93\u51fa\u901a\u9053\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u8f93\u51fa\u901a\u9053\u8fde\u63a5\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8f93\u5165\u901a\u9053\u5143\u7d20\u7684\u8f93\u5165\u901a\u9053\uff0c\u5e8f\u5217\u53ef\u4ee5\u7531\u4e00\u4e2asource\u6216\u8005\u4e00\u4e2aprocessor\u5f00\u59cb\uff0c\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u76ee\u7684processors\uff0c\u4e14\u5fc5\u987b\u7531processors\u6216\u8005sink\u7ed3\u675f\u3002  \u6839\u636e\u5f00\u59cb\u548c\u7ed3\u675f\u5143\u7d20\u7684\u7279\u6027\uff0c\u5e8f\u5217\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u53ef\u7ed1\u5b9a\u7684channels\uff0c\u5982\u4e0b\uff1a   \u5982\u679c\u5e8f\u5217\u7531source\u5f00\u59cb\uff0csink\u7ed3\u675f\uff0c\u5e94\u7528\u4e4b\u95f4\u76f4\u63a5\u901a\u4fe1\u5e76\u4e14\u4e0d\u4f1a\u7ed1\u5b9a\u901a\u9053  \u5982\u679c\u5e8f\u5217\u7531processor\u5f00\u59cb\uff0c\u5b83\u7684\u8f93\u5165\u901a\u9053\u4f1a\u53d8\u6210\u805a\u5408\u7684input\u901a\u9053\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u7ed1\u5b9a  \u5982\u679c\u5e8f\u5217\u7531processor\u7ed3\u675f\uff0c\u5b83\u7684\u8f93\u51fa\u901a\u9053\u4f1a\u53d8\u6210\u805a\u5408\u7684output\u901a\u9053\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u7ed1\u5b9a   \u4f7f\u7528AggregateApplicationBuilder\u529f\u80fd\u7c7b\u6765\u5b9e\u73b0\u805a\u5408\uff0c\u5982\u4e0b\u4f8b\u5b50\u6240\u793a\u3002\u8003\u8651\u4e00\u4e2a\u5305\u542bsource,processor\u548csink\u7684\u5de5\u7a0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u793a\u5305\u542b\u5728\u5de5\u7a0b\u4e2d\uff0c\u6216\u8005\u5305\u542b\u5728\u5de5\u7a0b\u7684\u4f9d\u8d56\u4e2d\u3002  @SpringBootApplication\n@EnableBinding(Sink.class)\npublic class SinkApplication {\n\n    private static Logger logger = LoggerFactory.getLogger(SinkModuleDefinition.class);\n\n    @ServiceActivator(inputChannel=Sink.INPUT)\n    public void loggerSink(Object payload) {\n        logger.info(\"Received: \" + payload);\n    }\n}  @SpringBootApplication\n@EnableBinding(Processor.class)\npublic class ProcessorApplication {\n\n    @Transformer\n    public String loggerSink(String payload) {\n        return payload.toUpperCase();\n    }\n}  @SpringBootApplication\n@EnableBinding(Source.class)\npublic class SourceApplication {\n\n    @Bean\n    @InboundChannelAdapter(value = Source.OUTPUT)\n    public String timerMessageSource() {\n        return new SimpleDateFormat().format(new Date());\n    }\n}  \u6bcf\u4e00\u4e2a\u914d\u7f6e\u53ef\u7528\u4e8e\u8fd0\u884c\u4e00\u4e2a\u72ec\u7acb\u7684\u7ec4\u4ef6\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5b83\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u805a\u5408\uff1a  @SpringBootApplication\npublic class SampleAggregateApplication {\n\n    public static void main(String[] args) {\n        new AggregateApplicationBuilder()\n            .from(SourceApplication.class).args(\"--fixedDelay=5000\")\n            .via(ProcessorApplication.class)\n            .to(SinkApplication.class).args(\"--debug=true\").run(args);\n    }\n}  \u5e8f\u5217\u7684\u5f00\u59cb\u7ec4\u4ef6\u4f5c\u4e3afrom()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5e8f\u5217\u7684\u7ed3\u675f\u7ec4\u4ef6\u4f5c\u4e3ato()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u4e2d\u95f4\u5904\u7406\u5668\u4f5c\u4e3avia()\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u540c\u4e00\u7c7b\u578b\u7684\u5904\u7406\u5668\u53ef\u4ee5\u94fe\u5728\u4e00\u8d77\uff08\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u914d\u7f6e\u7684\u7ba1\u9053\u4f20\u8f93\u65b9\u5f0f\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4e3aSpring Boot\u63d0\u4f9b\u8fd0\u884c\u65f6\u53c2\u6570\u3002",
            "title": "\u805a\u5408"
        },
        {
            "location": "/user-guide/stream/#rxjava",
            "text": "RxJava \u662f\u4e00\u4e2a\u54cd\u5e94\u5f0f\u7f16\u7a0b\u6846\u67b6\uff0cSpringCloudStream\u901a\u8fc7 RxJavaProcessor \u53ef\u4ee5\u652f\u6301RxJava\u7684processor\uff0c\u53c2\u89c1 spring-cloud-stream-rxjava  public interface RxJavaProcessor<I, O> {\n    Observable<O> process(Observable<I> input);\n}  RxJavaProcessor\uff08\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\uff09\u6536\u5230\u89c2\u5bdf\u5f97\u5230\u7684\u5bf9\u8c61Observable\u4f5c\u4e3a\u8f93\u5165\uff0c\u76f8\u5f53\u4e8e\u6570\u636e\u6d41\u7684\u8f93\u5165\u88c5\u8f7d\u5668\u3002\u5728\u542f\u52a8\u65f6\u8c03\u7528process\u65b9\u6cd5\u6765\u8bbe\u7f6e\u6570\u636e\u6d41\u3002  \u7528@EnableRxJavaProcessor\u4fee\u9970\u5728\u4f60\u7684\u5904\u7406\u65b9\u6cd5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u542f\u7528\u57fa\u4e8eRxJava\u7684\u5904\u7406\u5668\u3002@EnableRxJavaProcessor\u5305\u542b\u4e86@EnableBinding(Processor.class)\u6ce8\u89e3\u5e76\u53ef\u4ee5\u521b\u5efaProcessor\uff0c\u5982\u4e0b\uff1a  @EnableRxJavaProcessor\npublic class RxJavaTransformer {\n\n    private static Logger logger = LoggerFactory.getLogger(RxJavaTransformer.class);\n\n    @Bean\n    public RxJavaProcessor<String,String> processor() {\n        return inputStream -> inputStream.map(data -> {\n            logger.info(\"Got data = \" + data);\n            return data;\n        })\n        .buffer(5)\n        .map(data -> String.valueOf(avg(data)));\n    }\n\n    private static Double avg(List<String> data) {\n        double sum = 0;\n        double count = 0;\n        for(String d : data) {\n            count++;\n            sum += Double.valueOf(d);\n        }\n        return sum/count;\n    }\n}   \u5b9e\u65bdRxJava\u5904\u7406\u5668\uff0c\u5904\u7406\u6d41\u7a0b\u4e2d\u7684\u5f02\u5e38\u7279\u522b\u91cd\u8981\uff0c\u672a\u6355\u83b7\u7684\u5f02\u5e38\u5c06\u88ab\u89c6\u4e3aerrors\uff0c\u5e76\u4f1a\u7ed3\u675fObservable\uff0c\u4e2d\u65ad\u4e86\u5904\u7406\u6d41\u7a0b\u3002",
            "title": "RxJava \u652f\u6301"
        },
        {
            "location": "/user-guide/stream/#_14",
            "text": "SpringCloudStream\u63d0\u4f9b\u7ed1\u5b9a\u62bd\u8c61\u7528\u4e8e\u4e0e\u5916\u90e8\u4e2d\u95f4\u4ef6\u4e2d\u7684\u7269\u7406\u76ee\u6807\u8fdb\u884c\u8fde\u63a5\u3002\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecdBinder SPI\u80cc\u540e\u7684\u4e3b\u8981\u6982\u5ff5\uff0c\u4e3b\u8981\u7ec4\u4ef6\u4ee5\u53ca\u5b9e\u73b0\u7ec6\u8282\u3002",
            "title": "\u7ed1\u5b9a\u5668"
        },
        {
            "location": "/user-guide/stream/#_15",
            "text": "\u4efb\u4f55\u5f80\u901a\u9053\u4e2d\u53d1\u5e03\u6d88\u606f\u7684\u7ec4\u4ef6\u90fd\u53ef\u79f0\u4f5c\u751f\u4ea7\u8005\u3002\u901a\u9053\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7406\u7684Binder\u5b9e\u73b0\u4e0e\u5916\u90e8\u6d88\u606f\u4ee3\u7406\u8fdb\u884c\u7ed1\u5b9a\u3002\u8c03\u7528bindProducer()\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4ee3\u7406\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u672c\u5730\u901a\u9053\u76ee\u6807\u540d\u79f0\uff08\u751f\u4ea7\u8005\u5411\u672c\u5730\u901a\u9053\u53d1\u9001\u6d88\u606f\uff09\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u5305\u542b\u901a\u9053\u521b\u5efa\u7684\u9002\u914d\u5668\u7684\u5c5e\u6027\u4fe1\u606f\uff08\u6bd4\u5982\uff1a\u5206\u7247key\u8868\u8fbe\u5f0f\uff09\u3002   \u4efb\u4f55\u4ece\u901a\u9053\u4e2d\u63a5\u6536\u6d88\u606f\u7684\u7ec4\u4ef6\u90fd\u53ef\u79f0\u4f5c\u6d88\u8d39\u8005\u3002\u4e0e\u751f\u4ea7\u8005\u4e00\u6837\uff0c\u6d88\u8d39\u8005\u901a\u9053\u53ef\u4ee5\u4e0e\u5916\u90e8\u6d88\u606f\u4ee3\u7406\u8fdb\u884c\u7ed1\u5b9a\u3002\u8c03\u7528bindConsumer()\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u76ee\u6807\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63d0\u4f9b\u4e86\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u79f0\u3002\u6bcf\u4e2a\u7ec4\u90fd\u4f1a\u6536\u5230\u751f\u4ea7\u4e2d\u53d1\u51fa\u6d88\u606f\u7684\u526f\u672c\uff08\u5373\uff0c\u53d1\u5e03-\u8ba2\u9605\u8bed\u4e49\uff09\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6d88\u8d39\u8005\u7ed1\u5b9a\u76f8\u540c\u7684\u7ec4\u540d\u79f0\uff0c\u6d88\u606f\u53ea\u4f1a\u7531\u4e00\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\uff08\u5373\uff0c\u961f\u5217\u8bed\u4e49\uff09",
            "title": "\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005"
        },
        {
            "location": "/user-guide/stream/#binder-spi",
            "text": "",
            "title": "Binder SPI"
        },
        {
            "location": "/user-guide/stream/#binder-detection",
            "text": "",
            "title": "Binder Detection"
        },
        {
            "location": "/user-guide/stream/#classpath-detection",
            "text": "",
            "title": "Classpath Detection"
        },
        {
            "location": "/user-guide/stream/#multiple-binders-on-the-classpath",
            "text": "",
            "title": "Multiple Binders on the Classpath"
        },
        {
            "location": "/user-guide/stream/#connecting-to-multiple-systems",
            "text": "",
            "title": "Connecting to Multiple Systems"
        },
        {
            "location": "/user-guide/stream/#binder-configuration-properties",
            "text": "",
            "title": "Binder configuration properties"
        },
        {
            "location": "/user-guide/stream/#implementation-strategies",
            "text": "",
            "title": "Implementation strategies"
        },
        {
            "location": "/user-guide/stream/#kafka-binder",
            "text": "",
            "title": "Kafka Binder"
        },
        {
            "location": "/user-guide/stream/#rabbitmq-binder",
            "text": "",
            "title": "RabbitMQ Binder"
        },
        {
            "location": "/user-guide/stream/#_16",
            "text": "SpringCloudStream \u652f\u6301\u901a\u7528\u7684\u914d\u7f6e\u4ee5\u53cabindings\u548cbinders\u7684\u914d\u7f6e\uff0c\u4e00\u4e9bbinders\u5141\u8bb8binding\u5c5e\u6027\u7528\u6765\u652f\u6301\u4e2d\u95f4\u4ef6\u7684\u7279\u5b9a\u529f\u80fd\u3002",
            "title": "\u914d\u7f6e\u7ba1\u7406"
        },
        {
            "location": "/user-guide/stream/#springcloudstream",
            "text": "spring.cloud.stream.instanceCount  \u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5b9e\u4f8b\u7684\u6570\u91cf\u3002\u5982\u679c\u4f7f\u7528\u5361\u592b\u5361\u5219\u4f1a\u8bbe\u7f6e\u5206\u533a\u3002  Default: 1   spring.cloud.stream.instanceIndex  \u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u5b9e\u4f8b\u7684\u6570\u91cf\uff0c\u5927\u5c0f\u4ecb\u4e8e0 ~ \uff08instanceCount-1\uff09\uff0c\u7528\u4e8ekafka\u5bfb\u627e\u5206\u533a\u3002\u5728Cloud Foundry\u4e2d\u4f1a\u81ea\u52a8\u8bbe\u7f6e  Default: 1   spring.cloud.stream.dynamicDestinations  A list of destinations that can be bound dynamically (for example, in a dynamic routing scenario). If set, only listed destinations can be bound.  Default: empty   spring.cloud.stream.defaultBinder  The default binder to use, if multiple binders are configured  Default: empty  spring.cloud.stream.overrideCloudConnectors  This property is only applicable when the cloud profile is active and Spring Cloud Connectors are provided with the application. If the property is false (the default), the binder will detect a suitable bound service (e.g. a RabbitMQ service bound in Cloud Foundry for the RabbitMQ binder) and will use it for creating connections (usually via Spring Cloud Connectors). When set to true, this property instructs binders to completely ignore the bound services and rely on Spring Boot properties (e.g. relying on the spring.rabbitmq.* properties provided in the environment for the RabbitMQ binder). The typical usage of this property is to be nested in a customized environment when connecting to multiple systems.  Default: false",
            "title": "SpringCloudStream\u914d\u7f6e\u9879"
        },
        {
            "location": "/user-guide/stream/#binding",
            "text": "\u914d\u7f6e\u683c\u5f0f\u4e3a spring.cloud.stream.bindings.<channelName>.<property>=<value> \uff0c <channelName> \u662f\u914d\u7f6e\u7684\u9891\u9053\u540d\u79f0 (e.g., output for a Source)\uff0c\u4e0b\u9762\u7684\u4ecb\u7ecd\u4e2d\u7701\u7565 spring.cloud.stream.bindings.<channelName>. \u524d\u7f00\uff0c\u53ea\u5173\u6ce8\u5c5e\u6027\u53c2\u6570",
            "title": "Binding\u914d\u7f6e\u9879"
        },
        {
            "location": "/user-guide/stream/#springcloudstreambindings",
            "text": "\u4e0b\u9762\u7684\u914d\u7f6e\u5bf9\u4e8einput bindings\u548coutput bindings\u90fd\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f spring.cloud.stream.bindings.<channelName>.  destination  \u7ed1\u5b9a\u4e2d\u95f4\u4ef6\u7684\u76ee\u7684 (e.g., the RabbitMQ exchange or Kafka topic)\u3002\u5982\u679cchannel\u7ed1\u5b9a\u7684\u662f\u6d88\u8d39\u8005\uff0c\u90a3\u4e48\u53ef\u4ee5\u7ed1\u5b9a\u591a\u4e2a\u76ee\u7684\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u5219channel\u540d\u79f0\u4f1a\u66ff\u4ee3\u8fd9\u4e2a\u503c\u3002  group  channel\u7684\u6d88\u8d39\u8005\u7ec4\uff0c\u4ec5\u5bf9inbound bindings\u6709\u6548\u3002  Default: null \uff08\u6697\u793a\u4e00\u4e2a\u533f\u540d\u6d88\u8d39\u8005\uff09  contentType  The content type of the channel.  Default: null (so that no type coercion is performed).  binder  The binder used by this binding. See Multiple Binders on the Classpath for details.  Default: null (the default binder will be used, if one exists).",
            "title": "SpringCloudStream\u7684bindings\u914d\u7f6e"
        },
        {
            "location": "/user-guide/stream/#consumer-properties",
            "text": "\u4e0b\u9762\u7684\u914d\u7f6e\u4ec5\u5bf9input bindings\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f spring.cloud.stream.bindings.<channelName>.consumer.  concurrency  The concurrency of the inbound consumer.  Default: 1  partitioned  Whether the consumer receives data from a partitioned producer.  Default: false  headerMode  When set to raw, disables header parsing on input. Effective only for messaging middleware that does not support message headers natively and requires header embedding. Useful when inbound data is coming from outside Spring Cloud Stream applications.  Default: embeddedHeaders.  maxAttempts  The number of attempts of re-processing an inbound message.  Default: 3.  backOffInitialInterval  The backoff initial interval on retry.  Default: 1000.  backOffMaxInterval  The maximum backoff interval.  Default: 10000.  backOffMultiplier  The backoff multiplier.  Default: 2.0.",
            "title": "Consumer properties"
        },
        {
            "location": "/user-guide/stream/#producer-properties",
            "text": "\u4e0b\u9762\u7684\u914d\u7f6e\u4ec5\u5bf9output bindings\u6709\u6548\uff0c\u4e14\u524d\u7f00\u662f spring.cloud.stream.bindings.<channelName>.producer.  partitionKeyExpression  A SpEL expression that determines how to partition outbound data. If set, or if partitionKeyExtractorClass is set, outbound data on this channel will be partitioned, and partitionCount must be set to a value greater than 1 to be effective. The two options are mutually exclusive. See Partitioning Support.  Default: null.  partitionKeyExtractorClass  A PartitionKeyExtractorStrategy implementation. If set, or if partitionKeyExpression is set, outbound data on this channel will be partitioned, and partitionCount must be set to a value greater than 1 to be effective. The two options are mutually exclusive. See Partitioning Support.  Default: null.  partitionSelectorClass  A PartitionSelectorStrategy implementation. Mutually exclusive with partitionSelectorExpression. If neither is set, the partition will be selected as the hashCode(key) % partitionCount, where key is computed via either partitionKeyExpression or partitionKeyExtractorClass.  Default: null.  partitionSelectorExpression  A SpEL expression for customizing partition selection. Mutually exclusive with partitionSelectorClass. If neither is set, the partition will be selected as the hashCode(key) % partitionCount, where key is computed via either partitionKeyExpression or partitionKeyExtractorClass.  Default: null.  partitionCount  The number of target partitions for the data, if partitioning is enabled. Must be set to a value greater than 1 if the producer is partitioned. On Kafka, interpreted as a hint; the larger of this and the partition count of the target topic is used instead.  Default: 1.  requiredGroups  A comma-separated list of groups to which the producer must ensure message delivery even if they start after it has been created (e.g., by pre-creating durable queues in RabbitMQ).  headerMode  When set to raw, disables header embedding on output. Effective only for messaging middleware that does not support message headers natively and requires header embedding. Useful when producing data for non-Spring Cloud Stream applications.  Default: embeddedHeaders.",
            "title": "Producer Properties"
        },
        {
            "location": "/user-guide/stream/#binder-specific-configuration",
            "text": "",
            "title": "Binder-Specific Configuration"
        },
        {
            "location": "/user-guide/stream/#rabbit-specific-settings",
            "text": "",
            "title": "Rabbit-Specific Settings"
        },
        {
            "location": "/user-guide/stream/#rabbitmq-binder-properties",
            "text": "",
            "title": "RabbitMQ Binder Properties"
        },
        {
            "location": "/user-guide/stream/#rabbitmq-consumer-properties",
            "text": "",
            "title": "RabbitMQ Consumer Properties"
        },
        {
            "location": "/user-guide/stream/#rabbit-producer-properties",
            "text": "",
            "title": "Rabbit Producer Properties"
        },
        {
            "location": "/user-guide/stream/#kafka-specific-settings",
            "text": "",
            "title": "Kafka-Specific Settings"
        },
        {
            "location": "/user-guide/stream/#kafka-binder-properties",
            "text": "",
            "title": "Kafka Binder Properties"
        },
        {
            "location": "/user-guide/stream/#kafka-consumer-properties",
            "text": "",
            "title": "Kafka Consumer Properties"
        },
        {
            "location": "/user-guide/stream/#kafka-producer-properties",
            "text": "",
            "title": "Kafka Producer Properties"
        },
        {
            "location": "/user-guide/stream/#content-type-and-transformation",
            "text": "",
            "title": "Content Type and Transformation"
        },
        {
            "location": "/user-guide/stream/#mime-types",
            "text": "",
            "title": "MIME types"
        },
        {
            "location": "/user-guide/stream/#mime-types-and-java-types",
            "text": "",
            "title": "MIME types and Java types"
        },
        {
            "location": "/user-guide/stream/#streamlistener-and-message-conversion",
            "text": "",
            "title": "@StreamListener and Message Conversion"
        },
        {
            "location": "/user-guide/stream/#_17",
            "text": "",
            "title": "\u5e94\u7528\u7a0b\u5e8f\u95f4\u901a\u4fe1"
        },
        {
            "location": "/user-guide/stream/#_18",
            "text": "SpringCloudStream\u4f7fSpringBoot\u5e94\u7528\u8fde\u63a5\u6d88\u606f\u7cfb\u7edf\u53d8\u5f97\u5bb9\u6613\uff0c\u5178\u578b\u60c5\u51b5\u662f\u591a\u5e94\u7528\u7ba1\u9053\u7684\u521b\u4f5c\uff0c\u5fae\u670d\u52a1\u901a\u8fc7\u8fd9\u4e2a\u7ba1\u9053\u5f7c\u6b64\u53d1\u9001\u6570\u636e\u3002  \u4e3a\u4e86\u5b9e\u73b0TimeSource\u5e94\u7528\u7684\u6570\u636e\u53d1\u9001\u7ed9LogSink\u5e94\u7528\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u76f8\u540c\u7684\u76ee\u7684\u5730\u540d\u5b57\u6765\u7ed1\u5b9a\u4ed6\u4eec\u3002  TimeSource\u7684\u914d\u7f6e\u5982\u4e0b  spring.cloud.stream.bindings.output.destination=ticktock  LogSink\u7684\u914d\u7f6e\u5982\u4e0b  spring.cloud.stream.bindings.input.destination=ticktock",
            "title": "\u8fde\u63a5\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b"
        },
        {
            "location": "/user-guide/stream/#_19",
            "text": "\u5f53\u6c34\u5e73\u6269\u5c55SpringCloudStream\u5e94\u7528\u65f6\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u6536\u5230\u6d88\u606f\uff0c\u8fd9\u4e2a\u6d88\u606f\u662f\u5173\u4e8e\u672c\u5e94\u7528\u8fd0\u884c\u7684\u5b9e\u4f8b\u6570\u91cf\u548c\u6bcf\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684\u7d22\u5f15\u503c\u3002\u5229\u7528 spring.cloud.stream.instanceCount \u548c spring.cloud.stream.instanceIndex \u5c31\u80fd\u505a\u5230\u4e0a\u9762\u7684\u6240\u8ff0\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff1a\u5982\u679c\u6709\u4e09\u4e2aHDFS\u7684sink application\uff0c\u8fd9\u4e09\u4e2a\u5b9e\u4f8b\u90fd\u8bbe\u7f6e\u4e86 spring.cloud.stream.instanceCount=3 \uff0c\u5e76\u4e14\u53c8\u5206\u522b\u8bbe\u7f6e\u4e86 spring.cloud.stream.instanceIndex \u7684\u503c\u4e3a0\uff0c1\uff0c2\u3002  \u5f53SpringCloudStream\u5e94\u7528\u901a\u8fc7SpringCloudDataFlow\u90e8\u7f72\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u81ea\u52a8\u914d\u7f6e\u3002\u5982\u679c\u662f\u72ec\u7acb\u90e8\u7f72\uff0c\u90a3\u8fd9\u4e9b\u53c2\u6570\u5fc5\u987b\u88ab\u6b63\u786e\u914d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c spring.cloud.stream.instanceCount=1 \uff0c spring.cloud.stream.instanceIndex=0  \u6c34\u5e73\u6269\u5c55\u6269\u5c55\u7684\u6848\u4f8b\u4e2d\uff0c\u6b63\u786e\u7684\u914d\u7f6e\u8fd9\u4e24\u4e2a\u53c2\u6570\u5bf9\u4e8e\u8bbf\u95ee\u5206\u533a\u7684\u884c\u4e3a\u5341\u5206\u91cd\u8981\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u786e\u5b9a\u7684binders(e.g., the Kafka binder) \uff0c\u4e0a\u8ff0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u80fd\u88ab\u6b63\u786e\u5206\u914d\u5728\u591a\u4e2a\u6d88\u8d39\u7aef\u5b9e\u4f8b\u3002",
            "title": "\u5b9e\u4f8b\u7d22\u5f15\u548c\u5b9e\u4f8b\u6570"
        },
        {
            "location": "/user-guide/stream/#_20",
            "text": "",
            "title": "\u5206\u533a"
        },
        {
            "location": "/user-guide/stream/#output-bindings",
            "text": "output binding\u7684\u914d\u7f6e\u662f\u7528\u4e8e\u53d1\u9001\u5206\u533a\u6570\u636e\uff0c\u914d\u7f6e partitionKeyExpression \u6216 partitionKeyExtractorClass \u4ee5\u53ca partitionCount \u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u6548\u7684\u548c\u5178\u578b\u7684\u914d\u7f6e\uff1a  spring.cloud.stream.bindings.output.producer.partitionKeyExpression=payload.id\nspring.cloud.stream.bindings.output.producer.partitionCount=5  \u57fa\u4e8e\u4e0a\u8ff0\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5c06\u88ab\u7528\u4e0b\u8ff0\u903b\u8f91\u53d1\u9001\u5230\u76ee\u6807\u5206\u533a\u3002  \u5206\u533akey\u7684\u503c\u662f\u57fa\u4e8epartitionKeyExpression\u8ba1\u7b97\u5f97\u51fa\u7684\uff0c\u7528\u4e8e\u6bcf\u4e2a\u6d88\u606f\u88ab\u53d1\u9001\u81f3\u5206\u533a\u7684\u8f93\u51fachannel\uff0cpartitionKeyExpression\u662fspirng EL\u8868\u8fbe\u5f0f\u7528\u4ee5\u63d0\u53d6\u5206\u533a\u952e\u3002   \u5982\u679cSpEL\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 partitionKeyExtractorClass \u8bbe\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7c7b\u53bb\u8ba1\u7b97\u5206\u533a\u7684key\u503c\uff0c\u8fd9\u4e2a\u7c7b\u9700\u8981\u5b9e\u73b0 org.springframework.cloud.stream.binder.PartitionKeyExtractorStrategy \u63a5\u53e3\uff0c\u901a\u5e38\u60c5\u51b5\u4e0bSpEL\u662f\u591f\u7528\u7684\uff0c\u66f4\u590d\u6742\u7684\u60c5\u51b5\u624d\u4f1a\u7528\u5230\u81ea\u5b9a\u4e49\u7684\u7b56\u7565\u3002   \u4e00\u65e6\u6d88\u606f\u7684key\u88ab\u7b97\u51fa\uff0c\u5206\u533a\u9009\u62e9\u5668\u5c06\u4f1a\u786e\u5b9a\u76ee\u6807\u5206\u533a\u503c\uff0c\u8fd9\u4e2a\u503c\u4ecb\u4e8e0 \u548c partitionCount - 1\u4e4b\u95f4\uff0c\u9ed8\u8ba4\u7684\u7b97\u6cd5\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9002\u7528\uff0c\u662f\u57fa\u4e8e\u516c\u5f0f\u7684 key.hashcode() % partitioncount \u3002  \u989d\u5916\u7684\u5c5e\u6027\u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u66f4\u9ad8\u7ea7\u7684\u60c5\u51b5\uff0c\u5982\u4e0b\u9762\u7684\u7ae0\u8282\u6240\u8ff0\u3002   Kafka binder\u4f7f\u7528 partitionCount \u505a\u521b\u5efatopic\u7684\u7ebf\u7d22\u5229\u7528\u7ed9\u5b9a\u7684\u5206\u533a\u6570\uff08\u8fd9\u4e2a\u6570\u662f partitionCount \u4e0e minPartitionCount \u7684\u6700\u5927\u503c\uff09\u3002\u5f53\u4e3abinder\u914d\u7f6e minPartitionCount \uff0c\u4e3a\u5e94\u7528\u914d\u7f6e partitionCount \u7684\u65f6\u5019\u4f60\u8981\u5c0f\u5fc3\uff0c\u4e24\u8005\u8f83\u5927\u7684\u503c\u5c06\u4f1a\u88ab\u4f7f\u7528\u3002\u5982\u679c\u4e00\u4e2atopic\u5df2\u7ecf\u5b58\u5728\u4e0e\u5c0f\u5206\u533a\u6570\u7684kafka\u4e2d\uff0c\u5e76\u4e14 autoAddPartitions \u662f\u88ab\u7981\u7528\u7684\uff08\u9ed8\u8ba4\u5982\u6b64\uff09\uff0c\u90a3\u4e48binder\u5c06\u542f\u52a8\u5931\u8d25\uff0c\u5982\u679c autoAddPartitions \u662f\u542f\u7528\u7684\u5219\u4f1a\u81ea\u52a8\u6dfb\u52a0\u65b0\u5206\u533a\u3002\u5982\u679ctopic\u5df2\u7ecf\u5b58\u4e8e\u5927\u5206\u533a\u6570\u7684kafka\uff08\u6bd4 minPartitionCount  \u548c  partitionCount \u7684\u503c\u90fd\u5927\uff09\uff0c\u8fd9\u4e2a\u5b58\u5728\u7684\u5206\u533a\u5c06\u4f1a\u88ab\u4f7f\u7528\u3002",
            "title": "\u914d\u7f6eOutput Bindings"
        },
        {
            "location": "/user-guide/stream/#input-bindings",
            "text": "\u901a\u8fc7\u914d\u7f6e\u5206\u533a\u5c5e\u6027\u6765\u63a5\u6536\u5206\u533a\u4e2d\u7684\u6570\u636e\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\uff1a  spring.cloud.stream.bindings.input.consumer.partitioned=true\nspring.cloud.stream.instanceIndex=3\nspring.cloud.stream.instanceCount=5  instanceCount \u8868\u793a\u5e94\u7528\u5b9e\u4f8b\u7684\u603b\u6570\uff0c instanceIndex \u5728\u591a\u4e2a\u5b9e\u4f8b\u4e2d\u5fc5\u987b\u552f\u4e00\uff0c\u5e76\u4ecb\u4e8e0~\uff08instanceCount-1\uff09\u4e4b\u95f4\u3002\u5b9e\u4f8b\u7684\u7d22\u5f15\u53ef\u4ee5\u5e2e\u52a9\u6bcf\u4e2a\u5b9e\u4f8b\u786e\u5b9a\u552f\u4e00\u7684\u63a5\u6536\u6570\u636e\u7684\u5206\u533a\uff0c\u6b63\u786e\u7684\u8bbe\u7f6e\u8fd9\u4e24\u4e2a\u503c\u5341\u5206\u91cd\u8981\uff0c\u7528\u6765\u786e\u4fdd\u6240\u6709\u7684\u6570\u636e\u88ab\u6d88\u8017\uff0c\u4ee5\u53ca\u5e94\u7528\u5b9e\u4f8b\u63a5\u6536\u76f8\u4e92\u6392\u65a5\u7684\u6570\u636e\u96c6\u3002  \u4f7f\u7528\u591a\u5b9e\u4f8b\u8fdb\u884c\u5206\u533a\u6570\u636e\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u8bbe\u7f6e\uff0cSpringCloudDataFlow\u53ef\u4ee5\u663e\u8457\u7684\u7b80\u5316\u8fc7\u7a0b\uff0c\u901a\u8fc7\u6b63\u786e\u7684\u586b\u5199\u8f93\u5165\u548c\u8f93\u51fa\u503c\uff0c\u4ee5\u53ca\u4fe1\u4efb\u8fd0\u884c\u65f6\u63d0\u4f9b\u7684instance\u7d22\u5f15\u548cinstance\u6570\u91cf\u4fe1\u606f",
            "title": "\u914d\u7f6eInput Bindings"
        },
        {
            "location": "/user-guide/stream/#testing",
            "text": "",
            "title": "Testing"
        },
        {
            "location": "/user-guide/stream/#_21",
            "text": "SpringCloudStream\u63d0\u4f9bbinders\u5065\u5eb7\u6307\u793a\u5668\uff0c\u4ed6\u4ee5binders\u540d\u5b57\u6ce8\u518c\uff0c\u53ef\u4ee5\u7531 management.health.binders.enabled \u5f00\u63a7\u5236\u542f\u52a8\u6216\u505c\u6b62",
            "title": "\u5065\u5eb7\u6307\u793a\u5668"
        },
        {
            "location": "/user-guide/stream/#_22",
            "text": "spring-cloud-stream-samples",
            "title": "\u4f8b\u5b50"
        },
        {
            "location": "/user-guide/stream/#getting-started",
            "text": "",
            "title": "Getting Started"
        },
        {
            "location": "/user-guide/zuul/",
            "text": "\u8d21\u732e\u8005\uff1a Alex Wei\n\n\nZuul\uff1a\u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\n#\n\n\n\u8def\u7531\u662f\u5fae\u670d\u52a1\u4f53\u7cfb\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\uff0c \u4f8b\u5982  /  \u53ef\u4ee5\u6620\u5c04\u5230Web \u5e94\u7528\uff0c /api/users \u53ef\u4ee5\u6620\u5c04\u7684\u7528\u6237\u670d\u52a1 \uff0c api/shop \u53ef\u4ee5\u6620\u5c04\u5230\u5546\u5e97\u670d\u52a1\u3002 Zuul\u662f\u4e00\u4e2a\u57fa\u4e8eJVM\u7684\u8def\u7531\u5668\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u670d\u52a1\u7aef\u8d1f\u8f7d\u5747\u8861\u3002\n\u5b83\u7531Netflix\u516c\u53f8\u5f00\u6e90\u3002\n\n\nNetflix\u4f7f\u7528Zuul\u505a\u5982\u4e0b\u4e8b\u60c5\uff1a\n\n\n\n\n\u8ba4\u8bc1\u9274\u6743\u3002\n\n\n\u5ba1\u67e5\n\n\n\u538b\u529b\u6d4b\u8bd5\n\n\n\u91d1\u4e1d\u96c0\u6d4b\u8bd5\n\n\n\u52a8\u6001\u8def\u7531\n\n\n\u670d\u52a1\u8fc1\u79fb\n\n\n\u8d1f\u8f7d\u526a\u88c1\n\n\n\u5b89\u5168\n\n\n\u9759\u6001\u5e94\u7b54\u5904\u7406\n\n\n\n\nZuul\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u652f\u6301JVM\u7684\u8bed\u8a00\u6765\u5efa\u7acb\u89c4\u5219\u548c\u8fc7\u6ee4\u5668\uff0c\u5185\u7f6e\u4e86\u5bf9Java\u548cGroovy\u7684\u652f\u6301\u3002\n\n\n\u5982\u4f55\u5f15\u5165Zuul\n#\n\n\n\u4e3a\u4e86\u5728\u81ea\u5df1\u7684project\u4e2d\u5f15\u5165zuul\uff0c\u4ec5\u4ec5\u9700\u8981\u4f7f\u7528spring-cloud-starter-zuul\u5c31OK\u5566\u3002\u8be6\u7ec6\u7684\u5185\u5bb9\u53c2\u7167\u00a0Spring Cloud Project page\u00a0\u3002\n\n\n\u5185\u7f6eZuul \u53cd\u5411\u4ee3\u7406\n#\n\n\n\u5f53\u4e00\u4e2aUI\u5e94\u7528\u60f3\u8981\u901a\u8fc7\u4ee3\u7406\u8c03\u7528\u540e\u7aef\u670d\u52a1\u65f6\uff0cSpring Cloud\u901a\u8fc7\u4e00\u4e2a\u5185\u7f6e\u7684Zuul\u4ee3\u7406\uff0c\u4ece\u800c\u51cf\u8f7b\u4e00\u4e9b\u901a\u7528\u6848\u4f8b\u7684\u5f00\u53d1\u3002 \u8fd9\u4e2a\u7279\u6027\u5bf9\u4e8e\u524d\u7aef\u7528\u6237\u4ea4\u4e92\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee\u540e\u7aef\u670d\u52a1\u662f\u6709\u7528\u7684\uff0c\u907f\u514d\u4e86\u4e3a\u6240\u6709\u540e\u7aef\u670d\u52a1\u5355\u72ec\u5efa\u7acbCORS\u548c\u8ba4\u8bc1\u76f8\u5173\u7ba1\u7406\u7b49\u4e8b\u60c5\u3002\u5728Spring Boot\u7684main\u7c7b\u4e0a\u9762\u6dfb\u52a0@EnableZuulProxy\u6ce8\u89e3\uff0c\u5b83\u5c31\u53ef\u4ee5\u8f6c\u53d1\u672c\u5730\u7684\u8c03\u7528\u5230\u9002\u7528\u7684\u670d\u52a1\u4e0a\u9762\u3002\n\n\n\u6309\u7167\u60ef\u4f8b\uff0c \u4e00\u4e2a\u670d\u52a1ID\u4e3a\"users\"\u7684\u670d\u52a1\u4e5f\u5c06\u6536\u5230\u6765\u81ea\u4e8e/users\u7684\u8bf7\u6c42\u3002\u4ee3\u7406\u4f7f\u7528Ribbon\uff08\u4e00\u79cd\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\u673a\u5236\uff09\u5b9a\u4f4d\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u6709\u8fed\u4ee3\u8bf7\u6c42\u5728hystrix command\uff08\u670d\u52a1\u5f02\u5e38\u65ad\u8def\u673a\u5236\uff09\u88ab\u6267\u884c\uff0c\u4ee5\u81f4\u4e8e\u4e00\u65e6\u5931\u8d25\uff0cHystrix metrics(\u670d\u52a1\u5f02\u5e38\u65ad\u8def\u7684\u76d1\u63a7\u673a\u5236)\u5c06\u80fd\u591f\u5448\u73b0\u51fa\u6765\u3002 \u4e00\u65e6\u65ad\u8def\u5668\u88ab\u6253\u5f00\uff0c \u4ee3\u7406\u5c06\u4e0d\u518d\u5c1d\u8bd5\u4e0e\u8fd9\u4e2a\u670d\u52a1\u8054\u7cfb\u3002\n\n\n\u4e3a\u4e86\u8df3\u8fc7\u4e00\u4e9b\u81ea\u52a8\u589e\u52a0\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u8bbe\u7f6ezuul.ignored-services\u7684\u503c\uff0c\u4f7f\u5176\u7b26\u5408\u60f3\u8981\u5ffd\u7565\u7684\u670d\u52a1\u5217\u8868\u7684ID\u6a21\u5f0f\u3002\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5339\u914d\u8fd9\u79cd\u5ffd\u7565\u7684\u6a21\u5f0f\uff0c\u4f46\u662f\u88ab\u663e\u793a\u7684\u914d\u7f6e\u5230\u4e86Routes map\u91cc\u7684\u8bdd\uff0c\u5b83\u53c8\u4e0d\u80fd\u88ab\u5ffd\u7565\u3002\u4f8b\u5982\uff1a\n\n\napplication.yml\nzuul:\n  ignoredServices: '*'\n  routes:\n    users: /myusers/**\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u9664\u4e86\"users\"\uff0c\u6240\u6709\u7684\u670d\u52a1\u90fd\u4f1a\u88ab\u5ffd\u7565\u3002\n\u4e3a\u4e86\u6269\u5145\u6216\u8005\u6539\u53d8\u4ee3\u7406\u8def\u7531\uff0c \u4f60\u53ef\u4ee5\u589e\u52a0\u5982\u4e0b\u663e\u793a\u7684\u914d\u7f6e\uff1a\n\n\napplication.yml\nzuul:\n  routes:\n    users: /myusers/**\n\n\n\n\u8fd9\u610f\u5473\u7740\u6765\u81ea\u4e8e\n\"/myusers\"\n\u7684http\u8bf7\u6c42\u5c06\u88ab\u8f6c\u53d1\u5230\n\"users\"\n\u670d\u52a1\u4e0a\uff08\u4f8b\u5982\n\"/myusers/101\"\n\u88ab\u8f6c\u53d1\u5230\n\"/101\"\n\uff09\u3002\n\n\n\u4e3a\u4e86\u5f97\u5230\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u7684\u8def\u7531\u5230\u670d\u52a1\u7684\u6807\u8bc6\u4e0a\uff1a\n\n\n zuul:\n   routes:\n   users:\n     path: /myusers/**\n     serviceId: users_service\n\n\n\n\u8fd9\u610f\u5473\u7740\u6765\u81ea\u4e8e\n\"/myusers\"\n\u7684http\u8bf7\u6c42\u88ab\u8f6c\u53d1\u5230\n\"users_service\"\n\u8fd9\u4e2a\u670d\u52a1\u4e0a\u3002\n\u8def\u7531\u5fc5\u987b\u6709\u4e00\u4e2a\u7b26\u5408Ant\u6a21\u5f0f\u7684\"path\"\uff0c\u90a3\u4e48\n\"/myusers/*\"\n \u5c31\u4ec5\u4ec5\u5339\u914d\u7b2c\u4e00\u7ea7\uff0c\u800c\n\"/myusers/**\"\n \u80fd\u591f\u5c42\u6b21\u5316\u5339\u914d\u3002\n\n\n\u540e\u7aef\u670d\u52a1\u7684\u5b9a\u4f4d\u53ef\u4ee5\u6309\u7167\u670d\u52a1ID\u6216\u8005url\u6765\u8bc6\u522b\u3002 \u4f8b\u5982\uff1a\n\n\napplication.yml\nzuul:\n  routes:\n  users:\n    path: /myusers/**\n    url: http://example.com/users_service\n\n\n\n\u8fd9\u4e9b\u7b80\u5355\u7684url\u8def\u7531\u662f\u4e0d\u652f\u6301HystrixCommand\u00a0\u548cRibbon\u8d1f\u8f7d\u5747\u8861\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u6307\u5b9aservice\u8def\u7531\uff0c\u5e76\u4e14\u4e3a\u8fd9\u4e2aService\u914d\u7f6eRibbon\u5ba2\u6237\u7aef(\u5f53\u524d\u9700\u8981\u5728Ribbon\u5931\u6548Eureka\u7684\u652f\u6301\uff09\u3002 \u4f8b\u5982\uff1a\n\n\napplication.yml\nzuul:\n  routes:\n    users:\n      path: /myusers/**\n      serviceId: users\nribbon:\n  eureka:\n    enabled: false\nusers:\n  ribbon:\n    listOfServers: example.com,google.com\n\n\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5339\u914d\u6765\u5efa\u7acbServiceId\u548c\u8def\u7531\u4e4b\u95f4\u7684\u9ed8\u5951\u3002\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u547d\u540d\u7ec4\u6765\u4ece\u670d\u52a1ID\u4e2d\u63d0\u53d6\u53d8\u91cf\uff0c\u6ce8\u5165\u4ed6\u4eec\u5230\u4e00\u4e2a\u8def\u7531\u6a21\u5f0f\u91cc\u3002\n\n\nApplicationConfiguration.java\n@Bean\npublic PatternServiceRouteMapper serviceRouteMapper() {\n    return new PatternServiceRouteMapper(\n        \"(?<name>^.+)-(?<version>v.+$)\",\n        \"${version}/${name}\");\n}\n\n\n\n\u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u670d\u52a1ID\u4e3a\"myusers-v1\"\u5c06\u88ab\u6620\u5c04\u5230\u8def\u7531 \n\"/v1/myusers/**\"\n\u4e0a\u3002\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f1a\u88ab\u63a5\u53d7\uff0c\u4f46\u662f\u6240\u6709\u7684\u540d\u79f0\u7ec4\u5fc5\u987b\u540c\u65f6\u51fa\u73b0\u5728servicePattern\u548croutePattern\u4e0a\u3002\u5982\u679cservicePattern\u4e0d\u5339\u914dService Id\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u884c\u4e3a\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c \u670d\u52a1ID\u662f\"myusers\"\u7684\u670d\u52a1\u4f1a\u88ab\u6620\u5c04\u5230\u8def\u7531\uff1a\n\"/myusers/**\"\n\uff08\u4e0d\u68c0\u6d4b\u7248\u672c\uff09\u3002 \u8fd9\u4e2a\u7279\u6027\u9ed8\u8ba4\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u5e76\u4e14\u4ec5\u4ec5\u9002\u7528\u4e8e\u5df2\u7ecf\u88ab\u53d1\u73b0\uff08\u5e94\u8be5\u662f\u5df2\u7ecf\u6ce8\u518c\uff09\u7684\u670d\u52a1\u3002\n\n\n\u4e3a\u4e86\u7ed9\u6240\u6709\u7684\u6620\u5c04\u589e\u52a0\u524d\u7f00\uff0c \u53ef\u4ee5\u8bbe\u7f6ezuul.prefix\uff0c\u4f8b\u5982/api\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u8bf7\u6c42\u88ab\u8f6c\u53d1\u524d\uff0c\u8fd9\u4e2a\u4ee3\u7406\u524d\u7f00\u4f1a\u88ab\u4ece\u8bf7\u6c42\u4e2d\u53bb\u9664\u6389\u3002\u4f60\u4e5f\u53ef\u4ee5\u6309\u7167\u72ec\u7acb\u7684\u8def\u7531\u6765\u63a7\u5236\u8fd9\u4e2a\u529f\u80fd\u7684\u5207\u6362\uff0c\u4f8b\u5982\uff1a\n\n\napplication.yml\n zuul:\n  routes:\n    users:\n      path: /myusers/**\n      stripPrefix: false\n\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8bf7\u6c42\n\"/myusers/101\"\n\u5c06\u88ab\u8f6c\u53d1\u5230\n\"users\"\n\u670d\u52a1\u7684\n\"/myusers/101\"\n\u4e0a\u3002\n\n\nZuul.routes\u6761\u76ee\u5b9e\u9645\u4e0a\u662f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7c7b\u578b\u4e3aZuulProperties\u7684\u5bf9\u8c61\u4e0a\u3002\u5982\u679c\u67e5\u627e\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u96c6\uff0c\u4f60\u4f1a\u8fd4\u73b0\u6709\u4e00\u4e2a\"retryable\"\u7684\u6807\u5fd7\u4f4d\u3002\u5c06\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e3atrue\uff0cRibbon\u7684\u5ba2\u6237\u7aef\u5c06\u81ea\u52a8\u91cd\u8bd5\u5931\u8d25\u7684\u8bf7\u6c42\u3002\uff08\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528Ribbon\u5ba2\u6237\u7aef\u914d\u7f6e\u66f4\u6539\u8fd9\u4e2a\u64cd\u4f5c\u7684\u53c2\u6570\uff09\u3002\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cX-Forwarded-Host\u00a0header\u4f1a\u88ab\u589e\u52a0\u5230\u8f6c\u53d1\u7684\u8bf7\u6c42\u91cc\u3002 \u5982\u679c\u4e0d\u60f3\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u9700\u8981\u8bbe\u7f6e\u00a0\nzuul.addProxyHeaders = false\n\u3002 \n\n\n\u4e00\u4e2a\u5e26\u6709@EnableZuulProxy\u7684\u5e94\u7528\u80fd\u591f\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u5668\u3002\u5982\u679c\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8def\u7531(\"/\")\uff0c\u4f8b\u5982examplezuul.route.home: / \u5c06\u8def\u7531\u6240\u6709\u7684\u8bf7\u6c42\u5230\"home\" service\u3002\n\n\n\u5982\u679c\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u4e00\u4e9b\u8def\u7531\u6a21\u5f0f\u7684\u5ffd\u7565\uff0c \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7279\u6b8a\u7684\u5ffd\u7565\u6a21\u5f0f\u3002 \u8fd9\u4e9b\u6a21\u5f0f\u5728\u8def\u7531\u5b9a\u4f4d\u8fc7\u7a0b\u7684\u5f00\u59cb\u88ab\u8ba1\u7b97\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u524d\u7f00\u5e94\u8be5\u88ab\u5305\u542b\u5728\u6a21\u5f0f\u91cc\u6765\u4fdd\u8bc1\u5339\u914d\u3002\u5ffd\u7565\u6a21\u5f0f\u8de8\u8d8a\u6240\u6709\u670d\u52a1\u548c\u53d6\u4ee3\u6240\u6709\u5176\u4ed6\u8def\u7531\u89c4\u8303\u3002\n\n\napplication.yml\nzuul:\n  ignoredPatterns: /**/admin/**\n  routes:\n    users: /myusers/**\n\n\n\n\u8fd9\u610f\u5473\u7740\u6240\u6709\u7684\u7c7b\u4f3c\n\"/myusers/101\"\n\u7684\u8bf7\u6c42\u5c06\u88ab\u8f6c\u53d1\u5230 \n\"users\"\n\u670d\u52a1\u7684\n\"/101\"\n\u4e0a\u3002\u4f46\u5305\u542b\n\"/admin/\"\n\u5c06\u4e0d\u88ab\u89e3\u6790\u3002\n\n\n\u6ce8\u610f\uff1a \u5982\u679c\u4f60\u9700\u8981\u4f60\u7684\u8def\u7531\u914d\u7f6e\u6709\u987a\u5e8f\uff0c\u9700\u8981\u4f7f\u7528YAML\u6587\u4ef6\uff0cproperties file\u5c06\u6d41\u5931\u9884\u8ba2\u7684\u987a\u5e8f\u3002\n\n\napplication.yml\nzuul:\n  routes:\n    users:\n      path: /myusers/**\n    legacy:\n      path: /**\n\n\n\n\u5982\u679c\u4f7f\u7528 properties file\uff0c legacy\u8def\u5f84\u53ef\u80fd\u4f1a\u8dd1\u5230users\u8def\u5f84\u524d\u9762\uff0c\u4f7f\u5f97users\u8def\u5f84\u4e0d\u53ef\u8fbe\u3002\n\n\nZuul Http Client\n#\n\n\nzuul\u9ed8\u8ba4\u4f7f\u7528\u7684HTTP Client\u662fApache HTTP Client\uff0c\u4ee3\u66ff\u4e86\u8fc7\u65f6\u7684Ribbon RestClient\u3002 \u5982\u679c\u60f3\u4f7f\u7528 RestClient\u6216\u8005okhttp3.OkHttpClient\uff0c\u8bbe\u7f6eribbon.restclient.enabled=true\u6216\u8005ribbon.okhttp.enabled=true\u3002\n\n\nCookies and Sensitive Headers\n#\n\n\n\u540c\u4e00\u7cfb\u7edf\u5728\u670d\u52a1\u95f4\u5171\u4eabheaders\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\u4f46\u662f\uff0c\u4f60\u6216\u8bb8\u4e0d\u60f3\u4e00\u4e9b\u654f\u611f\u7684headers\u5411\u4e0b\u6cc4\u9732\u5230\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u5728\u8def\u7531\u914d\u7f6e\u91cc\u6307\u5b9a\u4e00\u4e2a\u5ffd\u7565\u7684headers\u5217\u8868\u3002Cookies\u5728\u6d4f\u89c8\u5668\u7aef\u6709\u660e\u786e\u7684\u8bed\u4e49\uff0c\u6240\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u7279\u6b8a\u7684\u89d2\u8272\uff0c\u603b\u662f\u88ab\u89c6\u4e3a\u5f88\u654f\u611f\u3002\u5982\u679c\u5ba2\u6237\u7aef\u662f\u6d4f\u89c8\u5668\uff0c\u56e0\u4e3acookies\u7684\u6df7\u6742\uff0c\u4e5f\u4f1a\u7ed9\u4f7f\u7528\u4e0b\u6e38\u670d\u52a1\u7684\u7528\u6237\u9020\u6210\u95ee\u9898\u3002\n\n\n\u5982\u679c\u4f60\u5bf9\u670d\u52a1\u7684\u8bbe\u8ba1\u5f88\u5c0f\u5fc3\uff0c\u4f8b\u5982\u5982\u679c\u4ec5\u4ec5\u4e00\u4e2a\u4e0b\u6e38\u670d\u52a1\u8bbe\u7f6e\u4e86cookies\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u80fd\u8ba9\u4ed6\u4eec\u4e00\u76f4\u4ece\u540e\u7aef\u6d41\u7a9c\u5230\u8c03\u7528\u7aef\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u7684\u4ee3\u7406\u8bbe\u7f6e\u4e86cookies\uff0c\u5e76\u4e14\u6240\u6709\u540e\u7aef\u670d\u52a1\u662f\u540c\u4e00\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u5b83\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u5206\u4eab\u4ed6\u4eec\uff08\u7c7b\u4f3c\u4e8e\u4f7f\u7528Spring Session\u6765link\u4ed6\u4eec\u5230\u4e00\u4e9b\u5171\u4eab\u72b6\u6001\uff09\u3002\u53e6\u5916\uff0c\u4efb\u4f55\u7531\u4e0b\u6e38\u670d\u52a1\u8bbe\u7f6e/\u83b7\u53d6\u7684cookies\uff0c\u5bf9\u4e8e\u8c03\u7528\u8005\u6765\u8bf4\uff0c\u4e0d\u4e00\u5b9a\u7279\u522b\u6709\u7528\u3002\u56e0\u4e3a\uff0c\u63a8\u8350\u4f60\u4e3a\u8def\u7531\"Set-Cookie\"\u548c\u8bbe\u7f6ecookies\u5230header\u65f6\uff0c\u4e0d\u8981\u4f5c\u4e3adomain\u7684\u4e00\u90e8\u5206\u3002\u5373\u4f7f\u8def\u7531\u662fdomain\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u8981\u5c1d\u8bd5\u8ba4\u771f\u601d\u8003\u662f\u5426\u5141\u8bb8cookies\u5728\u670d\u52a1\u548c\u4ee3\u7406\u95f4\u6d41\u52a8\u3002\n\n\n\u654f\u611f\u6027headers\u80fd\u591f\u5728\u6bcf\u4e2aroute\u91cc\u7528\u9017\u53f7\u5206\u9694\u8fdb\u884c\u914d\u7f6e\u3002\n\n\napplication.yml\n  zuul:\n    routes:\n  users:\n    path: /myusers/**\n    sensitiveHeaders: Cookie,Set-Cookie,Authorization\n    url: https://downstream\n\n\n\n\u654f\u611f\u6027\u7684headers\u4e5f\u80fd\u7528 zuul.sensitiveHeaders\u8fdb\u884c\u5168\u5c40\u8bbe\u7f6e\u3002\u5982\u679croute\u4e0a\u8bbe\u7f6e\u4e86sensitiveHeaders\uff0c\u5c06\u8986\u76d6\u5168\u5c40\u8bbe\u7f6e\u3002\n\n\n\u5ffd\u7565Headers\n#\n\n\n\u9664\u4e86route\u4e0a\u7684\u654f\u611f\u6027headers\u4e4b\u5916\uff0c\u5728\u4e0e\u4e0b\u6e38\u670d\u52a1\u4ea4\u4e92\u671f\u95f4\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6ezuul.ignoredHeaders\u6765\u5ffd\u7565headers\uff08\u8bf7\u6c42\u548c\u5e94\u7b54\uff09\u3002\u9ed8\u8ba4\uff0c\u8fd9\u4e2a\u5c5e\u6027\u662f\u7a7a\u7684\u3002\u9664\u975eSpring Security\u4e0d\u5728classpath\uff0c\u5426\u5219\u4ed6\u4eec\u5c06\u521d\u59cb\u5316\u4e00\u7ec4\u7531Spring Security\u6307\u5b9a\u7684\n\"security\"\n headers\u3002\u8fd9\u4e2a\u5047\u8bbe\u662f\uff0c\u4e0b\u6e38\u670d\u52a1\u4e5f\u53ef\u80fd\u589e\u52a0headers\u3002\u5982\u679c\u5f53Spring Security\u4e0d\u5728classpath\uff0c\u6211\u4eec\u4e0d\u60f3\u5e9f\u5f03\u90a3\u4e9bsecurity headers\uff0c\u53ef\u4ee5\u8bbe\u7f6ezuul.ignoreSecurityHeaders\u4e3afalse\u3002\u5982\u679c\u4f60\u4e0d\u6fc0\u6d3bSpring Security\u7684Security response headers\u6216\u8005\u5e0c\u671b\u4e0b\u6e38\u670d\u52a1\u63d0\u4f9b\u8fd9\u4e9b\u503c\uff0c\u8fd9\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002\n\n\nThe Routes \u8bbf\u95ee\u70b9\n#\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\n@EnableZuulProxy\n\u548cSpring Boot Actuator\uff0c\u4f60\u5c06\u80fd\u5f97\u5230\u4e00\u4e2a/routes\u7684\u8bbf\u95ee\u70b9\u3002GET\u8fd9\u4e2a\u8bbf\u95ee\u70b9\u5c06\u8fd4\u56de\u6620\u5c04\u7684route\u5217\u8868\u3002 POST\u8fd9\u4e2a\u8bbf\u95ee\u70b9\u5c06\u5f3a\u5236\u5237\u65b0\u5b58\u5728\u7684routes\u3002\n\n\n\u6291\u5236\u6a21\u5f0f\u548c\u672c\u5730\u8f6c\u53d1\n#\n\n\n\u5f53\u8fc1\u79fb\u4e00\u4e2a\u5b58\u5728\u7684\u5e94\u7528\u6216\u8005API\u65f6\uff0c\u6709\u4e00\u4e2a\u901a\u7528\u7684\u6a21\u5f0f\u662f\u201c\u6291\u5236\u201d\u90a3\u4e2a\u65e7\u7684\u8bbf\u95ee\u70b9\uff0c\u6162\u6162\u7684\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\u66ff\u6362\u4ed6\u4eec\u3002Zuul\u4ee3\u7406\u5c31\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u91cd\u5b9a\u5411\u7f51\u7edc\u8bbf\u95ee\u5230\u65b0\u7684\u8bbf\u95ee\u70b9\u3002\u4f8b\u5982\u5982\u4e0b\u914d\u7f6e\uff1a\n\n\napplication.yml\n  zuul:\n    routes:\n        first:\n          path: /first/**\n          url: http://first.example.com\n        second:\n          path: /second/**\n          url: forward:/second\n        third:\n          path: /third/**\n          url: forward:/3rd\n        legacy:\n          path: /**\n          url: http://legacy.example.com\n\n\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8def\u5f84\u662f/first/\n\u7684\u8bf7\u6c42\u88ab\u63d0\u53d6\u5230\u4e00\u4e2a\u5e26\u6709\u5916\u90e8url\u7684\u65b0\u7684\u670d\u52a1\u3002 \u8def\u5f84/second/\n\u548c/third/**\u88ab\u8f6c\u53d1\u5230\u672c\u5730\u670d\u52a1\u6765\u5904\u7406\u3002\u800c\u5269\u4e0b\u7684\u4e0d\u7b26\u5408\u4ee5\u4e0a\u6a21\u5f0f\u7684\u8bf7\u6c42\u624d\u88ab\"legacy\"\u5904\u7406\u3002\n\n\n\u901a\u8fc7Zuul\u4e0a\u4f20\u6587\u4ef6\n#\n\n\n\u4f7f\u7528Zuul\uff08 @EnableZuulProxy\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u8def\u5f84\u4e0a\u4f20\u6587\u4ef6\uff0c\u4f46\u8fd9\u4ec5\u4ec5\u5bf9\u4e8e\u5c3d\u53ef\u80fd\u5c0f\u7684\u6587\u4ef6\u3002\u5bf9\u4e8e\u5927\u7684\u6587\u4ef6\uff0c\u6709\u4e00\u4e2a\u53eb\u505a\n\"/zuul/*\"\n\u7684\u53ef\u66ff\u4ee3\u7684\u8def\u5f84\u53ef\u4ee5\u7ed5\u8fc7Sping DispathcerServlet\uff08\u4e3a\u4e86\u907f\u514d\u591a\u91cd\u5904\u7406\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u7f6e\nzuul.routes.customers=/customers/**\n\uff0c\u4f60\u53ef\u4ee5POST\u4e00\u4e2a\u5927\u7684\u6587\u4ef6\u7ed9\"/\nzuul/customers/*\"\n\u3002\u8fd9\u4e2aServlet\u8def\u5f84\u7ecf\u7531zuul.servletPath\u88ab\u66b4\u9732\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4ee3\u7406\u7684route\u5229\u7528\u7684\u662fRibbon\u8d1f\u8f7d\u5747\u8861\uff0c\u5927\u7684\u6587\u4ef6\u4e5f\u9700\u8981\u63d0\u9ad8\u8d85\u65f6\u7684\u8bbe\u7f6e\u3002\n\u4f8b\u5982\uff1a\n\n\napplication.yml\n  hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000\n  ribbon:\n    ConnectTimeout: 3000\n    ReadTimeout: 60000\n\n\n\n\u6ce8\u610f\uff0c\u5bf9\u4e8e\u6d41\u5f0f\u5904\u7406\u5927\u7684\u6587\u4ef6\uff0c\u9700\u8981\u5728\u8bf7\u6c42\u4e2d\u4f7f\u7528\u5206\u5757\u7f16\u7801\uff08\u4e00\u4e9b\u6d4f\u89c8\u5668\u9ed8\u8ba4\u4e0d\u8fd9\u6837\u505a\uff09\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\uff1a\n\n\n$ curl -v -H \"Transfer-Encoding: chunked\" \\\n-F \"file=@mylarge.iso\" localhost:9999/zuul/simple/file\n\n\n\nPlain Embedded Zuul\n#\n\n\n\u4e5f\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u6ca1\u6709\u4ee3\u7406\u7684Zuul\u670d\u52a1\u5668\uff0c\u6216\u8005\u9009\u62e9\u6027\u7684\u5f00\u542f\u4e00\u90e8\u5206\u4ee3\u7406\u5e73\u53f0\u3002 \u5982\u679c\u4f7f\u7528@EnableZuulServer\uff08\u4e0d\u662f@EnableZuulProxy\uff09\uff0c\u4efb\u4f55\u589e\u52a0\u5230\u5e94\u7528\u91cc\u7684\uff0c\u6269\u5c55\u81eaZuulFilter\u7684beans\u90fd\u5c06\u81ea\u52a8\u88ab\u5b89\u88c5\u3002\u4f46\u5982\u679c\u4ed6\u4eec\u88ab\u6807\u6ce8@EnableZuulProxy\uff0c\u6ca1\u6709\u4efb\u4f55\u4ee3\u7406\u8fc7\u6ee4\u5668\u88ab\u81ea\u52a8\u5b89\u88c5\u3002\n\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0czuul\u670d\u52a1\u5668\u91cc\u7684routes\u4ecd\u7136\u901a\u8fc7\n\"zuul.routes.*\"\n\u6765\u6307\u5b9a\uff0c\u4f46\u662f\u6ca1\u6709\u670d\u52a1\u53d1\u73b0\uff0c\u4e5f\u6ca1\u6709\u4ee3\u7406\u3002\u56e0\u6b64\uff0c\"serviceId\"\u548c\u201curl\u201d\u8bbe\u7f6e\u90fd\u88ab\u5ffd\u7565\u3002 \u4f8b\u5982\uff1a\n\n\napplication.yml\n  zuul:\n    routes:\n      api: /api/**\n\n\n\n\u5c06\u6620\u5c04\u6240\u6709\u7684\n\"/api/**\"\n\u5230Zuul\u8fc7\u6ee4\u5668\u94fe\u3002\n\n\n\u5931\u6548 Zuul \u8fc7\u6ee4\u5668\n#\n\n\nZuul\u9ed8\u8ba4\u5305\u542b\u4e86\u5927\u91cf\u7684ZuulFilter Beans\u7528\u4e8e\u4ee3\u7406\u6216\u8005\u670d\u52a1\u6a21\u5f0f\u3002\u53ef\u4ee5\u53c2\u7167filters\u5305\u6765\u67e5\u627e\u6709\u54ea\u4e9b\u53ef\u7528\u7684\u8fc7\u6ee4\u5668\u3002\u5982\u679c\u4f60\u60f3\u5931\u6548\u4e00\u4e2a\uff0c\u7b80\u5355\u7684\u8bbe\u7f6e\nzuul.<SimpleClassName>.<filterType>.disable=true\n\u5c31\u53ef\u4ee5\u3002\u4f9d\u7167\u60ef\u4f8b\uff0c \u5305\u4e2d\u7684\u8fc7\u6ee4\u5668\u90fd\u662fZuul\u7684\u987e\u8651\u5668\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u5931\u6548\norg.springframework.cloud.netflix.zuul.filters.post.SendResponseFilter\n\uff0c\u8bbe\u7f6e \nzuul.SendResponseFilter.post.disable=true\n\u5c31\u53ef\u4ee5\u5566\u3002\n\n\nProviding Hystrix Fallbacks For Routes\n#\n\n\n\u5f53Zuul\u4e2d\u4e00\u4e2a\u7ed9\u5b9aroute\u7684\u65ad\u8def\u5668\u8df3\u95f8\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\nZuulFallbackProvider\n\u7684\u6269\u5c55Bean\u6765\u63d0\u4f9b\u4e00\u4e2afallback\u5e94\u7b54\u3002 \u5728\u8fd9\u4e2aBean\u91cc\uff0c\u4f60\u9700\u8981\u6307\u5b9aRoute ID\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\nClientHttpResponse\n\u4f5c\u4e3aFallback\u8fd4\u56de\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\nZuulFallbackProvider\n\u5b9e\u73b0\u3002\n\n\nclass MyFallbackProvider implements ZuulFallbackProvider {\n    @Override\n    public String getRoute() {\n        return \"customers\";\n    }\n\n\n@Override\npublic ClientHttpResponse fallbackResponse() {\n    return new ClientHttpResponse() {\n        @Override\n        public HttpStatus getStatusCode() throws IOException {\n            return HttpStatus.OK;\n        }\n\n        @Override\n        public int getRawStatusCode() throws IOException {\n            return 200;\n        }\n\n        @Override\n        public String getStatusText() throws IOException {\n            return \"OK\";\n        }\n\n        @Override\n        public void close() {\n\n        }\n\n        @Override\n        public InputStream getBody() throws IOException {\n            return new ByteArrayInputStream(\"fallback\".getBytes());\n        }\n\n        @Override\n        public HttpHeaders getHeaders() {\n            HttpHeaders headers = new HttpHeaders();\n            headers.setContentType(MediaType.APPLICATION_JSON);\n            return headers;\n        }\n    };\n}\n\n\n\n}\n\n\n\u8fd9\u65f6\uff0croute\u7684\u914d\u7f6e\u770b\u8d77\u6765\u50cf\uff1a\n\n\nzuul:\n  routes:\n    customers: /customers/**",
            "title": "Spring Cloud zuul"
        },
        {
            "location": "/user-guide/zuul/#zuul",
            "text": "\u8def\u7531\u662f\u5fae\u670d\u52a1\u4f53\u7cfb\u4e0d\u53ef\u6216\u7f3a\u7684\u4e00\u90e8\u5206\uff0c \u4f8b\u5982  /  \u53ef\u4ee5\u6620\u5c04\u5230Web \u5e94\u7528\uff0c /api/users \u53ef\u4ee5\u6620\u5c04\u7684\u7528\u6237\u670d\u52a1 \uff0c api/shop \u53ef\u4ee5\u6620\u5c04\u5230\u5546\u5e97\u670d\u52a1\u3002 Zuul\u662f\u4e00\u4e2a\u57fa\u4e8eJVM\u7684\u8def\u7531\u5668\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u670d\u52a1\u7aef\u8d1f\u8f7d\u5747\u8861\u3002\n\u5b83\u7531Netflix\u516c\u53f8\u5f00\u6e90\u3002  Netflix\u4f7f\u7528Zuul\u505a\u5982\u4e0b\u4e8b\u60c5\uff1a   \u8ba4\u8bc1\u9274\u6743\u3002  \u5ba1\u67e5  \u538b\u529b\u6d4b\u8bd5  \u91d1\u4e1d\u96c0\u6d4b\u8bd5  \u52a8\u6001\u8def\u7531  \u670d\u52a1\u8fc1\u79fb  \u8d1f\u8f7d\u526a\u88c1  \u5b89\u5168  \u9759\u6001\u5e94\u7b54\u5904\u7406   Zuul\u5141\u8bb8\u4f7f\u7528\u4efb\u4f55\u652f\u6301JVM\u7684\u8bed\u8a00\u6765\u5efa\u7acb\u89c4\u5219\u548c\u8fc7\u6ee4\u5668\uff0c\u5185\u7f6e\u4e86\u5bf9Java\u548cGroovy\u7684\u652f\u6301\u3002",
            "title": "Zuul\uff1a\u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668"
        },
        {
            "location": "/user-guide/zuul/#zuul_1",
            "text": "\u4e3a\u4e86\u5728\u81ea\u5df1\u7684project\u4e2d\u5f15\u5165zuul\uff0c\u4ec5\u4ec5\u9700\u8981\u4f7f\u7528spring-cloud-starter-zuul\u5c31OK\u5566\u3002\u8be6\u7ec6\u7684\u5185\u5bb9\u53c2\u7167\u00a0Spring Cloud Project page\u00a0\u3002",
            "title": "\u5982\u4f55\u5f15\u5165Zuul"
        },
        {
            "location": "/user-guide/zuul/#zuul_2",
            "text": "\u5f53\u4e00\u4e2aUI\u5e94\u7528\u60f3\u8981\u901a\u8fc7\u4ee3\u7406\u8c03\u7528\u540e\u7aef\u670d\u52a1\u65f6\uff0cSpring Cloud\u901a\u8fc7\u4e00\u4e2a\u5185\u7f6e\u7684Zuul\u4ee3\u7406\uff0c\u4ece\u800c\u51cf\u8f7b\u4e00\u4e9b\u901a\u7528\u6848\u4f8b\u7684\u5f00\u53d1\u3002 \u8fd9\u4e2a\u7279\u6027\u5bf9\u4e8e\u524d\u7aef\u7528\u6237\u4ea4\u4e92\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee\u540e\u7aef\u670d\u52a1\u662f\u6709\u7528\u7684\uff0c\u907f\u514d\u4e86\u4e3a\u6240\u6709\u540e\u7aef\u670d\u52a1\u5355\u72ec\u5efa\u7acbCORS\u548c\u8ba4\u8bc1\u76f8\u5173\u7ba1\u7406\u7b49\u4e8b\u60c5\u3002\u5728Spring Boot\u7684main\u7c7b\u4e0a\u9762\u6dfb\u52a0@EnableZuulProxy\u6ce8\u89e3\uff0c\u5b83\u5c31\u53ef\u4ee5\u8f6c\u53d1\u672c\u5730\u7684\u8c03\u7528\u5230\u9002\u7528\u7684\u670d\u52a1\u4e0a\u9762\u3002  \u6309\u7167\u60ef\u4f8b\uff0c \u4e00\u4e2a\u670d\u52a1ID\u4e3a\"users\"\u7684\u670d\u52a1\u4e5f\u5c06\u6536\u5230\u6765\u81ea\u4e8e/users\u7684\u8bf7\u6c42\u3002\u4ee3\u7406\u4f7f\u7528Ribbon\uff08\u4e00\u79cd\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\u673a\u5236\uff09\u5b9a\u4f4d\u4e00\u4e2a\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u6709\u8fed\u4ee3\u8bf7\u6c42\u5728hystrix command\uff08\u670d\u52a1\u5f02\u5e38\u65ad\u8def\u673a\u5236\uff09\u88ab\u6267\u884c\uff0c\u4ee5\u81f4\u4e8e\u4e00\u65e6\u5931\u8d25\uff0cHystrix metrics(\u670d\u52a1\u5f02\u5e38\u65ad\u8def\u7684\u76d1\u63a7\u673a\u5236)\u5c06\u80fd\u591f\u5448\u73b0\u51fa\u6765\u3002 \u4e00\u65e6\u65ad\u8def\u5668\u88ab\u6253\u5f00\uff0c \u4ee3\u7406\u5c06\u4e0d\u518d\u5c1d\u8bd5\u4e0e\u8fd9\u4e2a\u670d\u52a1\u8054\u7cfb\u3002  \u4e3a\u4e86\u8df3\u8fc7\u4e00\u4e9b\u81ea\u52a8\u589e\u52a0\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u8bbe\u7f6ezuul.ignored-services\u7684\u503c\uff0c\u4f7f\u5176\u7b26\u5408\u60f3\u8981\u5ffd\u7565\u7684\u670d\u52a1\u5217\u8868\u7684ID\u6a21\u5f0f\u3002\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5339\u914d\u8fd9\u79cd\u5ffd\u7565\u7684\u6a21\u5f0f\uff0c\u4f46\u662f\u88ab\u663e\u793a\u7684\u914d\u7f6e\u5230\u4e86Routes map\u91cc\u7684\u8bdd\uff0c\u5b83\u53c8\u4e0d\u80fd\u88ab\u5ffd\u7565\u3002\u4f8b\u5982\uff1a  application.yml\nzuul:\n  ignoredServices: '*'\n  routes:\n    users: /myusers/**  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u9664\u4e86\"users\"\uff0c\u6240\u6709\u7684\u670d\u52a1\u90fd\u4f1a\u88ab\u5ffd\u7565\u3002\n\u4e3a\u4e86\u6269\u5145\u6216\u8005\u6539\u53d8\u4ee3\u7406\u8def\u7531\uff0c \u4f60\u53ef\u4ee5\u589e\u52a0\u5982\u4e0b\u663e\u793a\u7684\u914d\u7f6e\uff1a  application.yml\nzuul:\n  routes:\n    users: /myusers/**  \u8fd9\u610f\u5473\u7740\u6765\u81ea\u4e8e \"/myusers\" \u7684http\u8bf7\u6c42\u5c06\u88ab\u8f6c\u53d1\u5230 \"users\" \u670d\u52a1\u4e0a\uff08\u4f8b\u5982 \"/myusers/101\" \u88ab\u8f6c\u53d1\u5230 \"/101\" \uff09\u3002  \u4e3a\u4e86\u5f97\u5230\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u7684\u8def\u7531\u5230\u670d\u52a1\u7684\u6807\u8bc6\u4e0a\uff1a   zuul:\n   routes:\n   users:\n     path: /myusers/**\n     serviceId: users_service  \u8fd9\u610f\u5473\u7740\u6765\u81ea\u4e8e \"/myusers\" \u7684http\u8bf7\u6c42\u88ab\u8f6c\u53d1\u5230 \"users_service\" \u8fd9\u4e2a\u670d\u52a1\u4e0a\u3002\n\u8def\u7531\u5fc5\u987b\u6709\u4e00\u4e2a\u7b26\u5408Ant\u6a21\u5f0f\u7684\"path\"\uff0c\u90a3\u4e48 \"/myusers/*\"  \u5c31\u4ec5\u4ec5\u5339\u914d\u7b2c\u4e00\u7ea7\uff0c\u800c \"/myusers/**\"  \u80fd\u591f\u5c42\u6b21\u5316\u5339\u914d\u3002  \u540e\u7aef\u670d\u52a1\u7684\u5b9a\u4f4d\u53ef\u4ee5\u6309\u7167\u670d\u52a1ID\u6216\u8005url\u6765\u8bc6\u522b\u3002 \u4f8b\u5982\uff1a  application.yml\nzuul:\n  routes:\n  users:\n    path: /myusers/**\n    url: http://example.com/users_service  \u8fd9\u4e9b\u7b80\u5355\u7684url\u8def\u7531\u662f\u4e0d\u652f\u6301HystrixCommand\u00a0\u548cRibbon\u8d1f\u8f7d\u5747\u8861\u7684\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u9700\u8981\u6307\u5b9aservice\u8def\u7531\uff0c\u5e76\u4e14\u4e3a\u8fd9\u4e2aService\u914d\u7f6eRibbon\u5ba2\u6237\u7aef(\u5f53\u524d\u9700\u8981\u5728Ribbon\u5931\u6548Eureka\u7684\u652f\u6301\uff09\u3002 \u4f8b\u5982\uff1a  application.yml\nzuul:\n  routes:\n    users:\n      path: /myusers/**\n      serviceId: users\nribbon:\n  eureka:\n    enabled: false\nusers:\n  ribbon:\n    listOfServers: example.com,google.com  \u4f60\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5339\u914d\u6765\u5efa\u7acbServiceId\u548c\u8def\u7531\u4e4b\u95f4\u7684\u9ed8\u5951\u3002\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u547d\u540d\u7ec4\u6765\u4ece\u670d\u52a1ID\u4e2d\u63d0\u53d6\u53d8\u91cf\uff0c\u6ce8\u5165\u4ed6\u4eec\u5230\u4e00\u4e2a\u8def\u7531\u6a21\u5f0f\u91cc\u3002  ApplicationConfiguration.java\n@Bean\npublic PatternServiceRouteMapper serviceRouteMapper() {\n    return new PatternServiceRouteMapper(\n        \"(?<name>^.+)-(?<version>v.+$)\",\n        \"${version}/${name}\");\n}  \u8fd9\u610f\u5473\u7740\uff0c\u4e00\u4e2a\u670d\u52a1ID\u4e3a\"myusers-v1\"\u5c06\u88ab\u6620\u5c04\u5230\u8def\u7531  \"/v1/myusers/**\" \u4e0a\u3002\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4f1a\u88ab\u63a5\u53d7\uff0c\u4f46\u662f\u6240\u6709\u7684\u540d\u79f0\u7ec4\u5fc5\u987b\u540c\u65f6\u51fa\u73b0\u5728servicePattern\u548croutePattern\u4e0a\u3002\u5982\u679cservicePattern\u4e0d\u5339\u914dService Id\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u884c\u4e3a\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c \u670d\u52a1ID\u662f\"myusers\"\u7684\u670d\u52a1\u4f1a\u88ab\u6620\u5c04\u5230\u8def\u7531\uff1a \"/myusers/**\" \uff08\u4e0d\u68c0\u6d4b\u7248\u672c\uff09\u3002 \u8fd9\u4e2a\u7279\u6027\u9ed8\u8ba4\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u5e76\u4e14\u4ec5\u4ec5\u9002\u7528\u4e8e\u5df2\u7ecf\u88ab\u53d1\u73b0\uff08\u5e94\u8be5\u662f\u5df2\u7ecf\u6ce8\u518c\uff09\u7684\u670d\u52a1\u3002  \u4e3a\u4e86\u7ed9\u6240\u6709\u7684\u6620\u5c04\u589e\u52a0\u524d\u7f00\uff0c \u53ef\u4ee5\u8bbe\u7f6ezuul.prefix\uff0c\u4f8b\u5982/api\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u8bf7\u6c42\u88ab\u8f6c\u53d1\u524d\uff0c\u8fd9\u4e2a\u4ee3\u7406\u524d\u7f00\u4f1a\u88ab\u4ece\u8bf7\u6c42\u4e2d\u53bb\u9664\u6389\u3002\u4f60\u4e5f\u53ef\u4ee5\u6309\u7167\u72ec\u7acb\u7684\u8def\u7531\u6765\u63a7\u5236\u8fd9\u4e2a\u529f\u80fd\u7684\u5207\u6362\uff0c\u4f8b\u5982\uff1a  application.yml\n zuul:\n  routes:\n    users:\n      path: /myusers/**\n      stripPrefix: false  \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8bf7\u6c42 \"/myusers/101\" \u5c06\u88ab\u8f6c\u53d1\u5230 \"users\" \u670d\u52a1\u7684 \"/myusers/101\" \u4e0a\u3002  Zuul.routes\u6761\u76ee\u5b9e\u9645\u4e0a\u662f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7c7b\u578b\u4e3aZuulProperties\u7684\u5bf9\u8c61\u4e0a\u3002\u5982\u679c\u67e5\u627e\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u96c6\uff0c\u4f60\u4f1a\u8fd4\u73b0\u6709\u4e00\u4e2a\"retryable\"\u7684\u6807\u5fd7\u4f4d\u3002\u5c06\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e3atrue\uff0cRibbon\u7684\u5ba2\u6237\u7aef\u5c06\u81ea\u52a8\u91cd\u8bd5\u5931\u8d25\u7684\u8bf7\u6c42\u3002\uff08\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528Ribbon\u5ba2\u6237\u7aef\u914d\u7f6e\u66f4\u6539\u8fd9\u4e2a\u64cd\u4f5c\u7684\u53c2\u6570\uff09\u3002  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cX-Forwarded-Host\u00a0header\u4f1a\u88ab\u589e\u52a0\u5230\u8f6c\u53d1\u7684\u8bf7\u6c42\u91cc\u3002 \u5982\u679c\u4e0d\u60f3\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u9700\u8981\u8bbe\u7f6e\u00a0 zuul.addProxyHeaders = false \u3002   \u4e00\u4e2a\u5e26\u6709@EnableZuulProxy\u7684\u5e94\u7528\u80fd\u591f\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u5668\u3002\u5982\u679c\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8def\u7531(\"/\")\uff0c\u4f8b\u5982examplezuul.route.home: / \u5c06\u8def\u7531\u6240\u6709\u7684\u8bf7\u6c42\u5230\"home\" service\u3002  \u5982\u679c\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u4e00\u4e9b\u8def\u7531\u6a21\u5f0f\u7684\u5ffd\u7565\uff0c \u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7279\u6b8a\u7684\u5ffd\u7565\u6a21\u5f0f\u3002 \u8fd9\u4e9b\u6a21\u5f0f\u5728\u8def\u7531\u5b9a\u4f4d\u8fc7\u7a0b\u7684\u5f00\u59cb\u88ab\u8ba1\u7b97\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u524d\u7f00\u5e94\u8be5\u88ab\u5305\u542b\u5728\u6a21\u5f0f\u91cc\u6765\u4fdd\u8bc1\u5339\u914d\u3002\u5ffd\u7565\u6a21\u5f0f\u8de8\u8d8a\u6240\u6709\u670d\u52a1\u548c\u53d6\u4ee3\u6240\u6709\u5176\u4ed6\u8def\u7531\u89c4\u8303\u3002  application.yml\nzuul:\n  ignoredPatterns: /**/admin/**\n  routes:\n    users: /myusers/**  \u8fd9\u610f\u5473\u7740\u6240\u6709\u7684\u7c7b\u4f3c \"/myusers/101\" \u7684\u8bf7\u6c42\u5c06\u88ab\u8f6c\u53d1\u5230  \"users\" \u670d\u52a1\u7684 \"/101\" \u4e0a\u3002\u4f46\u5305\u542b \"/admin/\" \u5c06\u4e0d\u88ab\u89e3\u6790\u3002  \u6ce8\u610f\uff1a \u5982\u679c\u4f60\u9700\u8981\u4f60\u7684\u8def\u7531\u914d\u7f6e\u6709\u987a\u5e8f\uff0c\u9700\u8981\u4f7f\u7528YAML\u6587\u4ef6\uff0cproperties file\u5c06\u6d41\u5931\u9884\u8ba2\u7684\u987a\u5e8f\u3002  application.yml\nzuul:\n  routes:\n    users:\n      path: /myusers/**\n    legacy:\n      path: /**  \u5982\u679c\u4f7f\u7528 properties file\uff0c legacy\u8def\u5f84\u53ef\u80fd\u4f1a\u8dd1\u5230users\u8def\u5f84\u524d\u9762\uff0c\u4f7f\u5f97users\u8def\u5f84\u4e0d\u53ef\u8fbe\u3002",
            "title": "\u5185\u7f6eZuul \u53cd\u5411\u4ee3\u7406"
        },
        {
            "location": "/user-guide/zuul/#zuul-http-client",
            "text": "zuul\u9ed8\u8ba4\u4f7f\u7528\u7684HTTP Client\u662fApache HTTP Client\uff0c\u4ee3\u66ff\u4e86\u8fc7\u65f6\u7684Ribbon RestClient\u3002 \u5982\u679c\u60f3\u4f7f\u7528 RestClient\u6216\u8005okhttp3.OkHttpClient\uff0c\u8bbe\u7f6eribbon.restclient.enabled=true\u6216\u8005ribbon.okhttp.enabled=true\u3002",
            "title": "Zuul Http Client"
        },
        {
            "location": "/user-guide/zuul/#cookies-and-sensitive-headers",
            "text": "\u540c\u4e00\u7cfb\u7edf\u5728\u670d\u52a1\u95f4\u5171\u4eabheaders\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\u4f46\u662f\uff0c\u4f60\u6216\u8bb8\u4e0d\u60f3\u4e00\u4e9b\u654f\u611f\u7684headers\u5411\u4e0b\u6cc4\u9732\u5230\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u3002\u4f60\u53ef\u4ee5\u5728\u8def\u7531\u914d\u7f6e\u91cc\u6307\u5b9a\u4e00\u4e2a\u5ffd\u7565\u7684headers\u5217\u8868\u3002Cookies\u5728\u6d4f\u89c8\u5668\u7aef\u6709\u660e\u786e\u7684\u8bed\u4e49\uff0c\u6240\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u7279\u6b8a\u7684\u89d2\u8272\uff0c\u603b\u662f\u88ab\u89c6\u4e3a\u5f88\u654f\u611f\u3002\u5982\u679c\u5ba2\u6237\u7aef\u662f\u6d4f\u89c8\u5668\uff0c\u56e0\u4e3acookies\u7684\u6df7\u6742\uff0c\u4e5f\u4f1a\u7ed9\u4f7f\u7528\u4e0b\u6e38\u670d\u52a1\u7684\u7528\u6237\u9020\u6210\u95ee\u9898\u3002  \u5982\u679c\u4f60\u5bf9\u670d\u52a1\u7684\u8bbe\u8ba1\u5f88\u5c0f\u5fc3\uff0c\u4f8b\u5982\u5982\u679c\u4ec5\u4ec5\u4e00\u4e2a\u4e0b\u6e38\u670d\u52a1\u8bbe\u7f6e\u4e86cookies\uff0c\u90a3\u4e48\u4f60\u4e5f\u53ef\u80fd\u8ba9\u4ed6\u4eec\u4e00\u76f4\u4ece\u540e\u7aef\u6d41\u7a9c\u5230\u8c03\u7528\u7aef\u3002\u540c\u65f6\uff0c\u5982\u679c\u4f60\u7684\u4ee3\u7406\u8bbe\u7f6e\u4e86cookies\uff0c\u5e76\u4e14\u6240\u6709\u540e\u7aef\u670d\u52a1\u662f\u540c\u4e00\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u3002\u5b83\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u5206\u4eab\u4ed6\u4eec\uff08\u7c7b\u4f3c\u4e8e\u4f7f\u7528Spring Session\u6765link\u4ed6\u4eec\u5230\u4e00\u4e9b\u5171\u4eab\u72b6\u6001\uff09\u3002\u53e6\u5916\uff0c\u4efb\u4f55\u7531\u4e0b\u6e38\u670d\u52a1\u8bbe\u7f6e/\u83b7\u53d6\u7684cookies\uff0c\u5bf9\u4e8e\u8c03\u7528\u8005\u6765\u8bf4\uff0c\u4e0d\u4e00\u5b9a\u7279\u522b\u6709\u7528\u3002\u56e0\u4e3a\uff0c\u63a8\u8350\u4f60\u4e3a\u8def\u7531\"Set-Cookie\"\u548c\u8bbe\u7f6ecookies\u5230header\u65f6\uff0c\u4e0d\u8981\u4f5c\u4e3adomain\u7684\u4e00\u90e8\u5206\u3002\u5373\u4f7f\u8def\u7531\u662fdomain\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u8981\u5c1d\u8bd5\u8ba4\u771f\u601d\u8003\u662f\u5426\u5141\u8bb8cookies\u5728\u670d\u52a1\u548c\u4ee3\u7406\u95f4\u6d41\u52a8\u3002  \u654f\u611f\u6027headers\u80fd\u591f\u5728\u6bcf\u4e2aroute\u91cc\u7528\u9017\u53f7\u5206\u9694\u8fdb\u884c\u914d\u7f6e\u3002  application.yml\n  zuul:\n    routes:\n  users:\n    path: /myusers/**\n    sensitiveHeaders: Cookie,Set-Cookie,Authorization\n    url: https://downstream  \u654f\u611f\u6027\u7684headers\u4e5f\u80fd\u7528 zuul.sensitiveHeaders\u8fdb\u884c\u5168\u5c40\u8bbe\u7f6e\u3002\u5982\u679croute\u4e0a\u8bbe\u7f6e\u4e86sensitiveHeaders\uff0c\u5c06\u8986\u76d6\u5168\u5c40\u8bbe\u7f6e\u3002",
            "title": "Cookies and Sensitive Headers"
        },
        {
            "location": "/user-guide/zuul/#headers",
            "text": "\u9664\u4e86route\u4e0a\u7684\u654f\u611f\u6027headers\u4e4b\u5916\uff0c\u5728\u4e0e\u4e0b\u6e38\u670d\u52a1\u4ea4\u4e92\u671f\u95f4\uff0c\u4f60\u53ef\u4ee5\u8bbe\u7f6ezuul.ignoredHeaders\u6765\u5ffd\u7565headers\uff08\u8bf7\u6c42\u548c\u5e94\u7b54\uff09\u3002\u9ed8\u8ba4\uff0c\u8fd9\u4e2a\u5c5e\u6027\u662f\u7a7a\u7684\u3002\u9664\u975eSpring Security\u4e0d\u5728classpath\uff0c\u5426\u5219\u4ed6\u4eec\u5c06\u521d\u59cb\u5316\u4e00\u7ec4\u7531Spring Security\u6307\u5b9a\u7684 \"security\"  headers\u3002\u8fd9\u4e2a\u5047\u8bbe\u662f\uff0c\u4e0b\u6e38\u670d\u52a1\u4e5f\u53ef\u80fd\u589e\u52a0headers\u3002\u5982\u679c\u5f53Spring Security\u4e0d\u5728classpath\uff0c\u6211\u4eec\u4e0d\u60f3\u5e9f\u5f03\u90a3\u4e9bsecurity headers\uff0c\u53ef\u4ee5\u8bbe\u7f6ezuul.ignoreSecurityHeaders\u4e3afalse\u3002\u5982\u679c\u4f60\u4e0d\u6fc0\u6d3bSpring Security\u7684Security response headers\u6216\u8005\u5e0c\u671b\u4e0b\u6e38\u670d\u52a1\u63d0\u4f9b\u8fd9\u4e9b\u503c\uff0c\u8fd9\u53ef\u80fd\u662f\u6709\u7528\u7684\u3002",
            "title": "\u5ffd\u7565Headers"
        },
        {
            "location": "/user-guide/zuul/#the-routes",
            "text": "\u5982\u679c\u4f60\u4f7f\u7528 @EnableZuulProxy \u548cSpring Boot Actuator\uff0c\u4f60\u5c06\u80fd\u5f97\u5230\u4e00\u4e2a/routes\u7684\u8bbf\u95ee\u70b9\u3002GET\u8fd9\u4e2a\u8bbf\u95ee\u70b9\u5c06\u8fd4\u56de\u6620\u5c04\u7684route\u5217\u8868\u3002 POST\u8fd9\u4e2a\u8bbf\u95ee\u70b9\u5c06\u5f3a\u5236\u5237\u65b0\u5b58\u5728\u7684routes\u3002",
            "title": "The Routes \u8bbf\u95ee\u70b9"
        },
        {
            "location": "/user-guide/zuul/#_1",
            "text": "\u5f53\u8fc1\u79fb\u4e00\u4e2a\u5b58\u5728\u7684\u5e94\u7528\u6216\u8005API\u65f6\uff0c\u6709\u4e00\u4e2a\u901a\u7528\u7684\u6a21\u5f0f\u662f\u201c\u6291\u5236\u201d\u90a3\u4e2a\u65e7\u7684\u8bbf\u95ee\u70b9\uff0c\u6162\u6162\u7684\u7528\u4e0d\u540c\u7684\u5b9e\u73b0\u66ff\u6362\u4ed6\u4eec\u3002Zuul\u4ee3\u7406\u5c31\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u91cd\u5b9a\u5411\u7f51\u7edc\u8bbf\u95ee\u5230\u65b0\u7684\u8bbf\u95ee\u70b9\u3002\u4f8b\u5982\u5982\u4e0b\u914d\u7f6e\uff1a  application.yml\n  zuul:\n    routes:\n        first:\n          path: /first/**\n          url: http://first.example.com\n        second:\n          path: /second/**\n          url: forward:/second\n        third:\n          path: /third/**\n          url: forward:/3rd\n        legacy:\n          path: /**\n          url: http://legacy.example.com  \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8def\u5f84\u662f/first/ \u7684\u8bf7\u6c42\u88ab\u63d0\u53d6\u5230\u4e00\u4e2a\u5e26\u6709\u5916\u90e8url\u7684\u65b0\u7684\u670d\u52a1\u3002 \u8def\u5f84/second/ \u548c/third/**\u88ab\u8f6c\u53d1\u5230\u672c\u5730\u670d\u52a1\u6765\u5904\u7406\u3002\u800c\u5269\u4e0b\u7684\u4e0d\u7b26\u5408\u4ee5\u4e0a\u6a21\u5f0f\u7684\u8bf7\u6c42\u624d\u88ab\"legacy\"\u5904\u7406\u3002",
            "title": "\u6291\u5236\u6a21\u5f0f\u548c\u672c\u5730\u8f6c\u53d1"
        },
        {
            "location": "/user-guide/zuul/#zuul_3",
            "text": "\u4f7f\u7528Zuul\uff08 @EnableZuulProxy\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u8def\u5f84\u4e0a\u4f20\u6587\u4ef6\uff0c\u4f46\u8fd9\u4ec5\u4ec5\u5bf9\u4e8e\u5c3d\u53ef\u80fd\u5c0f\u7684\u6587\u4ef6\u3002\u5bf9\u4e8e\u5927\u7684\u6587\u4ef6\uff0c\u6709\u4e00\u4e2a\u53eb\u505a \"/zuul/*\" \u7684\u53ef\u66ff\u4ee3\u7684\u8def\u5f84\u53ef\u4ee5\u7ed5\u8fc7Sping DispathcerServlet\uff08\u4e3a\u4e86\u907f\u514d\u591a\u91cd\u5904\u7406\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u7f6e zuul.routes.customers=/customers/** \uff0c\u4f60\u53ef\u4ee5POST\u4e00\u4e2a\u5927\u7684\u6587\u4ef6\u7ed9\"/ zuul/customers/*\" \u3002\u8fd9\u4e2aServlet\u8def\u5f84\u7ecf\u7531zuul.servletPath\u88ab\u66b4\u9732\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4ee3\u7406\u7684route\u5229\u7528\u7684\u662fRibbon\u8d1f\u8f7d\u5747\u8861\uff0c\u5927\u7684\u6587\u4ef6\u4e5f\u9700\u8981\u63d0\u9ad8\u8d85\u65f6\u7684\u8bbe\u7f6e\u3002\n\u4f8b\u5982\uff1a  application.yml\n  hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000\n  ribbon:\n    ConnectTimeout: 3000\n    ReadTimeout: 60000  \u6ce8\u610f\uff0c\u5bf9\u4e8e\u6d41\u5f0f\u5904\u7406\u5927\u7684\u6587\u4ef6\uff0c\u9700\u8981\u5728\u8bf7\u6c42\u4e2d\u4f7f\u7528\u5206\u5757\u7f16\u7801\uff08\u4e00\u4e9b\u6d4f\u89c8\u5668\u9ed8\u8ba4\u4e0d\u8fd9\u6837\u505a\uff09\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\uff1a  $ curl -v -H \"Transfer-Encoding: chunked\" \\\n-F \"file=@mylarge.iso\" localhost:9999/zuul/simple/file",
            "title": "\u901a\u8fc7Zuul\u4e0a\u4f20\u6587\u4ef6"
        },
        {
            "location": "/user-guide/zuul/#plain-embedded-zuul",
            "text": "\u4e5f\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u6ca1\u6709\u4ee3\u7406\u7684Zuul\u670d\u52a1\u5668\uff0c\u6216\u8005\u9009\u62e9\u6027\u7684\u5f00\u542f\u4e00\u90e8\u5206\u4ee3\u7406\u5e73\u53f0\u3002 \u5982\u679c\u4f7f\u7528@EnableZuulServer\uff08\u4e0d\u662f@EnableZuulProxy\uff09\uff0c\u4efb\u4f55\u589e\u52a0\u5230\u5e94\u7528\u91cc\u7684\uff0c\u6269\u5c55\u81eaZuulFilter\u7684beans\u90fd\u5c06\u81ea\u52a8\u88ab\u5b89\u88c5\u3002\u4f46\u5982\u679c\u4ed6\u4eec\u88ab\u6807\u6ce8@EnableZuulProxy\uff0c\u6ca1\u6709\u4efb\u4f55\u4ee3\u7406\u8fc7\u6ee4\u5668\u88ab\u81ea\u52a8\u5b89\u88c5\u3002  \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0czuul\u670d\u52a1\u5668\u91cc\u7684routes\u4ecd\u7136\u901a\u8fc7 \"zuul.routes.*\" \u6765\u6307\u5b9a\uff0c\u4f46\u662f\u6ca1\u6709\u670d\u52a1\u53d1\u73b0\uff0c\u4e5f\u6ca1\u6709\u4ee3\u7406\u3002\u56e0\u6b64\uff0c\"serviceId\"\u548c\u201curl\u201d\u8bbe\u7f6e\u90fd\u88ab\u5ffd\u7565\u3002 \u4f8b\u5982\uff1a  application.yml\n  zuul:\n    routes:\n      api: /api/**  \u5c06\u6620\u5c04\u6240\u6709\u7684 \"/api/**\" \u5230Zuul\u8fc7\u6ee4\u5668\u94fe\u3002",
            "title": "Plain Embedded Zuul"
        },
        {
            "location": "/user-guide/zuul/#zuul_4",
            "text": "Zuul\u9ed8\u8ba4\u5305\u542b\u4e86\u5927\u91cf\u7684ZuulFilter Beans\u7528\u4e8e\u4ee3\u7406\u6216\u8005\u670d\u52a1\u6a21\u5f0f\u3002\u53ef\u4ee5\u53c2\u7167filters\u5305\u6765\u67e5\u627e\u6709\u54ea\u4e9b\u53ef\u7528\u7684\u8fc7\u6ee4\u5668\u3002\u5982\u679c\u4f60\u60f3\u5931\u6548\u4e00\u4e2a\uff0c\u7b80\u5355\u7684\u8bbe\u7f6e zuul.<SimpleClassName>.<filterType>.disable=true \u5c31\u53ef\u4ee5\u3002\u4f9d\u7167\u60ef\u4f8b\uff0c \u5305\u4e2d\u7684\u8fc7\u6ee4\u5668\u90fd\u662fZuul\u7684\u987e\u8651\u5668\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u5931\u6548 org.springframework.cloud.netflix.zuul.filters.post.SendResponseFilter \uff0c\u8bbe\u7f6e  zuul.SendResponseFilter.post.disable=true \u5c31\u53ef\u4ee5\u5566\u3002",
            "title": "\u5931\u6548 Zuul \u8fc7\u6ee4\u5668"
        },
        {
            "location": "/user-guide/zuul/#providing-hystrix-fallbacks-for-routes",
            "text": "\u5f53Zuul\u4e2d\u4e00\u4e2a\u7ed9\u5b9aroute\u7684\u65ad\u8def\u5668\u8df3\u95f8\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a ZuulFallbackProvider \u7684\u6269\u5c55Bean\u6765\u63d0\u4f9b\u4e00\u4e2afallback\u5e94\u7b54\u3002 \u5728\u8fd9\u4e2aBean\u91cc\uff0c\u4f60\u9700\u8981\u6307\u5b9aRoute ID\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a ClientHttpResponse \u4f5c\u4e3aFallback\u8fd4\u56de\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 ZuulFallbackProvider \u5b9e\u73b0\u3002  class MyFallbackProvider implements ZuulFallbackProvider {\n    @Override\n    public String getRoute() {\n        return \"customers\";\n    }  @Override\npublic ClientHttpResponse fallbackResponse() {\n    return new ClientHttpResponse() {\n        @Override\n        public HttpStatus getStatusCode() throws IOException {\n            return HttpStatus.OK;\n        }\n\n        @Override\n        public int getRawStatusCode() throws IOException {\n            return 200;\n        }\n\n        @Override\n        public String getStatusText() throws IOException {\n            return \"OK\";\n        }\n\n        @Override\n        public void close() {\n\n        }\n\n        @Override\n        public InputStream getBody() throws IOException {\n            return new ByteArrayInputStream(\"fallback\".getBytes());\n        }\n\n        @Override\n        public HttpHeaders getHeaders() {\n            HttpHeaders headers = new HttpHeaders();\n            headers.setContentType(MediaType.APPLICATION_JSON);\n            return headers;\n        }\n    };\n}  }  \u8fd9\u65f6\uff0croute\u7684\u914d\u7f6e\u770b\u8d77\u6765\u50cf\uff1a  zuul:\n  routes:\n    customers: /customers/**",
            "title": "Providing Hystrix Fallbacks For Routes"
        },
        {
            "location": "/source/",
            "text": "Spring Cloud\u6e90\u7801\u5206\u6790\u7cfb\u5217\n#\n\n\nSpring Cloud Eureka\u6e90\u7801\u5206\u6790\n#\n\n\nSpring Cloud Eureka\u670d\u52a1\u7eed\u7ea6(Renew)\u6e90\u7801\u5206\u6790\n#\n\n\nSpring Cloud Eureka\u670d\u52a1\u6ce8\u518c\u6e90\u7801\u5206\u6790\n#\n\n\nSpring Cloud\u4e2d@EnableEurekaClient\u6e90\u7801\u5206\u6790\n#\n\n\nSpring Cloud Eureka\u670d\u52a1\u4e0b\u7ebf(Cancel)\u6e90\u7801\u5206\u6790\n#",
            "title": "\u6e90\u7801\u5206\u6790"
        },
        {
            "location": "/source/#spring-cloud",
            "text": "",
            "title": "Spring Cloud\u6e90\u7801\u5206\u6790\u7cfb\u5217"
        },
        {
            "location": "/source/#spring-cloud-eureka",
            "text": "",
            "title": "Spring Cloud Eureka\u6e90\u7801\u5206\u6790"
        },
        {
            "location": "/source/#spring-cloud-eurekarenew",
            "text": "",
            "title": "Spring Cloud Eureka\u670d\u52a1\u7eed\u7ea6(Renew)\u6e90\u7801\u5206\u6790"
        },
        {
            "location": "/source/#spring-cloud-eureka_1",
            "text": "",
            "title": "Spring Cloud Eureka\u670d\u52a1\u6ce8\u518c\u6e90\u7801\u5206\u6790"
        },
        {
            "location": "/source/#spring-cloudenableeurekaclient",
            "text": "",
            "title": "Spring Cloud\u4e2d@EnableEurekaClient\u6e90\u7801\u5206\u6790"
        },
        {
            "location": "/source/#spring-cloud-eurekacancel",
            "text": "",
            "title": "Spring Cloud Eureka\u670d\u52a1\u4e0b\u7ebf(Cancel)\u6e90\u7801\u5206\u6790"
        }
    ]
}